{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\senya\\\\Documents\\\\Coding\\\\React Projects\\\\react-stock-ticker\\\\src\\\\components\\\\TickerAPIData.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport myKeys from \"../data/myKeys.json\";\n\nconst TickerAPIData = ({\n  tickername,\n  isstock\n}) => {\n  _s();\n\n  const [price, setPrice] = useState(\"...\");\n  const [onedaychange, setOnedaychange] = useState(\"-.--\");\n  const symbol = tickername;\n  const stock = isstock;\n\n  var ccxt = require('ccxt'); //console.log(symbol)\n  //console.log(ticker.tickername)\n  // const removeZeroes = (rawprice) => {\n  //     var tempprice = rawprice;\n  //     var splitprice = rawprice.split(\"\")\n  //     //console.log('b')\n  //     //console.log(rawprice, \"s\")\n  //     //console.log(rawprice.length)\n  //     //console.log(splitprice)\n  //     //rawprice = rawprice.toLocaleString('decimal', { minimumFractionDigits: 8 })\n  //     for (let i = splitprice.length - 1; i >= 0; i--) {\n  //         const element = splitprice[i];\n  //         //console.log('a')\n  //         //console.log(splitprice[i])\n  //         if (element == '0') {\n  //             console.log(i, element, tempprice.slice(0, -1))\n  //             tempprice = tempprice.slice(0, -1)\n  //         } else {\n  //             break;\n  //         }\n  //     }\n  //     //console.log(rawprice)\n  //     return tempprice\n  // }\n\n\n  const removeZeroes = (rawprice, tickername) => {\n    var tempprice = rawprice;\n    console.log(symbol); //console.log(tempprice.contains('0.'))\n    //console.log(typeof tempprice)\n    //console.log(typeof tempprice)\n\n    if ((tempprice + '').indexOf('e') > -1) {\n      //console.log('exponent')\n      tempprice = rawprice.toLocaleString('decimal', {\n        minimumFractionDigits: 8\n      });\n    } else {//console.log(tempprice)\n      //tempprice = rawprice.toLocaleString('decimal', { minimumFractionDigits: 2 })\n      //console.log('reg')\n      // if ((tempprice + '').indexOf('.') = -1) {\n      //     tempprice = rawprice + \".00\"\n      // }\n    } //tempprice = rawprice.toLocaleString('decimal', { minimumFractionDigits: 8 })\n    //tempprice = tempprice.replace(/(\\.\\d\\d)00$/, '')\n    //console.log('b', tempprice)\n\n\n    return tempprice;\n  };\n\n  useEffect(() => {\n    //console.log (ccxt.exchanges)\n    if (stock) {//console.log(symbol, \" is stock\")\n    } else {//console.log(symbol, \" is crpyto\")\n      }\n\n    const getPrice = async tickprice => {\n      let binance = new ccxt.binance({\n        apiKey: myKeys.API_KEY,\n        secret: myKeys.SECRET_KEY\n      });\n\n      try {\n        tickprice = (await binance.fetchTicker(symbol)).last; //console.log(await binance.loadMarkets())\n        //console.log(await binance.loadMarkets())\n        //console.log('a', tickprice)\n        //console.log('a', (await binance.fetchBalance()))\n        //let finalprice = tickprice.match(/[0]+$/)\n\n        let finalprice = removeZeroes(tickprice); //let finalprice = tickprice.slice(0, -4)\n        //console.log()\n\n        let onedayclose = (await binance.fetchOHLCV(symbol, \"1h\", Date.now() - 86400000))[0][1]; //console.log(onedayclose)\n\n        setPrice(finalprice);\n        setOnedaychange((tickprice / onedayclose * 100 - 100).toLocaleString('decimal', {\n          minimumFractionDigits: 2\n        })); //setPrice((await binance.fetchTicker(symbol)).last)\n        //tickprice = removeZeroes((await binance.fetchTicker(symbol)).last)\n      } catch (error) {\n        console.log(error);\n        setPrice(error.message);\n      } //console.log(ticker.tickername)\n\n    };\n\n    var timerID = setInterval(() => {\n      getPrice();\n    }, 2000); //console.log('a')\n\n    return function cleanup() {\n      //console.log('b')\n      clearInterval(timerID);\n    };\n  }, [price]); // useEffect(() => {\n  //     const getPrice = async () => {\n  //         const res = await fetch(\"https://finnhub.io/api/v1/quote?symbol=BTC&token=brodjmfrh5r8qo238g3g\");\n  //         const data = await res.json();\n  //         console.log(data);\n  //         setPrice(data.c)\n  //     };\n  //     getPrice()\n  //   }); \n  // useEffect(() => {  {/*Fetching API response here to set state*/}\n  // axios\n  //     .get(\n  //         `ttps://finnhub.io/api/v1/quote?symbol=AAPL&token=brodjmfrh5r8qo238g3g`\n  //     )\n  //     .then((res) => {\n  //         console.log(res.data);\n  //         setPrice(res.data.t);\n  //     })\n  //     .catch((err) => {\n  //         console.log(err);\n  //     });\n  // }, [price]);\n  // const options = {\n  //   method: 'GET',\n  //   url: 'https://apidojo-yahoo-finance-v1.p.rapidapi.com/auto-complete',\n  //   params: {q: 'TSLA', region: 'US'},\n  //   headers: {\n  //     'x-rapidapi-key': '0025dc6002msh8f9919dfc909b77p18f084jsn44758b02c23e',\n  //     'x-rapidapi-host': 'apidojo-yahoo-finance-v1.p.rapidapi.com'\n  //   }\n  // };\n  //     useEffect(() => {\n  //         axios.request(options).then(function (response) {\n  //             console.log(response.data);\n  //         }).catch(function (error) {\n  //             console.error(error);\n  //         });\n  //     }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), (() => {\n      if (onedaychange.indexOf('-') > -1) return /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"#f54242\"\n        },\n        children: [onedaychange, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 32\n      }, this);else if (onedaychange == \"0.00\") return /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"#000000\"\n        },\n        children: [onedaychange, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 32\n      }, this);else return /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"#42f551\"\n        },\n        children: [onedaychange, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 32\n      }, this);\n    })()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TickerAPIData, \"9Ulbe7c7EED2nbNAjhGU2gm8C88=\");\n\n_c = TickerAPIData;\nReactDOM.render( /*#__PURE__*/_jsxDEV(TickerAPIData, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 174,\n  columnNumber: 5\n}, this), document.getElementById('root'));\nexport default TickerAPIData;\n\nvar _c;\n\n$RefreshReg$(_c, \"TickerAPIData\");","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/src/components/TickerAPIData.js"],"names":["React","useEffect","useState","ReactDOM","myKeys","TickerAPIData","tickername","isstock","price","setPrice","onedaychange","setOnedaychange","symbol","stock","ccxt","require","removeZeroes","rawprice","tempprice","console","log","indexOf","toLocaleString","minimumFractionDigits","getPrice","tickprice","binance","apiKey","API_KEY","secret","SECRET_KEY","fetchTicker","last","finalprice","onedayclose","fetchOHLCV","Date","now","error","message","timerID","setInterval","cleanup","clearInterval","color","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport myKeys from \"../data/myKeys.json\"\r\n\r\nconst TickerAPIData = ({ tickername, isstock }) => {\r\n    const [price, setPrice] = useState(\"...\")\r\n    const [onedaychange, setOnedaychange] = useState(\"-.--\")\r\n    const symbol = tickername;\r\n    const stock = isstock;\r\n    var ccxt = require('ccxt')\r\n    //console.log(symbol)\r\n    //console.log(ticker.tickername)\r\n\r\n    // const removeZeroes = (rawprice) => {\r\n    //     var tempprice = rawprice;\r\n    //     var splitprice = rawprice.split(\"\")\r\n    //     //console.log('b')\r\n    //     //console.log(rawprice, \"s\")\r\n    //     //console.log(rawprice.length)\r\n    //     //console.log(splitprice)\r\n    //     //rawprice = rawprice.toLocaleString('decimal', { minimumFractionDigits: 8 })\r\n    //     for (let i = splitprice.length - 1; i >= 0; i--) {\r\n    //         const element = splitprice[i];\r\n    //         //console.log('a')\r\n    //         //console.log(splitprice[i])\r\n    //         if (element == '0') {\r\n    //             console.log(i, element, tempprice.slice(0, -1))\r\n    //             tempprice = tempprice.slice(0, -1)\r\n    //         } else {\r\n    //             break;\r\n    //         }\r\n    //     }\r\n    //     //console.log(rawprice)\r\n    //     return tempprice\r\n    // }\r\n\r\n    const removeZeroes = (rawprice, tickername) => {\r\n        var tempprice = rawprice\r\n        console.log(symbol)\r\n\r\n        //console.log(tempprice.contains('0.'))\r\n        //console.log(typeof tempprice)\r\n        //console.log(typeof tempprice)\r\n        if ((tempprice + '').indexOf('e') > -1) {\r\n            //console.log('exponent')\r\n            tempprice = rawprice.toLocaleString('decimal', { minimumFractionDigits: 8 })\r\n        } else {\r\n            //console.log(tempprice)\r\n            //tempprice = rawprice.toLocaleString('decimal', { minimumFractionDigits: 2 })\r\n            //console.log('reg')\r\n            // if ((tempprice + '').indexOf('.') = -1) {\r\n            //     tempprice = rawprice + \".00\"\r\n            // }\r\n        }\r\n        //tempprice = rawprice.toLocaleString('decimal', { minimumFractionDigits: 8 })\r\n        //tempprice = tempprice.replace(/(\\.\\d\\d)00$/, '')\r\n        //console.log('b', tempprice)\r\n        return tempprice\r\n    }\r\n\r\n    useEffect(() => {\r\n        //console.log (ccxt.exchanges)\r\n\r\n        if (stock) {\r\n            //console.log(symbol, \" is stock\")\r\n        } else {\r\n            //console.log(symbol, \" is crpyto\")\r\n        }\r\n        const getPrice = async (tickprice) => {\r\n            let binance = new ccxt.binance({\r\n                apiKey:\r\n                    myKeys.API_KEY,\r\n                secret:\r\n                    myKeys.SECRET_KEY,\r\n            });\r\n            try {\r\n                tickprice = (await binance.fetchTicker(symbol)).last\r\n                //console.log(await binance.loadMarkets())\r\n                //console.log(await binance.loadMarkets())\r\n                //console.log('a', tickprice)\r\n                //console.log('a', (await binance.fetchBalance()))\r\n                //let finalprice = tickprice.match(/[0]+$/)\r\n                let finalprice = removeZeroes(tickprice)\r\n                //let finalprice = tickprice.slice(0, -4)\r\n                //console.log()\r\n                let onedayclose = (await binance.fetchOHLCV(symbol, \"1h\", Date.now() - 86400000))[0][1]\r\n                //console.log(onedayclose)\r\n                setPrice(finalprice)\r\n                setOnedaychange(((tickprice / onedayclose * 100) - 100).toLocaleString('decimal', { minimumFractionDigits: 2 }))\r\n                //setPrice((await binance.fetchTicker(symbol)).last)\r\n                //tickprice = removeZeroes((await binance.fetchTicker(symbol)).last)\r\n            } catch (error) {\r\n                console.log(error)\r\n                setPrice(error.message)\r\n            }\r\n            //console.log(ticker.tickername)\r\n        }\r\n        var timerID = setInterval(() => {\r\n            getPrice()\r\n        }, 2000);\r\n        //console.log('a')\r\n        return function cleanup() {\r\n            //console.log('b')\r\n            clearInterval(timerID);\r\n        };\r\n    }, [price]);\r\n\r\n    // useEffect(() => {\r\n    //     const getPrice = async () => {\r\n    //         const res = await fetch(\"https://finnhub.io/api/v1/quote?symbol=BTC&token=brodjmfrh5r8qo238g3g\");\r\n    //         const data = await res.json();\r\n    //         console.log(data);\r\n    //         setPrice(data.c)\r\n    //     };\r\n    //     getPrice()\r\n    //   }); \r\n\r\n    // useEffect(() => {  {/*Fetching API response here to set state*/}\r\n    // axios\r\n    //     .get(\r\n    //         `ttps://finnhub.io/api/v1/quote?symbol=AAPL&token=brodjmfrh5r8qo238g3g`\r\n    //     )\r\n    //     .then((res) => {\r\n    //         console.log(res.data);\r\n    //         setPrice(res.data.t);\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log(err);\r\n    //     });\r\n    // }, [price]);\r\n\r\n    // const options = {\r\n    //   method: 'GET',\r\n    //   url: 'https://apidojo-yahoo-finance-v1.p.rapidapi.com/auto-complete',\r\n    //   params: {q: 'TSLA', region: 'US'},\r\n    //   headers: {\r\n    //     'x-rapidapi-key': '0025dc6002msh8f9919dfc909b77p18f084jsn44758b02c23e',\r\n    //     'x-rapidapi-host': 'apidojo-yahoo-finance-v1.p.rapidapi.com'\r\n    //   }\r\n    // };\r\n\r\n    //     useEffect(() => {\r\n    //         axios.request(options).then(function (response) {\r\n    //             console.log(response.data);\r\n    //         }).catch(function (error) {\r\n    //             console.error(error);\r\n    //         });\r\n\r\n\r\n    //     }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h4>\r\n                {price}\r\n            </h4>\r\n            {\r\n                (() => {\r\n                    if (onedaychange.indexOf('-') > -1)\r\n                        return <h3 style={{ color: \"#f54242\" }}>{onedaychange}%</h3>\r\n                    else if (onedaychange == \"0.00\")\r\n                        return <h3 style={{ color: \"#000000\" }}>{onedaychange}%</h3>\r\n                    else\r\n                        return <h3 style={{ color: \"#42f551\" }}>{onedaychange}%</h3>\r\n\r\n                })()\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\nReactDOM.render(\r\n    <TickerAPIData />,\r\n    document.getElementById('root')\r\n);\r\nexport default TickerAPIData\r\n\r\n"]},"metadata":{},"sourceType":"module"}