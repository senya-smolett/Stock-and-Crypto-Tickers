{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\senya\\\\Documents\\\\Coding\\\\React Projects\\\\react-stock-ticker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Clock from \"./components/Clock\";\nimport TickerInput from \"./components/TickerInput\";\nimport Tickers from \"./components/Tickers\";\nimport SymbolsList from \"./components/SymbolsList\";\n\nfunction App() {\n  _s();\n\n  const [tickers, setTickers] = useState([]);\n  useEffect(() => {\n    const getTickers = async () => {\n      const tickersFromServer = await fetchTickers();\n      setTickers(tickersFromServer);\n    };\n\n    getTickers();\n  }, []); //Fetch Tickers\n\n  const fetchTickers = async () => {\n    const res = await fetch(\"http://localhost:5000/tickers\");\n    const data = await res.json();\n    console.log(data);\n    return data;\n  };\n\n  const deleteTicker = async id => {\n    await fetch(`http://localhost:5000/tickers/${id}`, {\n      method: \"DELETE\"\n    });\n    setTickers(tickers.filter(ticker => ticker.id !== id));\n  }; //Add Ticker\n\n\n  const addTicker = async ticker => {\n    const res = await fetch(\"http://localhost:5000/tickers\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(ticker)\n    });\n    const data = await res.json();\n    setTickers([...tickers, data]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"title-container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TickerInput, {\n            className: \"ticker-search\",\n            onAddTicker: addTicker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Clock, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(SymbolsList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tickers, {\n      tickers: tickers,\n      onDelete: deleteTicker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"T/Pjbb3z+ejES8QYcD9CNAjQA4A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/src/App.js"],"names":["useState","useEffect","Container","Row","Col","Clock","TickerInput","Tickers","SymbolsList","App","tickers","setTickers","getTickers","tickersFromServer","fetchTickers","res","fetch","data","json","console","log","deleteTicker","id","method","filter","ticker","addTicker","headers","body","JSON","stringify"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAO,aAAP;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,UAAU,GAAG,YAAY;AAC7B,YAAMC,iBAAiB,GAAG,MAAMC,YAAY,EAA5C;AACAH,MAAAA,UAAU,CAACE,iBAAD,CAAV;AACD,KAHD;;AAIAD,IAAAA,UAAU;AACX,GANQ,EAMN,EANM,CAAT,CAHa,CAWb;;AACA,QAAME,YAAY,GAAG,YAAY;AAC/B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAP;AACD,GALD;;AAOA,QAAMI,YAAY,GAAG,MAAOC,EAAP,IAAc;AACjC,UAAMN,KAAK,CAAE,iCAAgCM,EAAG,EAArC,EAAwC;AACjDC,MAAAA,MAAM,EAAE;AADyC,KAAxC,CAAX;AAGAZ,IAAAA,UAAU,CAACD,OAAO,CAACc,MAAR,CAAgBC,MAAD,IAAYA,MAAM,CAACH,EAAP,KAAcA,EAAzC,CAAD,CAAV;AACD,GALD,CAnBa,CA0Bb;;;AACA,QAAMI,SAAS,GAAG,MAAOD,MAAP,IAAkB;AAClC,UAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AACvDO,MAAAA,MAAM,EAAE,MAD+C;AAEvDI,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF8C;AAKvDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALiD,KAAlC,CAAvB;AAOA,UAAMR,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAP,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaO,IAAb,CAAD,CAAV;AACD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iBAArB;AAAA,6BACE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,SAAS,EAAC,eAAvB;AAAuC,YAAA,WAAW,EAAES;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,GAAD;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAQE,QAAC,GAAD;AAAA,iCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAeE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEhB,OAAlB;AAA2B,MAAA,QAAQ,EAAEW;AAArC;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA1DQZ,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Clock from \"./components/Clock\";\nimport TickerInput from \"./components/TickerInput\";\nimport Tickers from \"./components/Tickers\";\nimport SymbolsList from \"./components/SymbolsList\";\n\nfunction App() {\n  const [tickers, setTickers] = useState([]);\n\n  useEffect(() => {\n    const getTickers = async () => {\n      const tickersFromServer = await fetchTickers();\n      setTickers(tickersFromServer);\n    };\n    getTickers();\n  }, []);\n\n  //Fetch Tickers\n  const fetchTickers = async () => {\n    const res = await fetch(\"http://localhost:5000/tickers\");\n    const data = await res.json();\n    console.log(data);\n    return data;\n  };\n\n  const deleteTicker = async (id) => {\n    await fetch(`http://localhost:5000/tickers/${id}`, {\n      method: \"DELETE\",\n    });\n    setTickers(tickers.filter((ticker) => ticker.id !== id));\n  };\n\n  //Add Ticker\n  const addTicker = async (ticker) => {\n    const res = await fetch(\"http://localhost:5000/tickers\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(ticker),\n    });\n    const data = await res.json();\n    setTickers([...tickers, data]);\n  };\n\n  return (\n    <div className=\"App\">\n      <Container className=\"title-container\">\n        <Row>\n          <Col>\n            <TickerInput className=\"ticker-search\" onAddTicker={addTicker} />\n          </Col>\n          <Col>\n            <Clock />\n          </Col>\n\n          <Col>\n            <SymbolsList />\n          </Col>\n        </Row>\n      </Container>\n      <Tickers tickers={tickers} onDelete={deleteTicker}></Tickers>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}