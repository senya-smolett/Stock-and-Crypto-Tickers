{"ast":null,"code":"\"use strict\"; // ----------------------------------------------------------------------------\n// There's been a lot of messing with this code...\n// The problem is to satisfy the following requirements:\n// - properly detect isNode == true on server side and isNode == false in the browser (on client side)\n// - make sure create-react-app, react-starter-kit and other react frameworks work\n// - make sure it does not break the browserified version (when linked into a html from a cdn)\n// - make sure it does not break the webpacking and babel-transpiled scripts\n// - make sure it works in Electron\n// - make sure it works with Angular.js\n// - make sure it does not break other possible usage scenarios\n\nconst isBrowser = typeof window !== 'undefined';\nconst isElectron = typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined';\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\nconst isWindows = typeof process !== 'undefined' && process.platform === \"win32\";\nconst isNode = !(isBrowser || isWebWorker);\nconst defaultFetch = typeof fetch === \"undefined\" ? require('../../static_dependencies/fetch-ponyfill/fetch-node')().fetch : fetch; // ----------------------------------------------------------------------------\n\nmodule.exports = {\n  isBrowser,\n  isElectron,\n  isWebWorker,\n  isNode,\n  isWindows,\n  defaultFetch\n};","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/node_modules/ccxt/js/base/functions/platform.js"],"names":["isBrowser","window","isElectron","process","versions","electron","isWebWorker","WorkerGlobalScope","self","isWindows","platform","isNode","defaultFetch","fetch","require","module","exports"],"mappings":"AAAA,a,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,SAAS,GAAG,OAAOC,MAAP,KAAkB,WAApC;AAEA,MAAMC,UAAU,GAAG,OAAOC,OAAP,KAAmB,WAAnB,IACA,OAAOA,OAAO,CAACC,QAAf,KAA4B,WAD5B,IAEA,OAAOD,OAAO,CAACC,QAAR,CAAiBC,QAAxB,KAAqC,WAFxD;AAIA,MAAMC,WAAW,GAAG,OAAOC,iBAAP,KAA6B,WAA7B,IAA6CC,IAAI,YAAYD,iBAAjF;AAEA,MAAME,SAAS,GAAG,OAAON,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACO,QAAR,KAAqB,OAAzE;AAEA,MAAMC,MAAM,GAAG,EAAEX,SAAS,IAAIM,WAAf,CAAf;AAEA,MAAMM,YAAY,GAAG,OAAQC,KAAR,KAAmB,WAAnB,GAAiCC,OAAO,CAAE,qDAAF,CAAP,GAAmED,KAApG,GAA4GA,KAAjI,C,CAEA;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AAEbhB,EAAAA,SAFa;AAGbE,EAAAA,UAHa;AAIbI,EAAAA,WAJa;AAKbK,EAAAA,MALa;AAMbF,EAAAA,SANa;AAObG,EAAAA;AAPa,CAAjB","sourcesContent":["\"use strict\";\n\n// ----------------------------------------------------------------------------\n// There's been a lot of messing with this code...\n// The problem is to satisfy the following requirements:\n// - properly detect isNode == true on server side and isNode == false in the browser (on client side)\n// - make sure create-react-app, react-starter-kit and other react frameworks work\n// - make sure it does not break the browserified version (when linked into a html from a cdn)\n// - make sure it does not break the webpacking and babel-transpiled scripts\n// - make sure it works in Electron\n// - make sure it works with Angular.js\n// - make sure it does not break other possible usage scenarios\n\nconst isBrowser = typeof window !== 'undefined'\n\nconst isElectron = typeof process !== 'undefined' &&\n                   typeof process.versions !== 'undefined' &&\n                   typeof process.versions.electron !== 'undefined'\n\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && (self instanceof WorkerGlobalScope)\n\nconst isWindows = typeof process !== 'undefined' && process.platform === \"win32\"\n\nconst isNode = !(isBrowser || isWebWorker)\n\nconst defaultFetch = typeof (fetch) === \"undefined\" ? require ('../../static_dependencies/fetch-ponyfill/fetch-node') ().fetch : fetch\n\n// ----------------------------------------------------------------------------\n\nmodule.exports = {\n\n    isBrowser,\n    isElectron,\n    isWebWorker,\n    isNode,\n    isWindows,\n    defaultFetch,\n}"]},"metadata":{},"sourceType":"script"}