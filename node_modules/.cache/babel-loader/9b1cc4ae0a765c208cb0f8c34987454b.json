{"ast":null,"code":"'use strict';\n\nvar utils = exports;\n\nvar BN = require('../../../BN/bn');\n\nutils.assert = function (condition, errorMessage) {\n  if (!condition) {\n    throw new Error(errorMessage);\n  }\n}; // Represent num in a w-NAF form\n\n\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << w + 1;\n  var k = num.clone();\n\n  while (k.cmpn(1) >= 0) {\n    var z;\n\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf.push(z); // Optimization, shift by word if possible\n\n    var shift = k.cmpn(0) !== 0 && k.andln(ws - 1) === 0 ? w + 1 : 1;\n\n    for (var i = 1; i < shift; i++) naf.push(0);\n\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\n\nutils.getNAF = getNAF; // Represent k1, k2 in a Joint Sparse Form\n\nfunction getJSF(k1, k2) {\n  var jsf = [[], []];\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = k1.andln(3) + d1 & 3;\n    var m24 = k2.andln(3) + d2 & 3;\n    if (m14 === 3) m14 = -1;\n    if (m24 === 3) m24 = -1;\n    var u1;\n\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = k1.andln(7) + d1 & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n    }\n\n    jsf[0].push(u1);\n    var u2;\n\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = k2.andln(7) + d2 & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n    }\n\n    jsf[1].push(u2); // Second phase\n\n    if (2 * d1 === u1 + 1) d1 = 1 - d1;\n    if (2 * d2 === u2 + 1) d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\n\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n  };\n}\n\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;\n}\n\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\n\nutils.intFromLE = intFromLE; // used to convert `CryptoJS` wordArrays into `crypto` hex buffers\n\nfunction wordToByteArray(word, length) {\n  var ba = [],\n      xFF = 0xFF;\n  if (length > 0) ba.push(word >>> 24);\n  if (length > 1) ba.push(word >>> 16 & xFF);\n  if (length > 2) ba.push(word >>> 8 & xFF);\n  if (length > 3) ba.push(word & xFF);\n  return ba;\n}\n\nfunction wordArrayToBuffer(wordArray) {\n  let length = undefined;\n\n  if (wordArray.hasOwnProperty(\"sigBytes\") && wordArray.hasOwnProperty(\"words\")) {\n    length = wordArray.sigBytes;\n    wordArray = wordArray.words;\n  } else {\n    throw Error('Argument not a wordArray');\n  }\n\n  const result = [];\n  let bytes = [];\n  let i = 0;\n\n  while (length > 0) {\n    bytes = wordToByteArray(wordArray[i], Math.min(4, length));\n    length -= bytes.length;\n    result.push(bytes);\n    i++;\n  }\n\n  return [].concat.apply([], result);\n}\n\nutils.wordArrayToBuffer = wordArrayToBuffer; // https://github.com/indutny/minimalistic-crypto-utils/blob/master/lib/utils.js\n// moved here to remove the dep\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg)) return msg.slice();\n  if (!msg) return [];\n  var res = [];\n\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n\n    return res;\n  }\n\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0) msg = '0' + msg;\n\n    for (var i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi) res.push(hi, lo);else res.push(lo);\n    }\n  }\n\n  return res;\n}\n\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1) return '0' + word;else return word;\n}\n\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));\n\n  return res;\n}\n\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex') return toHex(arr);else return arr;\n};","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/node_modules/ccxt/js/static_dependencies/elliptic/lib/elliptic/utils.js"],"names":["utils","exports","BN","require","assert","condition","errorMessage","Error","getNAF","num","w","naf","ws","k","clone","cmpn","z","isOdd","mod","andln","isubn","push","shift","i","iushrn","getJSF","k1","k2","jsf","d1","d2","m14","m24","u1","m8","u2","cachedProperty","obj","name","computer","key","prototype","undefined","call","parseBytes","bytes","toArray","intFromLE","wordToByteArray","word","length","ba","xFF","wordArrayToBuffer","wordArray","hasOwnProperty","sigBytes","words","result","Math","min","concat","apply","msg","enc","Array","isArray","slice","res","replace","parseInt","c","charCodeAt","hi","lo","zero2","toHex","toString","encode","arr"],"mappings":"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","sourcesContent":["'use strict';\n\nvar utils = exports;\nvar BN = require('../../../BN/bn');\n\nutils.assert = function (condition, errorMessage) {\n  if (!condition) {\n    throw new Error(errorMessage)\n  }\n};\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n// used to convert `CryptoJS` wordArrays into `crypto` hex buffers\nfunction wordToByteArray(word, length) {\n  var ba = [],\n      xFF = 0xFF;\n  if (length > 0)\n    ba.push(word >>> 24);\n  if (length > 1)\n    ba.push((word >>> 16) & xFF);\n  if (length > 2)\n    ba.push((word >>> 8) & xFF);\n  if (length > 3)\n    ba.push(word & xFF);\n\n  return ba;\n}\n\nfunction wordArrayToBuffer(wordArray) {\n  let length = undefined;\n  if (wordArray.hasOwnProperty(\"sigBytes\") && wordArray.hasOwnProperty(\"words\")) {\n    length = wordArray.sigBytes;\n    wordArray = wordArray.words;\n  } else {\n    throw Error('Argument not a wordArray')\n  }\n\n  const result = []\n  let bytes = []\n  let i = 0;\n  while (length > 0) {\n    bytes = wordToByteArray(wordArray[i], Math.min(4, length));\n    length -= bytes.length;\n    result.push(bytes);\n    i++;\n  }\n  return [].concat.apply([], result)\n}\n\nutils.wordArrayToBuffer = wordArrayToBuffer;\n\n// https://github.com/indutny/minimalistic-crypto-utils/blob/master/lib/utils.js\n// moved here to remove the dep\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n"]},"metadata":{},"sourceType":"script"}