{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\senya\\\\Documents\\\\Coding\\\\React Projects\\\\react-stock-ticker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport TickerInput from \"./components/TickerInput\";\nimport Tickers from \"./components/Tickers\";\n\nfunction App() {\n  _s();\n\n  const [tickers, setTickers] = useState([]);\n  useEffect(() => {\n    const getTickers = async () => {\n      const tickersFromServer = await fetchTickers();\n      setTickers(tickersFromServer);\n    };\n\n    getTickers();\n  }, []); //Fetch Tickers\n\n  const fetchTickers = async () => {\n    const res = await fetch(\"http://localhost:5000/tickers\");\n    const data = await res.json();\n    console.log(data);\n    return data;\n  };\n\n  const deleteTicker = async id => {\n    await fetch(`http://localhost:5000/tickers/${id}`, {\n      method: \"DELETE\"\n    });\n    setTickers(tickers.filter(ticker => ticker.id !== id));\n  }; //Add Ticker\n\n\n  const addTicker = ticker => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTicker = {\n      id,\n      ...ticker\n    };\n    setTickers([...tickers, newTicker]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TickerInput, {\n      onAddTicker: addTicker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tickers, {\n      tickers: tickers,\n      onDelete: deleteTicker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"T/Pjbb3z+ejES8QYcD9CNAjQA4A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/src/App.js"],"names":["useState","useEffect","TickerInput","Tickers","App","tickers","setTickers","getTickers","tickersFromServer","fetchTickers","res","fetch","data","json","console","log","deleteTicker","id","method","filter","ticker","addTicker","Math","floor","random","newTicker"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,UAAU,GAAG,YAAY;AAC7B,YAAMC,iBAAiB,GAAG,MAAMC,YAAY,EAA5C;AACAH,MAAAA,UAAU,CAACE,iBAAD,CAAV;AACD,KAHD;;AAIAD,IAAAA,UAAU;AACX,GANQ,EAMN,EANM,CAAT,CAHa,CAWb;;AACA,QAAME,YAAY,GAAG,YAAY;AAC/B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAP;AACD,GALD;;AAOA,QAAMI,YAAY,GAAG,MAAOC,EAAP,IAAc;AACjC,UAAMN,KAAK,CAAE,iCAAgCM,EAAG,EAArC,EAAwC;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAxC,CAAX;AACAZ,IAAAA,UAAU,CAACD,OAAO,CAACc,MAAR,CAAgBC,MAAD,IAAYA,MAAM,CAACH,EAAP,KAAcA,EAAzC,CAAD,CAAV;AACD,GAHD,CAnBa,CAwBb;;;AACA,QAAMI,SAAS,GAAID,MAAD,IAAY;AAC5B,UAAMH,EAAE,GAAGK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,SAAS,GAAG;AAAER,MAAAA,EAAF;AAAM,SAAGG;AAAT,KAAlB;AACAd,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaoB,SAAb,CAAD,CAAV;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,WAAW,EAAEJ;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEhB,OAAlB;AAA2B,MAAA,QAAQ,EAAEW;AAArC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GArCQZ,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport TickerInput from \"./components/TickerInput\";\nimport Tickers from \"./components/Tickers\";\n\nfunction App() {\n  const [tickers, setTickers] = useState([]);\n\n  useEffect(() => {\n    const getTickers = async () => {\n      const tickersFromServer = await fetchTickers();\n      setTickers(tickersFromServer);\n    };\n    getTickers();\n  }, []);\n\n  //Fetch Tickers\n  const fetchTickers = async () => {\n    const res = await fetch(\"http://localhost:5000/tickers\");\n    const data = await res.json();\n    console.log(data);\n    return data;\n  };\n\n  const deleteTicker = async (id) => {\n    await fetch(`http://localhost:5000/tickers/${id}`, { method: \"DELETE\" });\n    setTickers(tickers.filter((ticker) => ticker.id !== id));\n  };\n\n  //Add Ticker\n  const addTicker = (ticker) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTicker = { id, ...ticker };\n    setTickers([...tickers, newTicker]);\n  };\n\n  return (\n    <div className=\"App\">\n      <TickerInput onAddTicker={addTicker} />\n      <Tickers tickers={tickers} onDelete={deleteTicker}></Tickers>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}