{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\senya\\\\Documents\\\\Coding\\\\React Projects\\\\react-stock-ticker\\\\src\\\\components\\\\SymbolsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Dropdown } from 'react-bootstrap';\nimport { Typeahead } from 'react-bootstrap-typeahead'; //import { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst SymbolsList = () => {\n  _s();\n\n  const [symbols, setSymbols] = useState([]);\n\n  var ccxt = require('ccxt');\n\n  console.log(\"zx\", symbols.length);\n  console.log(\"2\");\n  useEffect(() => {\n    console.log(\"z\", symbols.length);\n\n    const getSymbols = async () => {\n      console.log(\"3\");\n      let binance = new ccxt.binance({\n        apiKey: \"erShVoKXGbqzqDdz6ejYEIlB79N4DXitzeWBuiYJtKwXCgWZB0uXWwyNQHBeWHKz\",\n        secret: \"eMAOSSCJmfqOGBKfaAxSElIj28I7Nam40Rb0RVM2IbA4Vb5mfJsn9eEdEGkv8Qao\"\n      });\n\n      try {\n        //symbols = (await binance.fetchTicker(symbol)).last\n        //console.log(await binance.loadMarkets())\n        //console.log('a', tickprice)\n        //console.log('a', (await binance.fetchBalance()))\n        //let finalprice = tickprice.match(/[0]+$/)\n        //let finalprice = removeZeroes(tickprice)\n        console.log(await binance.loadMarkets());\n        setSymbols(binance.symbols);\n        console.log(\"a\", typeof symbols);\n        console.log(symbols[0]);\n        console.log(\"b\", typeof (await binance.fetchMarkets()).getSymbols); //console.log(\"41x\", Date.now())\n        //console.log(\"q\", binance.symbols[])\n        //setSymbols(finalprice)\n      } catch (error) {\n        console.log(error); //setPrice(error.message)\n      }\n\n      console.log(\"1\");\n    };\n\n    getSymbols();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SymbolsList, \"brKb7iIO9eg4OHonEwrSwc5wBF4=\");\n\n_c = SymbolsList;\nexport default SymbolsList; // {tickers.map((ticker) => (\n//   <Ticker\n//     key={ticker.id}\n//     ticker={ticker}\n//     onDelete={() => onDelete(ticker.id)}\n//   >\n//     {ticker.tickername}\n//   </Ticker>\n// ))}\n\nvar _c;\n\n$RefreshReg$(_c, \"SymbolsList\");","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/src/components/SymbolsList.js"],"names":["React","useState","useEffect","Dropdown","Typeahead","SymbolsList","symbols","setSymbols","ccxt","require","console","log","length","getSymbols","binance","apiKey","secret","loadMarkets","fetchMarkets","error"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,2BAA1B,C,CACA;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AACA,MAAIO,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBL,OAAO,CAACM,MAA1B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBL,OAAO,CAACM,MAAzB;;AACA,UAAMC,UAAU,GAAG,YAAY;AAC7BH,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,UAAIG,OAAO,GAAG,IAAIN,IAAI,CAACM,OAAT,CAAiB;AAC7BC,QAAAA,MAAM,EACJ,kEAF2B;AAG7BC,QAAAA,MAAM,EACJ;AAJ2B,OAAjB,CAAd;;AAMA,UAAI;AACF;AACA;AACA;AACA;AACA;AACA;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAa,MAAMG,OAAO,CAACG,WAAR,EAAnB;AACAV,QAAAA,UAAU,CAACO,OAAO,CAACR,OAAT,CAAV;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiB,OAAOL,OAAxB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAAC,CAAD,CAAnB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiB,OAAO,CAAC,MAAMG,OAAO,CAACI,YAAR,EAAP,EAA+BL,UAAvD,EAXE,CAYF;AACA;AACA;AACD,OAfD,CAeE,OAAOM,KAAP,EAAc;AACdT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ,EADc,CAEd;AACD;;AACDT,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AAED,KA7BD;;AA8BAE,IAAAA,UAAU;AAEX,GAlCQ,EAkCN,EAlCM,CAAT;AAoCA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAtED;;GAAMR,W;;KAAAA,W;AAwEN,eAAeA,WAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\n//import { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nconst SymbolsList = () => {\r\n  const [symbols, setSymbols] = useState([]);\r\n  var ccxt = require('ccxt')\r\n  console.log(\"zx\", symbols.length)\r\n  console.log(\"2\")\r\n\r\n  useEffect(() => {\r\n    console.log(\"z\", symbols.length)\r\n    const getSymbols = async () => {\r\n      console.log(\"3\")\r\n      let binance = new ccxt.binance({\r\n        apiKey:\r\n          \"erShVoKXGbqzqDdz6ejYEIlB79N4DXitzeWBuiYJtKwXCgWZB0uXWwyNQHBeWHKz\",\r\n        secret:\r\n          \"eMAOSSCJmfqOGBKfaAxSElIj28I7Nam40Rb0RVM2IbA4Vb5mfJsn9eEdEGkv8Qao\",\r\n      });\r\n      try {\r\n        //symbols = (await binance.fetchTicker(symbol)).last\r\n        //console.log(await binance.loadMarkets())\r\n        //console.log('a', tickprice)\r\n        //console.log('a', (await binance.fetchBalance()))\r\n        //let finalprice = tickprice.match(/[0]+$/)\r\n        //let finalprice = removeZeroes(tickprice)\r\n        console.log((await binance.loadMarkets()))\r\n        setSymbols(binance.symbols)\r\n        console.log(\"a\", typeof symbols)\r\n        console.log(symbols[0])\r\n        console.log(\"b\", typeof (await binance.fetchMarkets()).getSymbols)\r\n        //console.log(\"41x\", Date.now())\r\n        //console.log(\"q\", binance.symbols[])\r\n        //setSymbols(finalprice)\r\n      } catch (error) {\r\n        console.log(error)\r\n        //setPrice(error.message)\r\n      }\r\n      console.log(\"1\")\r\n\r\n    }\r\n    getSymbols()\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n\r\n      {/* <Typeahead\r\n        clearButton\r\n        defaultSelected={options.slice(0, 1)}\r\n        id=\"selections-example\"\r\n        labelKey=\"name\"\r\n        onInputChange={(text, e) => { console.log(text, e); }}\r\n        options={symbols}\r\n        placeholder=\"Choose a state...\"\r\n      /> */}\r\n\r\n      {/* <Dropdown>\r\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n          List Symbols\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown> */}\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SymbolsList;\r\n// {tickers.map((ticker) => (\r\n//   <Ticker\r\n//     key={ticker.id}\r\n//     ticker={ticker}\r\n//     onDelete={() => onDelete(ticker.id)}\r\n//   >\r\n//     {ticker.tickername}\r\n//   </Ticker>\r\n// ))}\r\n"]},"metadata":{},"sourceType":"module"}