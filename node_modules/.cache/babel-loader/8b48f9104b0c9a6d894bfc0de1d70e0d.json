{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\senya\\\\Documents\\\\Coding\\\\React Projects\\\\react-stock-ticker\\\\src\\\\components\\\\TickersCopy.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Ticker from \"./Ticker\";\nimport GridLayout from \"react-grid-layout\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst TickersCopy = ({\n  tickers,\n  onDelete\n}) => {\n  _s();\n\n  // const [layout, setLayout] = useState({ i: 0, x: 0, y: 0, w: 0, h: 0 })\n  const [layout, setLayout] = useState([]);\n  useEffect(() => {\n    //setLayout(getLayout())\n    getLayout();\n    console.log(\"3jhdf\", layout);\n  }, []);\n  console.log(tickers); // const ticks = () => {\n  //   console.log(\"p\")\n  //   tickers.map((ticker) => {\n  //     return (\n  //       <div style={{ backgroundColor: \"grey\" }} data-grid={{ x: ticker.id, y: 0, w: 1, h: 2 }}>\n  //         <Ticker\n  //           key={ticker.id}\n  //           ticker={ticker}\n  //           onDelete={() => onDelete(ticker.id)}\n  //         >\n  //           {ticker.tickername}\n  //         </Ticker>\n  //       </div>\n  //     )\n  //   })\n  // }\n\n  const getLayout = () => {\n    var templayout = [];\n    console.log(\"asd\");\n\n    for (let index = 0; index < tickers.length; index++) {\n      const element = tickers[index];\n      var tempobj = {\n        i: element.id,\n        x: element.position[0],\n        y: element.position[1],\n        w: 2,\n        h: 5\n      };\n      templayout.push(tempobj);\n    } //setLayout([1, 2, 3])\n\n\n    console.log(\"123123\", layout);\n    return templayout;\n  }; //setLayout(getLayout())\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridLayout, {\n      className: \"layout\",\n      cols: 12,\n      rowHeight: 30,\n      width: 1200,\n      layout: {\n        x: 0,\n        y: 0,\n        w: 2,\n        h: 5\n      },\n      children: tickers.map(ticker => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: \"grey\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Ticker, {\n            ticker: ticker,\n            onDelete: () => onDelete(ticker.id),\n            children: ticker.tickername\n          }, ticker.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, ticker.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridLayout, {\n      className: \"layout\",\n      cols: 12,\n      rowHeight: 30,\n      width: 1200,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"grey\"\n        },\n        \"data-grid\": {\n          x: 0,\n          y: 0,\n          w: 2,\n          h: 6\n        },\n        children: \"a\"\n      }, \"a\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"grey\"\n        },\n        \"data-grid\": {\n          x: 1,\n          y: 0,\n          w: 2,\n          h: 2,\n          minW: 2,\n          maxW: 4\n        },\n        children: \"b\"\n      }, \"b\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"grey\"\n        },\n        \"data-grid\": {\n          x: 2,\n          y: 0,\n          w: 2,\n          h: 2\n        },\n        children: \"c\"\n      }, \"c\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TickersCopy, \"XLCnRwdQpCU9xW+dC2g7NYOqtVc=\");\n\n_c = TickersCopy;\nexport default TickersCopy;\n\nvar _c;\n\n$RefreshReg$(_c, \"TickersCopy\");","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/src/components/TickersCopy.js"],"names":["React","Ticker","GridLayout","useState","useEffect","TickersCopy","tickers","onDelete","layout","setLayout","getLayout","console","log","templayout","index","length","element","tempobj","i","id","x","position","y","w","h","push","map","ticker","backgroundColor","tickername","minW","maxW"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Ticker from \"./Ticker\";\r\nimport GridLayout from \"react-grid-layout\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst TickersCopy = ({ tickers, onDelete }) => {\r\n  // const [layout, setLayout] = useState({ i: 0, x: 0, y: 0, w: 0, h: 0 })\r\n  const [layout, setLayout] = useState([])\r\n\r\n  useEffect(() => {\r\n    //setLayout(getLayout())\r\n    getLayout()\r\n    console.log(\"3jhdf\", layout)\r\n  }, [])\r\n\r\n  console.log(tickers);\r\n  // const ticks = () => {\r\n  //   console.log(\"p\")\r\n  //   tickers.map((ticker) => {\r\n  //     return (\r\n  //       <div style={{ backgroundColor: \"grey\" }} data-grid={{ x: ticker.id, y: 0, w: 1, h: 2 }}>\r\n  //         <Ticker\r\n  //           key={ticker.id}\r\n  //           ticker={ticker}\r\n  //           onDelete={() => onDelete(ticker.id)}\r\n  //         >\r\n  //           {ticker.tickername}\r\n  //         </Ticker>\r\n  //       </div>\r\n  //     )\r\n  //   })\r\n  // }\r\n  const getLayout = () => {\r\n    var templayout = []\r\n    console.log(\"asd\")\r\n    for (let index = 0; index < tickers.length; index++) {\r\n      const element = tickers[index];\r\n      var tempobj = { i: element.id, x: element.position[0], y: element.position[1], w: 2, h: 5 }\r\n      templayout.push(tempobj)\r\n    }\r\n    //setLayout([1, 2, 3])\r\n    console.log(\"123123\", layout)\r\n    return templayout\r\n  }\r\n  //setLayout(getLayout())\r\n\r\n  return (\r\n    <>\r\n      <GridLayout className=\"layout\" cols={12} rowHeight={30} width={1200} layout={{ x: 0, y: 0, w: 2, h: 5 }}>\r\n        {\r\n          tickers.map((ticker) => {\r\n            return (\r\n              <div key={ticker.id} style={{ backgroundColor: \"grey\" }}>\r\n                <Ticker\r\n                  key={ticker.id}\r\n                  ticker={ticker}\r\n                  onDelete={() => onDelete(ticker.id)}\r\n                >\r\n                  {ticker.tickername}\r\n                </Ticker>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </GridLayout>\r\n      <GridLayout className=\"layout\" cols={12} rowHeight={30} width={1200}>\r\n        <div key=\"a\" style={{ backgroundColor: \"grey\" }} data-grid={{ x: 0, y: 0, w: 2, h: 6 }}>a</div>\r\n        <div key=\"b\" style={{ backgroundColor: \"grey\" }} data-grid={{ x: 1, y: 0, w: 2, h: 2, minW: 2, maxW: 4 }}>b</div>\r\n        <div key=\"c\" style={{ backgroundColor: \"grey\" }} data-grid={{ x: 2, y: 0, w: 2, h: 2 }}>c</div>\r\n      </GridLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TickersCopy;\r\n"]},"metadata":{},"sourceType":"module"}