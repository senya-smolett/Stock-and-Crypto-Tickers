{"ast":null,"code":"var util = require('util');\n\nvar Promise = require('bluebird');\n\nvar _ = require('lodash');\n\nvar debug = require('debug')('yahoo-finance:yahooCrumb');\n\nvar _constants = require('./constants');\n\nvar _utils = require('./utils'); // Faster but probably more brittle option:\n// var crumbRE = /\"CrumbStore\":\\{\"crumb\":\"(.+?)\"\\}/;\n\n\nvar dataRE = /^root.App.main = (\\{.*\\});$/m;\n\nfunction parseAndGetCrumb(body) {\n  var match = dataRE.exec(body);\n\n  if (!match) {\n    throw new Error(\"Could not match root.App.main line.  If this happens \" + \"consistently, Yahoo output has changed and you should open a bug \" + \"report.\");\n  }\n\n  var data;\n\n  try {\n    data = JSON.parse(match[1]);\n  } catch (err) {\n    console.error(err);\n    throw new Error(\"root.App.main line (or regexp) did not capture valid \" + \"JSON.  If this happens consistently, please open a bug report.\");\n  }\n\n  var crumb;\n  if (!data.context) throw new Error(\"root.Api.main JSON structure has changed.  If this \" + \"happens consistently, please open a bug report.\");\n  var dispatcher = data.context.dispatcher;\n  crumb = dispatcher && dispatcher.stores && dispatcher.stores.CrumbStore && dispatcher.stores.CrumbStore.crumb;\n\n  if (!crumb) {\n    console.warn('root.Api.main context.dispatcher.stores.CrumbStore.crumb ' + 'structure no longer exists, please open an issue.');\n    var plugins = data.context.plugins;\n    crumb = plugins && plugins.ServicePlugin && plugins.ServicePlugin.xhrContext && plugins.ServicePlugin.xhrContext.crumb;\n    if (!crumb) throw new Error('root.Api.main ' + 'context.plugins.ServicePlugin.xhrContext.crumb' + 'structure no longer exists, please open an issue.');\n  }\n\n  return crumb;\n}\n\nvar crumb = null;\nvar rpOpts = {\n  resolveWithFullResponse: true\n};\n\nfunction fetch(symbol) {\n  var url = _constants.HISTORICAL_CRUMB_URL.replace(/\\$SYMBOL/, symbol);\n\n  return _utils.download(url, '', rpOpts).then(function (res) {\n    crumb = parseAndGetCrumb(res.body);\n    return crumb;\n  }).catch(function (err) {\n    throw new Error(util.format('Failed to get crumb (%s)', err.message));\n  });\n}\n\nfunction getCrumb(symbol) {\n  // Invalidate the crumb if the cookie is expired.\n  if (crumb) {\n    // Note: getCookies() won't return expired cookies and we rely on this.\n    var cookies = _utils.cookiejar.getCookies(_constants.HISTORICAL_CRUMB_URL);\n\n    var bCookie = _.find(cookies, {\n      key: 'B'\n    });\n\n    if (!bCookie) {\n      debug('No valid cookies, invalidating crumb');\n      crumb = null;\n    }\n  }\n\n  if (crumb) {\n    debug('Returning cached crumb');\n    return Promise.resolve(crumb);\n  } else {\n    debug('Fetching a new cookie & crumb');\n    return fetch(symbol).then(function (crumb) {\n      return crumb;\n    });\n  }\n} // API\n\n\nexports.getCrumb = getCrumb; // for testing\n\nexports.parseAndGetCrumb = parseAndGetCrumb;","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/node_modules/yahoo-finance/lib/yahooCrumb.js"],"names":["util","require","Promise","_","debug","_constants","_utils","dataRE","parseAndGetCrumb","body","match","exec","Error","data","JSON","parse","err","console","error","crumb","context","dispatcher","stores","CrumbStore","warn","plugins","ServicePlugin","xhrContext","rpOpts","resolveWithFullResponse","fetch","symbol","url","HISTORICAL_CRUMB_URL","replace","download","then","res","catch","format","message","getCrumb","cookies","cookiejar","getCookies","bCookie","find","key","resolve","exports"],"mappings":"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","sourcesContent":["var util = require('util');\n\nvar Promise = require('bluebird');\nvar _ = require('lodash');\nvar debug = require('debug')('yahoo-finance:yahooCrumb');\n\nvar _constants = require('./constants');\nvar _utils = require('./utils');\n\n// Faster but probably more brittle option:\n// var crumbRE = /\"CrumbStore\":\\{\"crumb\":\"(.+?)\"\\}/;\n\nvar dataRE = /^root.App.main = (\\{.*\\});$/m;\nfunction parseAndGetCrumb(body) {\n  var match = dataRE.exec(body);\n  if (!match) {\n    throw new Error(\"Could not match root.App.main line.  If this happens \" +\n      \"consistently, Yahoo output has changed and you should open a bug \" +\n      \"report.\");\n  }\n\n  var data;\n  try {\n    data = JSON.parse(match[1]);\n  } catch (err) {\n    console.error(err);\n    throw new Error(\"root.App.main line (or regexp) did not capture valid \" +\n      \"JSON.  If this happens consistently, please open a bug report.\");\n  }\n\n  var crumb;\n  if (!data.context)\n    throw new Error(\"root.Api.main JSON structure has changed.  If this \" +\n      \"happens consistently, please open a bug report.\");\n\n  var dispatcher = data.context.dispatcher;\n  crumb = dispatcher &&\n    dispatcher.stores &&\n    dispatcher.stores.CrumbStore &&\n    dispatcher.stores.CrumbStore.crumb;\n\n  if (!crumb) {\n    console.warn('root.Api.main context.dispatcher.stores.CrumbStore.crumb ' +\n      'structure no longer exists, please open an issue.');\n\n    var plugins = data.context.plugins;\n    crumb = plugins &&\n      plugins.ServicePlugin &&\n      plugins.ServicePlugin.xhrContext &&\n      plugins.ServicePlugin.xhrContext.crumb;\n\n    if (!crumb)\n      throw new Error('root.Api.main ' +\n        'context.plugins.ServicePlugin.xhrContext.crumb' +\n        'structure no longer exists, please open an issue.')\n  }\n\n  return crumb;\n}\n\nvar crumb = null;\nvar rpOpts = { resolveWithFullResponse: true };\n\nfunction fetch(symbol) {\n  var url = _constants.HISTORICAL_CRUMB_URL.replace(/\\$SYMBOL/, symbol);\n  return _utils.download(url, '', rpOpts)\n    .then(function (res) {\n      crumb = parseAndGetCrumb(res.body);\n      return crumb;\n    })\n    .catch(function(err){\n      throw new Error(util.format('Failed to get crumb (%s)', err.message));\n    });\n}\n\nfunction getCrumb(symbol) {\n  // Invalidate the crumb if the cookie is expired.\n  if (crumb) {\n    // Note: getCookies() won't return expired cookies and we rely on this.\n    var cookies = _utils.cookiejar.getCookies(_constants.HISTORICAL_CRUMB_URL);\n    var bCookie = _.find(cookies, { key: 'B' });\n    if (!bCookie) {\n      debug('No valid cookies, invalidating crumb');\n      crumb = null;\n    }\n  }\n\n  if (crumb) {\n    debug('Returning cached crumb');\n    return Promise.resolve(crumb);\n  } else {\n    debug('Fetching a new cookie & crumb');\n    return fetch(symbol).then(function(crumb) { return crumb; })\n  }\n}\n\n// API\nexports.getCrumb = getCrumb;\n\n// for testing\nexports.parseAndGetCrumb = parseAndGetCrumb;\n"]},"metadata":{},"sourceType":"script"}