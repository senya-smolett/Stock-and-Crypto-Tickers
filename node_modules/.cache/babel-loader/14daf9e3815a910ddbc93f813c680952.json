{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\senya\\\\Documents\\\\Coding\\\\React Projects\\\\react-stock-ticker\\\\src\\\\components\\\\TickersCopy.js\";\nimport React from \"react\";\nimport Ticker from \"./Ticker\";\nimport GridLayout from \"react-grid-layout\";\n\nconst TickersCopy = ({\n  tickers,\n  onDelete\n}) => {\n  console.log(tickers);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tickers.map(ticker => /*#__PURE__*/_jsxDEV(Ticker, {\n      ticker: ticker,\n      onDelete: () => onDelete(ticker.id),\n      children: ticker.tickername\n    }, ticker.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_c = TickersCopy;\nexport default TickersCopy;\n\nvar _c;\n\n$RefreshReg$(_c, \"TickersCopy\");","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/src/components/TickersCopy.js"],"names":["React","Ticker","GridLayout","TickersCopy","tickers","onDelete","console","log","map","ticker","id","tickername"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,sBACE;AAAA,cACGA,OAAO,CAACI,GAAR,CAAaC,MAAD,iBACX,QAAC,MAAD;AAEE,MAAA,MAAM,EAAEA,MAFV;AAGE,MAAA,QAAQ,EAAE,MAAMJ,QAAQ,CAACI,MAAM,CAACC,EAAR,CAH1B;AAAA,gBAKGD,MAAM,CAACE;AALV,OACOF,MAAM,CAACC,EADd;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAaD,CAfD;;KAAMP,W;AAiBN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport Ticker from \"./Ticker\";\r\nimport GridLayout from \"react-grid-layout\";\r\n\r\nconst TickersCopy = ({ tickers, onDelete }) => {\r\n  console.log(tickers);\r\n  return (\r\n    <>\r\n      {tickers.map((ticker) => (\r\n        <Ticker\r\n          key={ticker.id}\r\n          ticker={ticker}\r\n          onDelete={() => onDelete(ticker.id)}\r\n        >\r\n          {ticker.tickername}\r\n        </Ticker>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TickersCopy;\r\n"]},"metadata":{},"sourceType":"module"}