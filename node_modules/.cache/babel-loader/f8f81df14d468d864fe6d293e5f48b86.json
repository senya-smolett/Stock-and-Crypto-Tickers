{"ast":null,"code":"\"use strict\"; // ----------------------------------------------------------------------------\n\nconst functions = require('./functions');\n\nconst {\n  isNode,\n  keys,\n  values,\n  deepExtend,\n  extend,\n  clone,\n  flatten,\n  unique,\n  indexBy,\n  sortBy,\n  groupBy,\n  aggregate,\n  uuid,\n  unCamelCase,\n  precisionFromString,\n  throttle,\n  capitalize,\n  now,\n  timeout,\n  TimedOut,\n  buildOHLCVC,\n  decimalToPrecision,\n  defaultFetch\n} = functions;\n\nconst {\n  // eslint-disable-line object-curly-newline\n  ExchangeError,\n  BadSymbol,\n  InvalidAddress,\n  NotSupported,\n  AuthenticationError,\n  DDoSProtection,\n  RequestTimeout,\n  ExchangeNotAvailable,\n  RateLimitExceeded\n} = require('./errors');\n\nconst {\n  TRUNCATE,\n  ROUND,\n  DECIMAL_PLACES,\n  NO_PADDING\n} = functions.precisionConstants;\n\nconst BN = require('../static_dependencies/BN/bn'); // ----------------------------------------------------------------------------\n\n\nmodule.exports = class Exchange {\n  describe() {\n    return {\n      'id': undefined,\n      'name': undefined,\n      'countries': undefined,\n      'enableRateLimit': false,\n      'rateLimit': 2000,\n      // milliseconds = seconds * 1000\n      'certified': false,\n      'pro': false,\n      'has': {\n        'loadMarkets': true,\n        'cancelAllOrders': false,\n        'cancelOrder': true,\n        'cancelOrders': false,\n        'CORS': false,\n        'createDepositAddress': false,\n        'createLimitOrder': true,\n        'createMarketOrder': true,\n        'createOrder': true,\n        'deposit': false,\n        'editOrder': 'emulated',\n        'fetchBalance': true,\n        'fetchBidsAsks': false,\n        'fetchClosedOrders': false,\n        'fetchCurrencies': false,\n        'fetchDepositAddress': false,\n        'fetchDeposits': false,\n        'fetchFundingFees': false,\n        'fetchL2OrderBook': true,\n        'fetchLedger': false,\n        'fetchMarkets': true,\n        'fetchMyTrades': false,\n        'fetchOHLCV': 'emulated',\n        'fetchOpenOrders': false,\n        'fetchOrder': false,\n        'fetchOrderBook': true,\n        'fetchOrderBooks': false,\n        'fetchOrders': false,\n        'fetchOrderTrades': false,\n        'fetchStatus': 'emulated',\n        'fetchTicker': true,\n        'fetchTickers': false,\n        'fetchTime': false,\n        'fetchTrades': true,\n        'fetchTradingFee': false,\n        'fetchTradingFees': false,\n        'fetchTradingLimits': false,\n        'fetchTransactions': false,\n        'fetchWithdrawals': false,\n        'privateAPI': true,\n        'publicAPI': true,\n        'signIn': false,\n        'withdraw': false\n      },\n      'urls': {\n        'logo': undefined,\n        'api': undefined,\n        'www': undefined,\n        'doc': undefined,\n        'fees': undefined\n      },\n      'api': undefined,\n      'requiredCredentials': {\n        'apiKey': true,\n        'secret': true,\n        'uid': false,\n        'login': false,\n        'password': false,\n        'twofa': false,\n        // 2-factor authentication (one-time password key)\n        'privateKey': false,\n        // a \"0x\"-prefixed hexstring private key for a wallet\n        'walletAddress': false,\n        // the wallet address \"0x\"-prefixed hexstring\n        'token': false // reserved for HTTP auth in some cases\n\n      },\n      'markets': undefined,\n      // to be filled manually or by fetchMarkets\n      'currencies': {},\n      // to be filled manually or by fetchMarkets\n      'timeframes': undefined,\n      // redefine if the exchange has.fetchOHLCV\n      'fees': {\n        'trading': {\n          'tierBased': undefined,\n          'percentage': undefined,\n          'taker': undefined,\n          'maker': undefined\n        },\n        'funding': {\n          'tierBased': undefined,\n          'percentage': undefined,\n          'withdraw': {},\n          'deposit': {}\n        }\n      },\n      'status': {\n        'status': 'ok',\n        'updated': undefined,\n        'eta': undefined,\n        'url': undefined\n      },\n      'exceptions': undefined,\n      'httpExceptions': {\n        '422': ExchangeError,\n        '418': DDoSProtection,\n        '429': RateLimitExceeded,\n        '404': ExchangeNotAvailable,\n        '409': ExchangeNotAvailable,\n        '410': ExchangeNotAvailable,\n        '500': ExchangeNotAvailable,\n        '501': ExchangeNotAvailable,\n        '502': ExchangeNotAvailable,\n        '520': ExchangeNotAvailable,\n        '521': ExchangeNotAvailable,\n        '522': ExchangeNotAvailable,\n        '525': ExchangeNotAvailable,\n        '526': ExchangeNotAvailable,\n        '400': ExchangeNotAvailable,\n        '403': ExchangeNotAvailable,\n        '405': ExchangeNotAvailable,\n        '503': ExchangeNotAvailable,\n        '530': ExchangeNotAvailable,\n        '408': RequestTimeout,\n        '504': RequestTimeout,\n        '401': AuthenticationError,\n        '511': AuthenticationError\n      },\n      // some exchanges report only 'free' on `fetchBlance` call (i.e. report no 'used' funds)\n      // in this case ccxt will try to infer 'used' funds from open order cache, which might be stale\n      // still, some exchanges report number of open orders together with balance\n      // if you set the following flag to 'true' ccxt will leave 'used' funds undefined in case of discrepancy\n      'dontGetUsedBalanceFromStaleCache': false,\n      'commonCurrencies': {\n        // gets extended/overwritten in subclasses\n        'XBT': 'BTC',\n        'BCC': 'BCH',\n        'DRK': 'DASH',\n        'BCHABC': 'BCH',\n        'BCHSV': 'BSV'\n      },\n      'precisionMode': DECIMAL_PLACES,\n      'paddingMode': NO_PADDING,\n      'limits': {\n        'amount': {\n          'min': undefined,\n          'max': undefined\n        },\n        'price': {\n          'min': undefined,\n          'max': undefined\n        },\n        'cost': {\n          'min': undefined,\n          'max': undefined\n        }\n      }\n    }; // return\n  } // describe ()\n\n\n  constructor(userConfig = {}) {\n    Object.assign(this, functions); // if (isNode) {\n    //     this.nodeVersion = process.version.match (/\\d+\\.\\d+\\.\\d+/)[0]\n    //     this.userAgent = {\n    //         'User-Agent': 'ccxt/' + Exchange.ccxtVersion +\n    //             ' (+https://github.com/ccxt/ccxt)' +\n    //             ' Node.js/' + this.nodeVersion + ' (JavaScript)'\n    //     }\n    // }\n\n    this.options = {}; // exchange-specific options, if any\n    // fetch implementation options (JS only)\n\n    this.fetchOptions = {// keepalive: true, // does not work in Chrome, https://github.com/ccxt/ccxt/issues/6368\n    };\n    this.userAgents = {\n      'chrome': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36',\n      'chrome39': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36'\n    };\n    this.headers = {}; // prepended to URL, like https://proxy.com/https://exchange.com/api...\n\n    this.proxy = '';\n    this.origin = '*'; // CORS origin\n\n    this.minFundingAddressLength = 1; // used in checkAddress\n\n    this.substituteCommonCurrencyCodes = true; // reserved\n    // do not delete this line, it is needed for users to be able to define their own fetchImplementation\n\n    this.fetchImplementation = defaultFetch;\n    this.timeout = 10000; // milliseconds\n\n    this.verbose = false;\n    this.debug = false;\n    this.userAgent = undefined;\n    this.twofa = undefined; // two-factor authentication (2FA)\n\n    this.apiKey = undefined;\n    this.secret = undefined;\n    this.uid = undefined;\n    this.login = undefined;\n    this.password = undefined;\n    this.privateKey = undefined; // a \"0x\"-prefixed hexstring private key for a wallet\n\n    this.walletAddress = undefined; // a wallet address \"0x\"-prefixed hexstring\n\n    this.token = undefined; // reserved for HTTP auth in some cases\n\n    this.balance = {};\n    this.orderbooks = {};\n    this.tickers = {};\n    this.orders = undefined;\n    this.trades = {};\n    this.transactions = {};\n    this.ohlcvs = {};\n    this.myTrades = undefined;\n    this.requiresWeb3 = false;\n    this.requiresEddsa = false;\n    this.precision = {};\n    this.enableLastJsonResponse = true;\n    this.enableLastHttpResponse = true;\n    this.enableLastResponseHeaders = true;\n    this.last_http_response = undefined;\n    this.last_json_response = undefined;\n    this.last_response_headers = undefined;\n\n    const unCamelCaseProperties = (obj = this) => {\n      if (obj !== null) {\n        const ownPropertyNames = Object.getOwnPropertyNames(obj);\n\n        for (let i = 0; i < ownPropertyNames.length; i++) {\n          const k = ownPropertyNames[i];\n          this[unCamelCase(k)] = this[k];\n        }\n\n        unCamelCaseProperties(Object.getPrototypeOf(obj));\n      }\n    };\n\n    unCamelCaseProperties(); // merge to this\n\n    const configEntries = Object.entries(this.describe()).concat(Object.entries(userConfig));\n\n    for (let i = 0; i < configEntries.length; i++) {\n      const [property, value] = configEntries[i];\n\n      if (value && Object.getPrototypeOf(value) === Object.prototype) {\n        this[property] = deepExtend(this[property], value);\n      } else {\n        this[property] = value;\n      }\n    }\n\n    const agentOptions = {\n      'keepAlive': true\n    };\n\n    if (!this.httpAgent && defaultFetch.http && isNode) {\n      this.httpAgent = new defaultFetch.http.Agent(agentOptions);\n    }\n\n    if (!this.httpsAgent && defaultFetch.https && isNode) {\n      this.httpsAgent = new defaultFetch.https.Agent(agentOptions);\n    } // generate old metainfo interface\n\n\n    const hasKeys = Object.keys(this.has);\n\n    for (let i = 0; i < hasKeys.length; i++) {\n      const k = hasKeys[i];\n      this['has' + capitalize(k)] = !!this.has[k]; // converts 'emulated' to true\n    }\n\n    if (this.api) {\n      this.defineRestApi(this.api, 'request');\n    }\n\n    this.initRestRateLimiter();\n\n    if (this.markets) {\n      this.setMarkets(this.markets);\n    }\n  }\n\n  defaults() {\n    return {\n      /* override me */\n    };\n  }\n\n  nonce() {\n    return this.seconds();\n  }\n\n  encodeURIComponent(...args) {\n    return encodeURIComponent(...args);\n  }\n\n  checkRequiredCredentials(error = true) {\n    const keys = Object.keys(this.requiredCredentials);\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n\n      if (this.requiredCredentials[key] && !this[key]) {\n        if (error) {\n          throw new AuthenticationError(this.id + ' requires `' + key + '` credential');\n        } else {\n          return error;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  checkAddress(address) {\n    if (address === undefined) {\n      throw new InvalidAddress(this.id + ' address is undefined');\n    } // check the address is not the same letter like 'aaaaa' nor too short nor has a space\n\n\n    if (unique(address).length === 1 || address.length < this.minFundingAddressLength || address.includes(' ')) {\n      throw new InvalidAddress(this.id + ' address is invalid or has less than ' + this.minFundingAddressLength.toString() + ' characters: \"' + this.json(address) + '\"');\n    }\n\n    return address;\n  }\n\n  initRestRateLimiter() {\n    if (this.rateLimit === undefined) {\n      throw new Error(this.id + '.rateLimit property is not configured');\n    }\n\n    this.tokenBucket = this.extend({\n      delay: 1,\n      capacity: 1,\n      defaultCost: 1,\n      maxCapacity: 1000\n    }, this.tokenBucket);\n    this.throttle = throttle(this.tokenBucket);\n\n    this.executeRestRequest = (url, method = 'GET', headers = undefined, body = undefined) => {\n      // fetchImplementation cannot be called on this. in browsers:\n      // TypeError Failed to execute 'fetch' on 'Window': Illegal invocation\n      const fetchImplementation = this.fetchImplementation;\n      const params = {\n        method,\n        headers,\n        body,\n        timeout: this.timeout\n      };\n\n      if (this.agent) {\n        params['agent'] = this.agent;\n      } else if (this.httpAgent && url.indexOf('http://') === 0) {\n        params['agent'] = this.httpAgent;\n      } else if (this.httpsAgent && url.indexOf('https://') === 0) {\n        params['agent'] = this.httpsAgent;\n      }\n\n      const promise = fetchImplementation(url, this.extend(params, this.fetchOptions)).catch(e => {\n        if (isNode) {\n          throw new ExchangeNotAvailable([this.id, method, url, e.type, e.message].join(' '));\n        }\n\n        throw e; // rethrow all unknown errors\n      }).then(response => this.handleRestResponse(response, url, method, headers, body));\n      return timeout(this.timeout, promise).catch(e => {\n        if (e instanceof TimedOut) {\n          throw new RequestTimeout(this.id + ' ' + method + ' ' + url + ' request timed out (' + this.timeout + ' ms)');\n        }\n\n        throw e;\n      });\n    };\n  }\n\n  setSandboxMode(enabled) {\n    if (!!enabled) {\n      // eslint-disable-line no-extra-boolean-cast\n      if ('test' in this.urls) {\n        if (typeof this.urls['api'] === 'string') {\n          this.urls['api_backup'] = this.urls['api'];\n          this.urls['api'] = this.urls['test'];\n        } else {\n          this.urls['api_backup'] = clone(this.urls['api']);\n          this.urls['api'] = clone(this.urls['test']);\n        }\n      } else {\n        throw new NotSupported(this.id + ' does not have a sandbox URL');\n      }\n    } else if ('api_backup' in this.urls) {\n      if (typeof this.urls['api'] === 'string') {\n        this.urls['api'] = this.urls['api_backup'];\n      } else {\n        this.urls['api'] = clone(this.urls['api_backup']);\n      }\n    }\n  }\n\n  defineRestApi(api, methodName, paths = []) {\n    const keys = Object.keys(api);\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const value = api[key];\n\n      if (Array.isArray(value)) {\n        const uppercaseMethod = key.toUpperCase();\n        const lowercaseMethod = key.toLowerCase();\n        const camelcaseMethod = this.capitalize(lowercaseMethod);\n\n        for (let k = 0; k < value.length; k++) {\n          const path = value[k].trim();\n          const splitPath = path.split(/[^a-zA-Z0-9]/);\n          const camelcaseSuffix = splitPath.map(this.capitalize).join('');\n          const underscoreSuffix = splitPath.map(x => x.trim().toLowerCase()).filter(x => x.length > 0).join('_');\n          const camelcasePrefix = [paths[0]].concat(paths.slice(1).map(this.capitalize)).join('');\n          const underscorePrefix = [paths[0]].concat(paths.slice(1).map(x => x.trim()).filter(x => x.length > 0)).join('_');\n          const camelcase = camelcasePrefix + camelcaseMethod + this.capitalize(camelcaseSuffix);\n          const underscore = underscorePrefix + '_' + lowercaseMethod + '_' + underscoreSuffix;\n          const typeArgument = paths.length > 1 ? paths : paths[0];\n\n          const partial = async params => this[methodName](path, typeArgument, uppercaseMethod, params || {});\n\n          this[camelcase] = partial;\n          this[underscore] = partial;\n        }\n      } else {\n        this.defineRestApi(value, methodName, paths.concat([key]));\n      }\n    }\n  }\n\n  print(...args) {\n    console.log(...args);\n  }\n\n  setHeaders(headers) {\n    return headers;\n  }\n\n  fetch(url, method = 'GET', headers = undefined, body = undefined) {\n    if (isNode && this.userAgent) {\n      if (typeof this.userAgent === 'string') {\n        headers = extend({\n          'User-Agent': this.userAgent\n        }, headers);\n      } else if (typeof this.userAgent === 'object' && 'User-Agent' in this.userAgent) {\n        headers = extend(this.userAgent, headers);\n      }\n    }\n\n    if (typeof this.proxy === 'function') {\n      url = this.proxy(url);\n\n      if (isNode) {\n        headers = extend({\n          'Origin': this.origin\n        }, headers);\n      }\n    } else if (typeof this.proxy === 'string') {\n      if (this.proxy.length && isNode) {\n        headers = extend({\n          'Origin': this.origin\n        }, headers);\n      }\n\n      url = this.proxy + url;\n    }\n\n    headers = extend(this.headers, headers);\n    headers = this.setHeaders(headers);\n\n    if (this.verbose) {\n      this.print(\"fetch:\\n\", this.id, method, url, \"\\nRequest:\\n\", headers, \"\\n\", body, \"\\n\");\n    }\n\n    return this.executeRestRequest(url, method, headers, body);\n  }\n\n  async fetch2(path, type = 'public', method = 'GET', params = {}, headers = undefined, body = undefined) {\n    if (this.enableRateLimit) {\n      await this.throttle(this.rateLimit);\n    }\n\n    const request = this.sign(path, type, method, params, headers, body);\n    return this.fetch(request.url, request.method, request.headers, request.body);\n  }\n\n  request(path, type = 'public', method = 'GET', params = {}, headers = undefined, body = undefined) {\n    return this.fetch2(path, type, method, params, headers, body);\n  }\n\n  parseJson(jsonString) {\n    try {\n      if (this.isJsonEncodedObject(jsonString)) {\n        return JSON.parse(jsonString);\n      }\n    } catch (e) {\n      // SyntaxError\n      return undefined;\n    }\n  }\n\n  throwExactlyMatchedException(exact, string, message) {\n    if (string in exact) {\n      throw new exact[string](message);\n    }\n  }\n\n  throwBroadlyMatchedException(broad, string, message) {\n    const broadKey = this.findBroadlyMatchedKey(broad, string);\n\n    if (broadKey !== undefined) {\n      throw new broad[broadKey](message);\n    }\n  } // a helper for matching error strings exactly vs broadly\n\n\n  findBroadlyMatchedKey(broad, string) {\n    const keys = Object.keys(broad);\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n\n      if (string.indexOf(key) >= 0) {\n        return key;\n      }\n    }\n\n    return undefined;\n  }\n\n  handleErrors(statusCode, statusText, url, method, responseHeaders, responseBody, response, requestHeaders, requestBody) {// override me\n  }\n\n  handleHttpStatusCode(code, reason, url, method, body) {\n    const codeAsString = code.toString();\n\n    if (codeAsString in this.httpExceptions) {\n      const ErrorClass = this.httpExceptions[codeAsString];\n      throw new ErrorClass([this.id, method, url, code, reason, body].join(' '));\n    }\n  }\n\n  getResponseHeaders(response) {\n    const result = {};\n    response.headers.forEach((value, key) => {\n      key = key.split('-').map(word => capitalize(word)).join('-');\n      result[key] = value;\n    });\n    return result;\n  }\n\n  handleRestResponse(response, url, method = 'GET', requestHeaders = undefined, requestBody = undefined) {\n    return response.text().then(responseBody => {\n      responseBody = responseBody.trim();\n      const json = this.parseJson(responseBody.replace(/:(\\d{15,}),/g, ':\"$1\",'));\n      const responseHeaders = this.getResponseHeaders(response);\n\n      if (this.enableLastResponseHeaders) {\n        this.last_response_headers = responseHeaders;\n      }\n\n      if (this.enableLastHttpResponse) {\n        this.last_http_response = responseBody;\n      }\n\n      if (this.enableLastJsonResponse) {\n        this.last_json_response = json;\n      }\n\n      if (this.verbose) {\n        this.print(\"handleRestResponse:\\n\", this.id, method, url, response.status, response.statusText, \"\\nResponse:\\n\", responseHeaders, \"\\n\", responseBody, \"\\n\");\n      }\n\n      this.handleErrors(response.status, response.statusText, url, method, responseHeaders, responseBody, json, requestHeaders, requestBody);\n      this.handleHttpStatusCode(response.status, response.statusText, url, method, responseBody);\n      return json || responseBody;\n    });\n  }\n\n  setMarkets(markets, currencies = undefined) {\n    const values = Object.values(markets).map(market => deepExtend({\n      'limits': this.limits,\n      'precision': this.precision\n    }, this.fees['trading'], market));\n    this.markets = indexBy(values, 'symbol');\n    this.marketsById = indexBy(markets, 'id');\n    this.markets_by_id = this.marketsById;\n    this.symbols = Object.keys(this.markets).sort();\n    this.ids = Object.keys(this.markets_by_id).sort();\n\n    if (currencies) {\n      this.currencies = deepExtend(currencies, this.currencies);\n    } else {\n      let baseCurrencies = values.filter(market => 'base' in market).map(market => ({\n        id: market.baseId || market.base,\n        numericId: market.baseNumericId !== undefined ? market.baseNumericId : undefined,\n        code: market.base,\n        precision: market.precision ? market.precision.base || market.precision.amount : 8\n      }));\n      let quoteCurrencies = values.filter(market => 'quote' in market).map(market => ({\n        id: market.quoteId || market.quote,\n        numericId: market.quoteNumericId !== undefined ? market.quoteNumericId : undefined,\n        code: market.quote,\n        precision: market.precision ? market.precision.quote || market.precision.price : 8\n      }));\n      baseCurrencies = sortBy(baseCurrencies, 'code');\n      quoteCurrencies = sortBy(quoteCurrencies, 'code');\n      this.baseCurrencies = indexBy(baseCurrencies, 'code');\n      this.quoteCurrencies = indexBy(quoteCurrencies, 'code');\n      const allCurrencies = baseCurrencies.concat(quoteCurrencies);\n      const groupedCurrencies = groupBy(allCurrencies, 'code');\n      const currencies = Object.keys(groupedCurrencies).map(code => groupedCurrencies[code].reduce((previous, current) => // eslint-disable-line implicit-arrow-linebreak\n      previous.precision > current.precision ? previous : current, groupedCurrencies[code][0])); // eslint-disable-line implicit-arrow-linebreak\n\n      const sortedCurrencies = sortBy(flatten(currencies), 'code');\n      this.currencies = deepExtend(indexBy(sortedCurrencies, 'code'), this.currencies);\n    }\n\n    this.currencies_by_id = indexBy(this.currencies, 'id');\n    return this.markets;\n  }\n\n  async loadMarketsHelper(reload = false, params = {}) {\n    if (!reload && this.markets) {\n      if (!this.markets_by_id) {\n        return this.setMarkets(this.markets);\n      }\n\n      return this.markets;\n    }\n\n    let currencies = undefined;\n\n    if (this.has.fetchCurrencies) {\n      currencies = await this.fetchCurrencies();\n    }\n\n    const markets = await this.fetchMarkets(params);\n    return this.setMarkets(markets, currencies);\n  } // is async (returns a promise)\n\n\n  loadMarkets(reload = false, params = {}) {\n    if (reload && !this.reloadingMarkets || !this.marketsLoading) {\n      this.reloadingMarkets = true;\n      this.marketsLoading = this.loadMarketsHelper(reload, params).then(resolved => {\n        this.reloadingMarkets = false;\n        return resolved;\n      }, error => {\n        this.reloadingMarkets = false;\n        throw error;\n      });\n    }\n\n    return this.marketsLoading;\n  }\n\n  async loadAccounts(reload = false, params = {}) {\n    if (reload) {\n      this.accounts = await this.fetchAccounts(params);\n    } else {\n      if (this.accounts) {\n        return this.accounts;\n      } else {\n        this.accounts = await this.fetchAccounts(params);\n      }\n    }\n\n    this.accountsById = this.indexBy(this.accounts, 'id');\n    return this.accounts;\n  }\n\n  fetchBidsAsks(symbols = undefined, params = {}) {\n    throw new NotSupported(this.id + ' fetchBidsAsks not supported yet');\n  }\n\n  async fetchOHLCVC(symbol, timeframe = '1m', since = undefined, limit = undefined, params = {}) {\n    if (!this.has['fetchTrades']) {\n      throw new NotSupported(this.id + ' fetchOHLCV() not supported yet');\n    }\n\n    await this.loadMarkets();\n    const trades = await this.fetchTrades(symbol, since, limit, params);\n    const ohlcvc = buildOHLCVC(trades, timeframe, since, limit);\n    return ohlcvc;\n  }\n\n  async fetchOHLCV(symbol, timeframe = '1m', since = undefined, limit = undefined, params = {}) {\n    if (!this.has['fetchTrades']) {\n      throw new NotSupported(this.id + ' fetchOHLCV() not supported yet');\n    }\n\n    await this.loadMarkets();\n    const trades = await this.fetchTrades(symbol, since, limit, params);\n    const ohlcvc = buildOHLCVC(trades, timeframe, since, limit);\n    return ohlcvc.map(c => c.slice(0, -1));\n  }\n\n  parseTradingViewOHLCV(ohlcvs, market = undefined, timeframe = '1m', since = undefined, limit = undefined) {\n    const result = this.convertTradingViewToOHLCV(ohlcvs);\n    return this.parseOHLCVs(result, market, timeframe, since, limit);\n  }\n\n  convertTradingViewToOHLCV(ohlcvs, t = 't', o = 'o', h = 'h', l = 'l', c = 'c', v = 'v', ms = false) {\n    const result = [];\n\n    for (let i = 0; i < ohlcvs[t].length; i++) {\n      result.push([ms ? ohlcvs[t][i] : ohlcvs[t][i] * 1000, ohlcvs[o][i], ohlcvs[h][i], ohlcvs[l][i], ohlcvs[c][i], ohlcvs[v][i]]);\n    }\n\n    return result;\n  }\n\n  convertOHLCVToTradingView(ohlcvs, t = 't', o = 'o', h = 'h', l = 'l', c = 'c', v = 'v', ms = false) {\n    const result = {};\n    result[t] = [];\n    result[o] = [];\n    result[h] = [];\n    result[l] = [];\n    result[c] = [];\n    result[v] = [];\n\n    for (let i = 0; i < ohlcvs.length; i++) {\n      result[t].push(ms ? ohlcvs[i][0] : parseInt(ohlcvs[i][0] / 1000));\n      result[o].push(ohlcvs[i][1]);\n      result[h].push(ohlcvs[i][2]);\n      result[l].push(ohlcvs[i][3]);\n      result[c].push(ohlcvs[i][4]);\n      result[v].push(ohlcvs[i][5]);\n    }\n\n    return result;\n  }\n\n  fetchTicker(symbol, params = {}) {\n    throw new NotSupported(this.id + ' fetchTicker not supported yet');\n  }\n\n  fetchTickers(symbols = undefined, params = {}) {\n    throw new NotSupported(this.id + ' fetchTickers not supported yet');\n  }\n\n  fetchOrder(id, symbol = undefined, params = {}) {\n    throw new NotSupported(this.id + ' fetchOrder not supported yet');\n  }\n\n  fetchUnifiedOrder(order, params = {}) {\n    return this.fetchOrder(this.safeValue(order, 'id'), this.safeValue(order, 'symbol'), params);\n  }\n\n  createOrder(symbol, type, side, amount, price = undefined, params = {}) {\n    throw new NotSupported(this.id + ' createOrder not supported yet');\n  }\n\n  cancelOrder(id, symbol = undefined, params = {}) {\n    throw new NotSupported(this.id + ' cancelOrder not supported yet');\n  }\n\n  cancelUnifiedOrder(order, params = {}) {\n    return this.cancelOrder(this.safeValue(order, 'id'), this.safeValue(order, 'symbol'), params);\n  }\n\n  fetchOrders(symbol = undefined, since = undefined, limit = undefined, params = {}) {\n    throw new NotSupported(this.id + ' fetchOrders not supported yet');\n  }\n\n  fetchOpenOrders(symbol = undefined, since = undefined, limit = undefined, params = {}) {\n    throw new NotSupported(this.id + ' fetchOpenOrders not supported yet');\n  }\n\n  fetchClosedOrders(symbol = undefined, since = undefined, limit = undefined, params = {}) {\n    throw new NotSupported(this.id + ' fetchClosedOrders not supported yet');\n  }\n\n  fetchMyTrades(symbol = undefined, since = undefined, limit = undefined, params = {}) {\n    throw new NotSupported(this.id + ' fetchMyTrades not supported yet');\n  }\n\n  fetchTransactions(symbol = undefined, since = undefined, limit = undefined, params = {}) {\n    throw new NotSupported(this.id + ' fetchTransactions not supported yet');\n  }\n\n  fetchDeposits(symbol = undefined, since = undefined, limit = undefined, params = {}) {\n    throw new NotSupported(this.id + ' fetchDeposits not supported yet');\n  }\n\n  fetchWithdrawals(symbol = undefined, since = undefined, limit = undefined, params = {}) {\n    throw new NotSupported(this.id + ' fetchWithdrawals not supported yet');\n  }\n\n  fetchCurrencies(params = {}) {\n    // markets are returned as a list\n    // currencies are returned as a dict\n    // this is for historical reasons\n    // and may be changed for consistency later\n    return new Promise((resolve, reject) => resolve(this.currencies));\n  }\n\n  fetchMarkets(params = {}) {\n    // markets are returned as a list\n    // currencies are returned as a dict\n    // this is for historical reasons\n    // and may be changed for consistency later\n    return new Promise((resolve, reject) => resolve(Object.values(this.markets)));\n  }\n\n  async fetchOrderStatus(id, symbol = undefined, params = {}) {\n    const order = await this.fetchOrder(id, symbol, params);\n    return order['status'];\n  }\n\n  account() {\n    return {\n      'free': undefined,\n      'used': undefined,\n      'total': undefined\n    };\n  }\n\n  commonCurrencyCode(currency) {\n    if (!this.substituteCommonCurrencyCodes) {\n      return currency;\n    }\n\n    return this.safeString(this.commonCurrencies, currency, currency);\n  }\n\n  currencyId(commonCode) {\n    if (this.currencies === undefined) {\n      throw new ExchangeError(this.id + ' currencies not loaded');\n    }\n\n    if (commonCode in this.currencies) {\n      return this.currencies[commonCode]['id'];\n    }\n\n    const currencyIds = {};\n    const distinct = Object.keys(this.commonCurrencies);\n\n    for (let i = 0; i < distinct.length; i++) {\n      const k = distinct[i];\n      currencyIds[this.commonCurrencies[k]] = k;\n    }\n\n    return this.safeString(currencyIds, commonCode, commonCode);\n  }\n\n  currency(code) {\n    if (this.currencies === undefined) {\n      throw new ExchangeError(this.id + ' currencies not loaded');\n    }\n\n    if (typeof code === 'string' && code in this.currencies) {\n      return this.currencies[code];\n    }\n\n    throw new ExchangeError(this.id + ' does not have currency code ' + code);\n  }\n\n  market(symbol) {\n    if (this.markets === undefined) {\n      throw new ExchangeError(this.id + ' markets not loaded');\n    }\n\n    if (typeof symbol === 'string' && symbol in this.markets) {\n      return this.markets[symbol];\n    }\n\n    throw new BadSymbol(this.id + ' does not have market symbol ' + symbol);\n  }\n\n  marketId(symbol) {\n    const market = this.market(symbol);\n    return market !== undefined ? market['id'] : symbol;\n  }\n\n  marketIds(symbols) {\n    return symbols.map(symbol => this.marketId(symbol));\n  }\n\n  symbol(symbol) {\n    return this.market(symbol).symbol || symbol;\n  }\n\n  url(path, params = {}) {\n    let result = this.implodeParams(path, params);\n    const query = this.omit(params, this.extractParams(path));\n\n    if (Object.keys(query).length) {\n      result += '?' + this.urlencode(query);\n    }\n\n    return result;\n  }\n\n  parseBidAsk(bidask, priceKey = 0, amountKey = 1) {\n    const price = parseFloat(bidask[priceKey]);\n    const amount = parseFloat(bidask[amountKey]);\n    return [price, amount];\n  }\n\n  parseBidsAsks(bidasks, priceKey = 0, amountKey = 1) {\n    return Object.values(bidasks || []).map(bidask => this.parseBidAsk(bidask, priceKey, amountKey));\n  }\n\n  async fetchL2OrderBook(symbol, limit = undefined, params = {}) {\n    const orderbook = await this.fetchOrderBook(symbol, limit, params);\n    return extend(orderbook, {\n      'bids': sortBy(aggregate(orderbook.bids), 0, true),\n      'asks': sortBy(aggregate(orderbook.asks), 0)\n    });\n  }\n\n  parseOrderBook(orderbook, timestamp = undefined, bidsKey = 'bids', asksKey = 'asks', priceKey = 0, amountKey = 1) {\n    return {\n      'bids': sortBy(bidsKey in orderbook ? this.parseBidsAsks(orderbook[bidsKey], priceKey, amountKey) : [], 0, true),\n      'asks': sortBy(asksKey in orderbook ? this.parseBidsAsks(orderbook[asksKey], priceKey, amountKey) : [], 0),\n      'timestamp': timestamp,\n      'datetime': this.iso8601(timestamp),\n      'nonce': undefined\n    };\n  }\n\n  parseBalance(balance) {\n    const codes = Object.keys(this.omit(balance, ['info', 'free', 'used', 'total']));\n    balance['free'] = {};\n    balance['used'] = {};\n    balance['total'] = {};\n\n    for (let i = 0; i < codes.length; i++) {\n      const code = codes[i];\n\n      if (balance[code].total === undefined) {\n        if (balance[code].free !== undefined && balance[code].used !== undefined) {\n          balance[code].total = this.sum(balance[code].free, balance[code].used);\n        }\n      }\n\n      if (balance[code].free === undefined) {\n        if (balance[code].total !== undefined && balance[code].used !== undefined) {\n          balance[code].free = this.sum(balance[code].total, -balance[code].used);\n        }\n      }\n\n      if (balance[code].used === undefined) {\n        if (balance[code].total !== undefined && balance[code].free !== undefined) {\n          balance[code].used = this.sum(balance[code].total, -balance[code].free);\n        }\n      }\n\n      balance.free[code] = balance[code].free;\n      balance.used[code] = balance[code].used;\n      balance.total[code] = balance[code].total;\n    }\n\n    return balance;\n  }\n\n  async fetchPartialBalance(part, params = {}) {\n    const balance = await this.fetchBalance(params);\n    return balance[part];\n  }\n\n  fetchFreeBalance(params = {}) {\n    return this.fetchPartialBalance('free', params);\n  }\n\n  fetchUsedBalance(params = {}) {\n    return this.fetchPartialBalance('used', params);\n  }\n\n  fetchTotalBalance(params = {}) {\n    return this.fetchPartialBalance('total', params);\n  }\n\n  async fetchStatus(params = {}) {\n    if (this.has['fetchTime']) {\n      const time = await this.fetchTime(params);\n      this.status = this.extend(this.status, {\n        'updated': time\n      });\n    }\n\n    return this.status;\n  }\n\n  async fetchTradingFees(params = {}) {\n    throw new NotSupported(this.id + ' fetchTradingFees not supported yet');\n  }\n\n  async fetchTradingFee(symbol, params = {}) {\n    if (!this.has['fetchTradingFees']) {\n      throw new NotSupported(this.id + ' fetchTradingFee not supported yet');\n    }\n\n    return await this.fetchTradingFees(params);\n  }\n\n  async loadTradingLimits(symbols = undefined, reload = false, params = {}) {\n    if (this.has['fetchTradingLimits']) {\n      if (reload || !('limitsLoaded' in this.options)) {\n        const response = await this.fetchTradingLimits(symbols);\n\n        for (let i = 0; i < symbols.length; i++) {\n          const symbol = symbols[i];\n          this.markets[symbol] = this.deepExtend(this.markets[symbol], response[symbol]);\n        }\n\n        this.options['limitsLoaded'] = this.milliseconds();\n      }\n    }\n\n    return this.markets;\n  }\n\n  filterBySinceLimit(array, since = undefined, limit = undefined, key = 'timestamp', tail = false) {\n    const sinceIsDefined = since !== undefined && since !== null;\n\n    if (sinceIsDefined) {\n      array = array.filter(entry => entry[key] >= since);\n    }\n\n    if (limit !== undefined && limit !== null) {\n      array = tail && !sinceIsDefined ? array.slice(-limit) : array.slice(0, limit);\n    }\n\n    return array;\n  }\n\n  filterByValueSinceLimit(array, field, value = undefined, since = undefined, limit = undefined, key = 'timestamp', tail = false) {\n    const valueIsDefined = value !== undefined && value !== null;\n    const sinceIsDefined = since !== undefined && since !== null; // single-pass filter for both symbol and since\n\n    if (valueIsDefined || sinceIsDefined) {\n      array = array.filter(entry => (valueIsDefined ? entry[field] === value : true) && (sinceIsDefined ? entry[key] >= since : true));\n    }\n\n    if (limit !== undefined && limit !== null) {\n      array = tail && !sinceIsDefined ? array.slice(-limit) : array.slice(0, limit);\n    }\n\n    return array;\n  }\n\n  filterBySymbolSinceLimit(array, symbol = undefined, since = undefined, limit = undefined) {\n    return this.filterByValueSinceLimit(array, 'symbol', symbol, since, limit);\n  }\n\n  filterByCurrencySinceLimit(array, code = undefined, since = undefined, limit = undefined) {\n    return this.filterByValueSinceLimit(array, 'currency', code, since, limit);\n  }\n\n  filterByArray(objects, key, values = undefined, indexed = true) {\n    objects = Object.values(objects); // return all of them if no values were passed\n\n    if (values === undefined || values === null) {\n      return indexed ? indexBy(objects, key) : objects;\n    }\n\n    const result = [];\n\n    for (let i = 0; i < objects.length; i++) {\n      if (values.includes(objects[i][key])) {\n        result.push(objects[i]);\n      }\n    }\n\n    return indexed ? indexBy(result, key) : result;\n  }\n\n  parseTrades(trades, market = undefined, since = undefined, limit = undefined, params = {}) {\n    // this code is commented out temporarily to catch for exchange-specific errors\n    // if (!this.isArray (trades)) {\n    //     throw new ExchangeError (this.id + ' parseTrades expected an array in the trades argument, but got ' + typeof trades);\n    // }\n    let result = Object.values(trades || []).map(trade => this.extend(this.parseTrade(trade, market), params));\n    result = sortBy(result, 'timestamp');\n    const symbol = market !== undefined ? market['symbol'] : undefined;\n    return this.filterBySymbolSinceLimit(result, symbol, since, limit);\n  }\n\n  parseTransactions(transactions, currency = undefined, since = undefined, limit = undefined, params = {}) {\n    // this code is commented out temporarily to catch for exchange-specific errors\n    // if (!this.isArray (transactions)) {\n    //     throw new ExchangeError (this.id + ' parseTransactions expected an array in the transactions argument, but got ' + typeof transactions);\n    // }\n    let result = Object.values(transactions || []).map(transaction => this.extend(this.parseTransaction(transaction, currency), params));\n    result = this.sortBy(result, 'timestamp');\n    const code = currency !== undefined ? currency['code'] : undefined;\n    return this.filterByCurrencySinceLimit(result, code, since, limit);\n  }\n\n  parseLedger(data, currency = undefined, since = undefined, limit = undefined, params = {}) {\n    let result = [];\n    const array = Object.values(data || []);\n\n    for (let i = 0; i < array.length; i++) {\n      const itemOrItems = this.parseLedgerEntry(array[i], currency);\n\n      if (Array.isArray(itemOrItems)) {\n        for (let j = 0; j < itemOrItems.length; j++) {\n          result.push(this.extend(itemOrItems[j], params));\n        }\n      } else {\n        result.push(this.extend(itemOrItems, params));\n      }\n    }\n\n    result = this.sortBy(result, 'timestamp');\n    const code = currency !== undefined ? currency['code'] : undefined;\n    return this.filterByCurrencySinceLimit(result, code, since, limit);\n  }\n\n  parseOrders(orders, market = undefined, since = undefined, limit = undefined, params = {}) {\n    //\n    // the value of orders is either a dict or a list\n    //\n    // dict\n    //\n    //     {\n    //         'id1': { ... },\n    //         'id2': { ... },\n    //         'id3': { ... },\n    //         ...\n    //     }\n    //\n    // list\n    //\n    //     [\n    //         { 'id': 'id1', ... },\n    //         { 'id': 'id2', ... },\n    //         { 'id': 'id3', ... },\n    //         ...\n    //     ]\n    //\n    let result = Array.isArray(orders) ? Object.values(orders).map(order => this.extend(this.parseOrder(order, market), params)) : Object.entries(orders).map(([id, order]) => this.extend(this.parseOrder(this.extend({\n      'id': id\n    }, order), market), params));\n    result = sortBy(result, 'timestamp');\n    const symbol = market !== undefined ? market['symbol'] : undefined;\n    return this.filterBySymbolSinceLimit(result, symbol, since, limit);\n  }\n\n  safeCurrency(currencyId, currency = undefined) {\n    if (currencyId === undefined && currency !== undefined) {\n      return currency;\n    }\n\n    if (this.currencies_by_id !== undefined && currencyId in this.currencies_by_id) {\n      return this.currencies_by_id[currencyId];\n    }\n\n    return {\n      'id': currencyId,\n      'code': currencyId === undefined ? currencyId : this.commonCurrencyCode(currencyId.toUpperCase())\n    };\n  }\n\n  safeCurrencyCode(currencyId, currency = undefined) {\n    currency = this.safeCurrency(currencyId, currency);\n    return currency['code'];\n  }\n\n  safeMarket(marketId, market = undefined, delimiter = undefined) {\n    if (marketId !== undefined) {\n      if (this.markets_by_id !== undefined && marketId in this.markets_by_id) {\n        market = this.markets_by_id[marketId];\n      } else if (delimiter !== undefined) {\n        const [baseId, quoteId] = marketId.split(delimiter);\n        const base = this.safeCurrencyCode(baseId);\n        const quote = this.safeCurrencyCode(quoteId);\n        const symbol = base + '/' + quote;\n        return {\n          'id': marketId,\n          'symbol': symbol,\n          'base': base,\n          'quote': quote,\n          'baseId': baseId,\n          'quoteId': quoteId\n        };\n      }\n    }\n\n    if (market !== undefined) {\n      return market;\n    }\n\n    return {\n      'id': marketId,\n      'symbol': marketId,\n      'base': undefined,\n      'quote': undefined,\n      'baseId': undefined,\n      'quoteId': undefined\n    };\n  }\n\n  safeSymbol(marketId, market = undefined, delimiter = undefined) {\n    market = this.safeMarket(marketId, market, delimiter);\n    return market['symbol'];\n  }\n\n  filterBySymbol(array, symbol = undefined) {\n    return symbol !== undefined ? array.filter(entry => entry.symbol === symbol) : array;\n  }\n\n  parseOHLCV(ohlcv, market = undefined) {\n    return Array.isArray(ohlcv) ? ohlcv.slice(0, 6) : ohlcv;\n  }\n\n  parseOHLCVs(ohlcvs, market = undefined, timeframe = '1m', since = undefined, limit = undefined) {\n    // this code is commented out temporarily to catch for exchange-specific errors\n    // if (!this.isArray (ohlcvs)) {\n    //     throw new ExchangeError (this.id + ' parseOHLCVs expected an array in the ohlcvs argument, but got ' + typeof ohlcvs);\n    // }\n    ohlcvs = Object.values(ohlcvs || []);\n    const result = [];\n\n    for (let i = 0; i < ohlcvs.length; i++) {\n      if (limit && result.length >= limit) {\n        break;\n      }\n\n      const ohlcv = this.parseOHLCV(ohlcvs[i], market);\n\n      if (since && ohlcv[0] < since) {\n        continue;\n      }\n\n      result.push(ohlcv);\n    }\n\n    return this.sortBy(result, 0);\n  }\n\n  editLimitBuyOrder(id, symbol, ...args) {\n    return this.editLimitOrder(id, symbol, 'buy', ...args);\n  }\n\n  editLimitSellOrder(id, symbol, ...args) {\n    return this.editLimitOrder(id, symbol, 'sell', ...args);\n  }\n\n  editLimitOrder(id, symbol, ...args) {\n    return this.editOrder(id, symbol, 'limit', ...args);\n  }\n\n  async editOrder(id, symbol, ...args) {\n    if (!this.enableRateLimit) {\n      throw new ExchangeError(this.id + ' editOrder() requires enableRateLimit = true');\n    }\n\n    await this.cancelOrder(id, symbol);\n    return this.createOrder(symbol, ...args);\n  }\n\n  createLimitOrder(symbol, ...args) {\n    return this.createOrder(symbol, 'limit', ...args);\n  }\n\n  createMarketOrder(symbol, ...args) {\n    return this.createOrder(symbol, 'market', ...args);\n  }\n\n  createLimitBuyOrder(symbol, ...args) {\n    return this.createOrder(symbol, 'limit', 'buy', ...args);\n  }\n\n  createLimitSellOrder(symbol, ...args) {\n    return this.createOrder(symbol, 'limit', 'sell', ...args);\n  }\n\n  createMarketBuyOrder(symbol, amount, params = {}) {\n    return this.createOrder(symbol, 'market', 'buy', amount, undefined, params);\n  }\n\n  createMarketSellOrder(symbol, amount, params = {}) {\n    return this.createOrder(symbol, 'market', 'sell', amount, undefined, params);\n  }\n\n  costToPrecision(symbol, cost) {\n    return decimalToPrecision(cost, TRUNCATE, this.markets[symbol].precision.price, this.precisionMode, this.paddingMode);\n  }\n\n  priceToPrecision(symbol, price) {\n    return decimalToPrecision(price, ROUND, this.markets[symbol].precision.price, this.precisionMode, this.paddingMode);\n  }\n\n  amountToPrecision(symbol, amount) {\n    return decimalToPrecision(amount, TRUNCATE, this.markets[symbol].precision.amount, this.precisionMode, this.paddingMode);\n  }\n\n  feeToPrecision(symbol, fee) {\n    return decimalToPrecision(fee, ROUND, this.markets[symbol].precision.price, this.precisionMode, this.paddingMode);\n  }\n\n  currencyToPrecision(currency, fee) {\n    return decimalToPrecision(fee, ROUND, this.currencies[currency]['precision'], this.precisionMode, this.paddingMode);\n  }\n\n  calculateFee(symbol, type, side, amount, price, takerOrMaker = 'taker', params = {}) {\n    const market = this.markets[symbol];\n    const rate = market[takerOrMaker];\n    const cost = parseFloat(this.costToPrecision(symbol, amount * price));\n    return {\n      'type': takerOrMaker,\n      'currency': market['quote'],\n      'rate': rate,\n      'cost': parseFloat(this.feeToPrecision(symbol, rate * cost))\n    };\n  }\n\n  checkRequiredDependencies() {\n    return;\n  }\n\n  soliditySha3(array) {\n    // we only support address, uint256, and string solidity types\n    const encoded = [];\n\n    for (let i = 0; i < array.length; i++) {\n      const value = array[i];\n\n      if (Number.isInteger(value) || value.match(/^[0-9]+$/)) {\n        encoded.push(this.numberToBE(this.numberToString(value), 32));\n      } else {\n        const noPrefix = this.remove0xPrefix(value);\n\n        if (noPrefix.length === 40 && noPrefix.toLowerCase().match(/^[0-9a-f]+$/)) {\n          // check if it is an address\n          encoded.push(this.base16ToBinary(noPrefix));\n        } else {\n          encoded.push(this.stringToBinary(noPrefix));\n        }\n      }\n    }\n\n    const concated = this.binaryConcatArray(encoded);\n    return '0x' + this.hash(concated, 'keccak', 'hex');\n  }\n\n  remove0xPrefix(hexData) {\n    if (hexData.slice(0, 2) === '0x') {\n      return hexData.slice(2);\n    } else {\n      return hexData;\n    }\n  }\n\n  hashMessage(message) {\n    // takes a hex encoded message\n    const binaryMessage = this.base16ToBinary(this.remove0xPrefix(message));\n    const prefix = this.stringToBinary('\\x19Ethereum Signed Message:\\n' + binaryMessage.sigBytes);\n    return '0x' + this.hash(this.binaryConcat(prefix, binaryMessage), 'keccak', 'hex');\n  }\n\n  signHash(hash, privateKey) {\n    const signature = this.ecdsa(hash.slice(-64), privateKey.slice(-64), 'secp256k1', undefined);\n    return {\n      'r': '0x' + signature['r'],\n      's': '0x' + signature['s'],\n      'v': 27 + signature['v']\n    };\n  }\n\n  signMessage(message, privateKey) {\n    return this.signHash(this.hashMessage(message), privateKey.slice(-64));\n  }\n\n  signMessageString(message, privateKey) {\n    // still takes the input as a hex string\n    // same as above but returns a string instead of an object\n    const signature = this.signMessage(message, privateKey);\n    return signature['r'] + this.remove0xPrefix(signature['s']) + this.binaryToBase16(this.numberToBE(signature['v']));\n  }\n\n  oath() {\n    if (typeof this.twofa !== 'undefined') {\n      return this.totp(this.twofa);\n    } else {\n      throw new ExchangeError(this.id + ' this.twofa has not been set');\n    }\n  } // the following functions take and return numbers represented as strings\n  // this is useful for arbitrary precision maths that floats lack\n\n\n  integerDivide(a, b) {\n    return new BN(a).div(new BN(b));\n  }\n\n  integerModulo(a, b) {\n    return new BN(a).mod(new BN(b));\n  }\n\n  integerPow(a, b) {\n    return new BN(a).pow(new BN(b));\n  }\n\n};","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/node_modules/ccxt/js/base/Exchange.js"],"names":["functions","require","isNode","keys","values","deepExtend","extend","clone","flatten","unique","indexBy","sortBy","groupBy","aggregate","uuid","unCamelCase","precisionFromString","throttle","capitalize","now","timeout","TimedOut","buildOHLCVC","decimalToPrecision","defaultFetch","ExchangeError","BadSymbol","InvalidAddress","NotSupported","AuthenticationError","DDoSProtection","RequestTimeout","ExchangeNotAvailable","RateLimitExceeded","TRUNCATE","ROUND","DECIMAL_PLACES","NO_PADDING","precisionConstants","BN","module","exports","Exchange","describe","undefined","constructor","userConfig","Object","assign","options","fetchOptions","userAgents","headers","proxy","origin","minFundingAddressLength","substituteCommonCurrencyCodes","fetchImplementation","verbose","debug","userAgent","twofa","apiKey","secret","uid","login","password","privateKey","walletAddress","token","balance","orderbooks","tickers","orders","trades","transactions","ohlcvs","myTrades","requiresWeb3","requiresEddsa","precision","enableLastJsonResponse","enableLastHttpResponse","enableLastResponseHeaders","last_http_response","last_json_response","last_response_headers","unCamelCaseProperties","obj","ownPropertyNames","getOwnPropertyNames","i","length","k","getPrototypeOf","configEntries","entries","concat","property","value","prototype","agentOptions","httpAgent","http","Agent","httpsAgent","https","hasKeys","has","api","defineRestApi","initRestRateLimiter","markets","setMarkets","defaults","nonce","seconds","encodeURIComponent","args","checkRequiredCredentials","error","requiredCredentials","key","id","checkAddress","address","includes","toString","json","rateLimit","Error","tokenBucket","delay","capacity","defaultCost","maxCapacity","executeRestRequest","url","method","body","params","agent","indexOf","promise","catch","e","type","message","join","then","response","handleRestResponse","setSandboxMode","enabled","urls","methodName","paths","Array","isArray","uppercaseMethod","toUpperCase","lowercaseMethod","toLowerCase","camelcaseMethod","path","trim","splitPath","split","camelcaseSuffix","map","underscoreSuffix","x","filter","camelcasePrefix","slice","underscorePrefix","camelcase","underscore","typeArgument","partial","print","console","log","setHeaders","fetch","fetch2","enableRateLimit","request","sign","parseJson","jsonString","isJsonEncodedObject","JSON","parse","throwExactlyMatchedException","exact","string","throwBroadlyMatchedException","broad","broadKey","findBroadlyMatchedKey","handleErrors","statusCode","statusText","responseHeaders","responseBody","requestHeaders","requestBody","handleHttpStatusCode","code","reason","codeAsString","httpExceptions","ErrorClass","getResponseHeaders","result","forEach","word","text","replace","status","currencies","market","limits","fees","marketsById","markets_by_id","symbols","sort","ids","baseCurrencies","baseId","base","numericId","baseNumericId","amount","quoteCurrencies","quoteId","quote","quoteNumericId","price","allCurrencies","groupedCurrencies","reduce","previous","current","sortedCurrencies","currencies_by_id","loadMarketsHelper","reload","fetchCurrencies","fetchMarkets","loadMarkets","reloadingMarkets","marketsLoading","resolved","loadAccounts","accounts","fetchAccounts","accountsById","fetchBidsAsks","fetchOHLCVC","symbol","timeframe","since","limit","fetchTrades","ohlcvc","fetchOHLCV","c","parseTradingViewOHLCV","convertTradingViewToOHLCV","parseOHLCVs","t","o","h","l","v","ms","push","convertOHLCVToTradingView","parseInt","fetchTicker","fetchTickers","fetchOrder","fetchUnifiedOrder","order","safeValue","createOrder","side","cancelOrder","cancelUnifiedOrder","fetchOrders","fetchOpenOrders","fetchClosedOrders","fetchMyTrades","fetchTransactions","fetchDeposits","fetchWithdrawals","Promise","resolve","reject","fetchOrderStatus","account","commonCurrencyCode","currency","safeString","commonCurrencies","currencyId","commonCode","currencyIds","distinct","marketId","marketIds","implodeParams","query","omit","extractParams","urlencode","parseBidAsk","bidask","priceKey","amountKey","parseFloat","parseBidsAsks","bidasks","fetchL2OrderBook","orderbook","fetchOrderBook","bids","asks","parseOrderBook","timestamp","bidsKey","asksKey","iso8601","parseBalance","codes","total","free","used","sum","fetchPartialBalance","part","fetchBalance","fetchFreeBalance","fetchUsedBalance","fetchTotalBalance","fetchStatus","time","fetchTime","fetchTradingFees","fetchTradingFee","loadTradingLimits","fetchTradingLimits","milliseconds","filterBySinceLimit","array","tail","sinceIsDefined","entry","filterByValueSinceLimit","field","valueIsDefined","filterBySymbolSinceLimit","filterByCurrencySinceLimit","filterByArray","objects","indexed","parseTrades","trade","parseTrade","parseTransactions","transaction","parseTransaction","parseLedger","data","itemOrItems","parseLedgerEntry","j","parseOrders","parseOrder","safeCurrency","safeCurrencyCode","safeMarket","delimiter","safeSymbol","filterBySymbol","parseOHLCV","ohlcv","editLimitBuyOrder","editLimitOrder","editLimitSellOrder","editOrder","createLimitOrder","createMarketOrder","createLimitBuyOrder","createLimitSellOrder","createMarketBuyOrder","createMarketSellOrder","costToPrecision","cost","precisionMode","paddingMode","priceToPrecision","amountToPrecision","feeToPrecision","fee","currencyToPrecision","calculateFee","takerOrMaker","rate","checkRequiredDependencies","soliditySha3","encoded","Number","isInteger","match","numberToBE","numberToString","noPrefix","remove0xPrefix","base16ToBinary","stringToBinary","concated","binaryConcatArray","hash","hexData","hashMessage","binaryMessage","prefix","sigBytes","binaryConcat","signHash","signature","ecdsa","signMessage","signMessageString","binaryToBase16","oath","totp","integerDivide","a","b","div","integerModulo","mod","integerPow","pow"],"mappings":"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","sourcesContent":["\"use strict\";\n\n// ----------------------------------------------------------------------------\n\nconst functions = require ('./functions')\n\nconst {\n    isNode\n    , keys\n    , values\n    , deepExtend\n    , extend\n    , clone\n    , flatten\n    , unique\n    , indexBy\n    , sortBy\n    , groupBy\n    , aggregate\n    , uuid\n    , unCamelCase\n    , precisionFromString\n    , throttle\n    , capitalize\n    , now\n    , timeout\n    , TimedOut\n    , buildOHLCVC\n    , decimalToPrecision\n    , defaultFetch\n} = functions\n\nconst { // eslint-disable-line object-curly-newline\n    ExchangeError\n    , BadSymbol\n    , InvalidAddress\n    , NotSupported\n    , AuthenticationError\n    , DDoSProtection\n    , RequestTimeout\n    , ExchangeNotAvailable\n    , RateLimitExceeded } = require ('./errors')\n\nconst { TRUNCATE, ROUND, DECIMAL_PLACES, NO_PADDING } = functions.precisionConstants\n\nconst BN = require ('../static_dependencies/BN/bn')\n\n// ----------------------------------------------------------------------------\n\nmodule.exports = class Exchange {\n\n    describe () {\n        return {\n            'id': undefined,\n            'name': undefined,\n            'countries': undefined,\n            'enableRateLimit': false,\n            'rateLimit': 2000, // milliseconds = seconds * 1000\n            'certified': false,\n            'pro': false,\n            'has': {\n                'loadMarkets': true,\n                'cancelAllOrders': false,\n                'cancelOrder': true,\n                'cancelOrders': false,\n                'CORS': false,\n                'createDepositAddress': false,\n                'createLimitOrder': true,\n                'createMarketOrder': true,\n                'createOrder': true,\n                'deposit': false,\n                'editOrder': 'emulated',\n                'fetchBalance': true,\n                'fetchBidsAsks': false,\n                'fetchClosedOrders': false,\n                'fetchCurrencies': false,\n                'fetchDepositAddress': false,\n                'fetchDeposits': false,\n                'fetchFundingFees': false,\n                'fetchL2OrderBook': true,\n                'fetchLedger': false,\n                'fetchMarkets': true,\n                'fetchMyTrades': false,\n                'fetchOHLCV': 'emulated',\n                'fetchOpenOrders': false,\n                'fetchOrder': false,\n                'fetchOrderBook': true,\n                'fetchOrderBooks': false,\n                'fetchOrders': false,\n                'fetchOrderTrades': false,\n                'fetchStatus': 'emulated',\n                'fetchTicker': true,\n                'fetchTickers': false,\n                'fetchTime': false,\n                'fetchTrades': true,\n                'fetchTradingFee': false,\n                'fetchTradingFees': false,\n                'fetchTradingLimits': false,\n                'fetchTransactions': false,\n                'fetchWithdrawals': false,\n                'privateAPI': true,\n                'publicAPI': true,\n                'signIn': false,\n                'withdraw': false,\n            },\n            'urls': {\n                'logo': undefined,\n                'api': undefined,\n                'www': undefined,\n                'doc': undefined,\n                'fees': undefined,\n            },\n            'api': undefined,\n            'requiredCredentials': {\n                'apiKey':     true,\n                'secret':     true,\n                'uid':        false,\n                'login':      false,\n                'password':   false,\n                'twofa':      false, // 2-factor authentication (one-time password key)\n                'privateKey': false, // a \"0x\"-prefixed hexstring private key for a wallet\n                'walletAddress': false, // the wallet address \"0x\"-prefixed hexstring\n                'token':      false, // reserved for HTTP auth in some cases\n            },\n            'markets': undefined, // to be filled manually or by fetchMarkets\n            'currencies': {}, // to be filled manually or by fetchMarkets\n            'timeframes': undefined, // redefine if the exchange has.fetchOHLCV\n            'fees': {\n                'trading': {\n                    'tierBased': undefined,\n                    'percentage': undefined,\n                    'taker': undefined,\n                    'maker': undefined,\n                },\n                'funding': {\n                    'tierBased': undefined,\n                    'percentage': undefined,\n                    'withdraw': {},\n                    'deposit': {},\n                },\n            },\n            'status': {\n                'status': 'ok',\n                'updated': undefined,\n                'eta': undefined,\n                'url': undefined,\n            },\n            'exceptions': undefined,\n            'httpExceptions': {\n                '422': ExchangeError,\n                '418': DDoSProtection,\n                '429': RateLimitExceeded,\n                '404': ExchangeNotAvailable,\n                '409': ExchangeNotAvailable,\n                '410': ExchangeNotAvailable,\n                '500': ExchangeNotAvailable,\n                '501': ExchangeNotAvailable,\n                '502': ExchangeNotAvailable,\n                '520': ExchangeNotAvailable,\n                '521': ExchangeNotAvailable,\n                '522': ExchangeNotAvailable,\n                '525': ExchangeNotAvailable,\n                '526': ExchangeNotAvailable,\n                '400': ExchangeNotAvailable,\n                '403': ExchangeNotAvailable,\n                '405': ExchangeNotAvailable,\n                '503': ExchangeNotAvailable,\n                '530': ExchangeNotAvailable,\n                '408': RequestTimeout,\n                '504': RequestTimeout,\n                '401': AuthenticationError,\n                '511': AuthenticationError,\n            },\n            // some exchanges report only 'free' on `fetchBlance` call (i.e. report no 'used' funds)\n            // in this case ccxt will try to infer 'used' funds from open order cache, which might be stale\n            // still, some exchanges report number of open orders together with balance\n            // if you set the following flag to 'true' ccxt will leave 'used' funds undefined in case of discrepancy\n            'dontGetUsedBalanceFromStaleCache': false,\n            'commonCurrencies': { // gets extended/overwritten in subclasses\n                'XBT': 'BTC',\n                'BCC': 'BCH',\n                'DRK': 'DASH',\n                'BCHABC': 'BCH',\n                'BCHSV': 'BSV',\n            },\n            'precisionMode': DECIMAL_PLACES,\n            'paddingMode': NO_PADDING,\n            'limits': {\n                'amount': { 'min': undefined, 'max': undefined },\n                'price': { 'min': undefined, 'max': undefined },\n                'cost': { 'min': undefined, 'max': undefined },\n            },\n        } // return\n    } // describe ()\n\n    constructor (userConfig = {}) {\n        Object.assign (this, functions)\n        // if (isNode) {\n        //     this.nodeVersion = process.version.match (/\\d+\\.\\d+\\.\\d+/)[0]\n        //     this.userAgent = {\n        //         'User-Agent': 'ccxt/' + Exchange.ccxtVersion +\n        //             ' (+https://github.com/ccxt/ccxt)' +\n        //             ' Node.js/' + this.nodeVersion + ' (JavaScript)'\n        //     }\n        // }\n\n        this.options = {} // exchange-specific options, if any\n\n        // fetch implementation options (JS only)\n        this.fetchOptions = {\n            // keepalive: true, // does not work in Chrome, https://github.com/ccxt/ccxt/issues/6368\n        }\n\n        this.userAgents = {\n            'chrome': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36',\n            'chrome39': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36',\n        }\n\n        this.headers = {}\n\n        // prepended to URL, like https://proxy.com/https://exchange.com/api...\n        this.proxy = ''\n        this.origin = '*' // CORS origin\n\n        this.minFundingAddressLength = 1 // used in checkAddress\n        this.substituteCommonCurrencyCodes = true  // reserved\n\n        // do not delete this line, it is needed for users to be able to define their own fetchImplementation\n        this.fetchImplementation = defaultFetch\n\n        this.timeout       = 10000 // milliseconds\n        this.verbose       = false\n        this.debug         = false\n        this.userAgent     = undefined\n        this.twofa         = undefined // two-factor authentication (2FA)\n\n        this.apiKey        = undefined\n        this.secret        = undefined\n        this.uid           = undefined\n        this.login         = undefined\n        this.password      = undefined\n        this.privateKey    = undefined // a \"0x\"-prefixed hexstring private key for a wallet\n        this.walletAddress = undefined // a wallet address \"0x\"-prefixed hexstring\n        this.token         = undefined // reserved for HTTP auth in some cases\n\n        this.balance      = {}\n        this.orderbooks   = {}\n        this.tickers      = {}\n        this.orders       = undefined\n        this.trades       = {}\n        this.transactions = {}\n        this.ohlcvs       = {}\n        this.myTrades     = undefined\n\n        this.requiresWeb3 = false\n        this.requiresEddsa = false\n        this.precision = {}\n\n        this.enableLastJsonResponse = true\n        this.enableLastHttpResponse = true\n        this.enableLastResponseHeaders = true\n        this.last_http_response    = undefined\n        this.last_json_response    = undefined\n        this.last_response_headers = undefined\n\n        const unCamelCaseProperties = (obj = this) => {\n            if (obj !== null) {\n                const ownPropertyNames = Object.getOwnPropertyNames (obj)\n                for (let i = 0; i < ownPropertyNames.length; i++) {\n                    const k = ownPropertyNames[i]\n                    this[unCamelCase (k)] = this[k]\n                }\n                unCamelCaseProperties (Object.getPrototypeOf (obj))\n            }\n        }\n        unCamelCaseProperties ()\n\n        // merge to this\n        const configEntries = Object.entries (this.describe ()).concat (Object.entries (userConfig))\n        for (let i = 0; i < configEntries.length; i++) {\n            const [property, value] = configEntries[i]\n            if (value && Object.getPrototypeOf (value) === Object.prototype) {\n                this[property] = deepExtend (this[property], value)\n            } else {\n                this[property] = value\n            }\n        }\n\n        const agentOptions = {\n            'keepAlive': true,\n        }\n\n        if (!this.httpAgent && defaultFetch.http && isNode) {\n            this.httpAgent = new defaultFetch.http.Agent (agentOptions)\n        }\n\n        if (!this.httpsAgent && defaultFetch.https && isNode) {\n            this.httpsAgent = new defaultFetch.https.Agent (agentOptions)\n        }\n\n        // generate old metainfo interface\n        const hasKeys = Object.keys (this.has)\n        for (let i = 0; i < hasKeys.length; i++) {\n            const k = hasKeys[i]\n            this['has' + capitalize (k)] = !!this.has[k] // converts 'emulated' to true\n        }\n\n        if (this.api) {\n            this.defineRestApi (this.api, 'request')\n        }\n\n        this.initRestRateLimiter ()\n\n        if (this.markets) {\n            this.setMarkets (this.markets)\n        }\n    }\n\n    defaults () {\n        return { /* override me */ }\n    }\n\n    nonce () {\n        return this.seconds ()\n    }\n\n    encodeURIComponent (...args) {\n        return encodeURIComponent (...args)\n    }\n\n    checkRequiredCredentials (error = true) {\n        const keys = Object.keys (this.requiredCredentials)\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i]\n            if (this.requiredCredentials[key] && !this[key]) {\n                if (error) {\n                    throw new AuthenticationError (this.id + ' requires `' + key + '` credential')\n                } else {\n                    return error\n                }\n            }\n        }\n        return true\n    }\n\n    checkAddress (address) {\n\n        if (address === undefined) {\n            throw new InvalidAddress (this.id + ' address is undefined')\n        }\n\n        // check the address is not the same letter like 'aaaaa' nor too short nor has a space\n        if ((unique (address).length === 1) || address.length < this.minFundingAddressLength || address.includes (' ')) {\n            throw new InvalidAddress (this.id + ' address is invalid or has less than ' + this.minFundingAddressLength.toString () + ' characters: \"' + this.json (address) + '\"')\n        }\n\n        return address\n    }\n\n    initRestRateLimiter () {\n\n        if (this.rateLimit === undefined) {\n            throw new Error (this.id + '.rateLimit property is not configured')\n        }\n\n        this.tokenBucket = this.extend ({\n            delay:       1,\n            capacity:    1,\n            defaultCost: 1,\n            maxCapacity: 1000,\n        }, this.tokenBucket)\n\n        this.throttle = throttle (this.tokenBucket)\n\n        this.executeRestRequest = (url, method = 'GET', headers = undefined, body = undefined) => {\n\n            // fetchImplementation cannot be called on this. in browsers:\n            // TypeError Failed to execute 'fetch' on 'Window': Illegal invocation\n            const fetchImplementation = this.fetchImplementation\n\n            const params = { method, headers, body, timeout: this.timeout }\n\n            if (this.agent) {\n                params['agent'] = this.agent\n            } else if (this.httpAgent && url.indexOf ('http://') === 0) {\n                params['agent'] = this.httpAgent\n            } else if (this.httpsAgent && url.indexOf ('https://') === 0) {\n                params['agent'] = this.httpsAgent\n            }\n\n            const promise =\n                fetchImplementation (url, this.extend (params, this.fetchOptions))\n                    .catch ((e) => {\n                        if (isNode) {\n                            throw new ExchangeNotAvailable ([ this.id, method, url, e.type, e.message ].join (' '))\n                        }\n                        throw e // rethrow all unknown errors\n                    })\n                    .then ((response) => this.handleRestResponse (response, url, method, headers, body))\n\n            return timeout (this.timeout, promise).catch ((e) => {\n                if (e instanceof TimedOut) {\n                    throw new RequestTimeout (this.id + ' ' + method + ' ' + url + ' request timed out (' + this.timeout + ' ms)')\n                }\n                throw e\n            })\n        }\n    }\n\n    setSandboxMode (enabled) {\n        if (!!enabled) { // eslint-disable-line no-extra-boolean-cast\n            if ('test' in this.urls) {\n                if (typeof this.urls['api'] === 'string') {\n                    this.urls['api_backup'] = this.urls['api']\n                    this.urls['api'] = this.urls['test']\n                } else {\n                    this.urls['api_backup'] = clone (this.urls['api'])\n                    this.urls['api'] = clone (this.urls['test'])\n                }\n            } else {\n                throw new NotSupported (this.id + ' does not have a sandbox URL')\n            }\n        } else if ('api_backup' in this.urls) {\n            if (typeof this.urls['api'] === 'string') {\n                this.urls['api'] = this.urls['api_backup']\n            } else {\n                this.urls['api'] = clone (this.urls['api_backup'])\n            }\n        }\n    }\n\n    defineRestApi (api, methodName, paths = []) {\n        const keys = Object.keys (api)\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i]\n            const value = api[key]\n            if (Array.isArray (value)) {\n                const uppercaseMethod = key.toUpperCase ()\n                const lowercaseMethod = key.toLowerCase ()\n                const camelcaseMethod = this.capitalize (lowercaseMethod)\n                for (let k = 0; k < value.length; k++) {\n                    const path = value[k].trim ()\n                    const splitPath = path.split (/[^a-zA-Z0-9]/)\n                    const camelcaseSuffix  = splitPath.map (this.capitalize).join ('')\n                    const underscoreSuffix = splitPath.map ((x) => x.trim ().toLowerCase ()).filter ((x) => x.length > 0).join ('_')\n                    const camelcasePrefix = [ paths[0] ].concat (paths.slice (1).map (this.capitalize)).join ('')\n                    const underscorePrefix = [ paths[0] ].concat (paths.slice (1).map ((x) => x.trim ()).filter ((x) => x.length > 0)).join ('_')\n                    const camelcase  = camelcasePrefix + camelcaseMethod + this.capitalize (camelcaseSuffix)\n                    const underscore = underscorePrefix + '_' + lowercaseMethod + '_' + underscoreSuffix\n                    const typeArgument = (paths.length > 1) ? paths : paths[0]\n                    const partial = async (params) => this[methodName] (path, typeArgument, uppercaseMethod, params || {})\n                    this[camelcase]  = partial\n                    this[underscore] = partial\n                }\n            } else {\n                this.defineRestApi (value, methodName, paths.concat ([ key ]))\n            }\n        }\n    }\n\n    print (... args) {\n        console.log (... args)\n    }\n\n    setHeaders (headers) {\n        return headers;\n    }\n\n    fetch (url, method = 'GET', headers = undefined, body = undefined) {\n\n        if (isNode && this.userAgent) {\n            if (typeof this.userAgent === 'string') {\n                headers = extend ({ 'User-Agent': this.userAgent }, headers)\n            } else if ((typeof this.userAgent === 'object') && ('User-Agent' in this.userAgent)) {\n                headers = extend (this.userAgent, headers)\n            }\n        }\n\n        if (typeof this.proxy === 'function') {\n\n            url = this.proxy (url)\n            if (isNode) {\n                headers = extend ({ 'Origin': this.origin }, headers)\n            }\n\n        } else if (typeof this.proxy === 'string') {\n\n            if (this.proxy.length && isNode) {\n                headers = extend ({ 'Origin': this.origin }, headers)\n            }\n\n            url = this.proxy + url\n        }\n\n        headers = extend (this.headers, headers)\n        headers = this.setHeaders (headers)\n\n        if (this.verbose) {\n            this.print (\"fetch:\\n\", this.id, method, url, \"\\nRequest:\\n\", headers, \"\\n\", body, \"\\n\")\n        }\n\n        return this.executeRestRequest (url, method, headers, body)\n    }\n\n    async fetch2 (path, type = 'public', method = 'GET', params = {}, headers = undefined, body = undefined) {\n\n        if (this.enableRateLimit) {\n            await this.throttle (this.rateLimit)\n        }\n\n        const request = this.sign (path, type, method, params, headers, body)\n        return this.fetch (request.url, request.method, request.headers, request.body)\n    }\n\n    request (path, type = 'public', method = 'GET', params = {}, headers = undefined, body = undefined) {\n        return this.fetch2 (path, type, method, params, headers, body)\n    }\n\n    parseJson (jsonString) {\n        try {\n            if (this.isJsonEncodedObject (jsonString)) {\n                return JSON.parse (jsonString)\n            }\n        } catch (e) {\n            // SyntaxError\n            return undefined\n        }\n    }\n\n    throwExactlyMatchedException (exact, string, message) {\n        if (string in exact) {\n            throw new exact[string] (message)\n        }\n    }\n\n    throwBroadlyMatchedException (broad, string, message) {\n        const broadKey = this.findBroadlyMatchedKey (broad, string)\n        if (broadKey !== undefined) {\n            throw new broad[broadKey] (message)\n        }\n    }\n\n    // a helper for matching error strings exactly vs broadly\n    findBroadlyMatchedKey (broad, string) {\n        const keys = Object.keys (broad)\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i]\n            if (string.indexOf (key) >= 0) {\n                return key\n            }\n        }\n        return undefined\n    }\n\n    handleErrors (statusCode, statusText, url, method, responseHeaders, responseBody, response, requestHeaders, requestBody) {\n        // override me\n    }\n\n    handleHttpStatusCode (code, reason, url, method, body) {\n        const codeAsString = code.toString ()\n        if (codeAsString in this.httpExceptions) {\n            const ErrorClass = this.httpExceptions[codeAsString]\n            throw new ErrorClass ([ this.id, method, url, code, reason, body ].join (' '))\n        }\n    }\n\n    getResponseHeaders (response) {\n        const result = {}\n        response.headers.forEach ((value, key) => {\n            key = key.split ('-').map ((word) => capitalize (word)).join ('-')\n            result[key] = value\n        })\n        return result\n    }\n\n    handleRestResponse (response, url, method = 'GET', requestHeaders = undefined, requestBody = undefined) {\n\n        return response.text ().then ((responseBody) => {\n\n            responseBody = responseBody.trim ()\n\n            const json = this.parseJson (responseBody.replace (/:(\\d{15,}),/g, ':\"$1\",'))\n\n            const responseHeaders = this.getResponseHeaders (response)\n\n            if (this.enableLastResponseHeaders) {\n                this.last_response_headers = responseHeaders\n            }\n\n            if (this.enableLastHttpResponse) {\n                this.last_http_response = responseBody\n            }\n\n            if (this.enableLastJsonResponse) {\n                this.last_json_response = json\n            }\n\n            if (this.verbose) {\n                this.print (\"handleRestResponse:\\n\", this.id, method, url, response.status, response.statusText, \"\\nResponse:\\n\", responseHeaders, \"\\n\", responseBody, \"\\n\")\n            }\n\n            this.handleErrors (response.status, response.statusText, url, method, responseHeaders, responseBody, json, requestHeaders, requestBody)\n            this.handleHttpStatusCode (response.status, response.statusText, url, method, responseBody)\n\n            return json || responseBody\n        })\n    }\n\n    setMarkets (markets, currencies = undefined) {\n        const values = Object.values (markets).map ((market) => deepExtend ({\n            'limits': this.limits,\n            'precision': this.precision,\n        }, this.fees['trading'], market))\n        this.markets = indexBy (values, 'symbol')\n        this.marketsById = indexBy (markets, 'id')\n        this.markets_by_id = this.marketsById\n        this.symbols = Object.keys (this.markets).sort ()\n        this.ids = Object.keys (this.markets_by_id).sort ()\n        if (currencies) {\n            this.currencies = deepExtend (currencies, this.currencies)\n        } else {\n            let baseCurrencies =\n                values.filter ((market) => 'base' in market)\n                    .map ((market) => ({\n                        id: market.baseId || market.base,\n                        numericId: (market.baseNumericId !== undefined) ? market.baseNumericId : undefined,\n                        code: market.base,\n                        precision: market.precision ? (market.precision.base || market.precision.amount) : 8,\n                    }))\n            let quoteCurrencies =\n                values.filter ((market) => 'quote' in market)\n                    .map ((market) => ({\n                        id: market.quoteId || market.quote,\n                        numericId: (market.quoteNumericId !== undefined) ? market.quoteNumericId : undefined,\n                        code: market.quote,\n                        precision: market.precision ? (market.precision.quote || market.precision.price) : 8,\n                    }))\n            baseCurrencies = sortBy (baseCurrencies, 'code')\n            quoteCurrencies = sortBy (quoteCurrencies, 'code')\n            this.baseCurrencies = indexBy (baseCurrencies, 'code')\n            this.quoteCurrencies = indexBy (quoteCurrencies, 'code')\n            const allCurrencies = baseCurrencies.concat (quoteCurrencies)\n            const groupedCurrencies = groupBy (allCurrencies, 'code')\n            const currencies = Object.keys (groupedCurrencies).map ((code) =>\n                groupedCurrencies[code].reduce ((previous, current) => // eslint-disable-line implicit-arrow-linebreak\n                    ((previous.precision > current.precision) ? previous : current), groupedCurrencies[code][0])) // eslint-disable-line implicit-arrow-linebreak\n            const sortedCurrencies = sortBy (flatten (currencies), 'code')\n            this.currencies = deepExtend (indexBy (sortedCurrencies, 'code'), this.currencies)\n        }\n        this.currencies_by_id = indexBy (this.currencies, 'id')\n        return this.markets\n    }\n\n    async loadMarketsHelper (reload = false, params = {}) {\n        if (!reload && this.markets) {\n            if (!this.markets_by_id) {\n                return this.setMarkets (this.markets)\n            }\n            return this.markets\n        }\n        let currencies = undefined\n        if (this.has.fetchCurrencies) {\n            currencies = await this.fetchCurrencies ()\n        }\n        const markets = await this.fetchMarkets (params)\n        return this.setMarkets (markets, currencies)\n    }\n\n    // is async (returns a promise)\n    loadMarkets (reload = false, params = {}) {\n        if ((reload && !this.reloadingMarkets) || !this.marketsLoading) {\n            this.reloadingMarkets = true\n            this.marketsLoading = this.loadMarketsHelper (reload, params).then ((resolved) => {\n                this.reloadingMarkets = false\n                return resolved\n            }, (error) => {\n                this.reloadingMarkets = false\n                throw error\n            })\n        }\n        return this.marketsLoading\n    }\n\n    async loadAccounts (reload = false, params = {}) {\n        if (reload) {\n            this.accounts = await this.fetchAccounts (params)\n        } else {\n            if (this.accounts) {\n                return this.accounts\n            } else {\n                this.accounts = await this.fetchAccounts (params)\n            }\n        }\n        this.accountsById = this.indexBy (this.accounts, 'id')\n        return this.accounts\n    }\n\n    fetchBidsAsks (symbols = undefined, params = {}) {\n        throw new NotSupported (this.id + ' fetchBidsAsks not supported yet')\n    }\n\n    async fetchOHLCVC (symbol, timeframe = '1m', since = undefined, limit = undefined, params = {}) {\n        if (!this.has['fetchTrades']) {\n            throw new NotSupported (this.id + ' fetchOHLCV() not supported yet')\n        }\n        await this.loadMarkets ()\n        const trades = await this.fetchTrades (symbol, since, limit, params)\n        const ohlcvc = buildOHLCVC (trades, timeframe, since, limit)\n        return ohlcvc\n    }\n\n    async fetchOHLCV (symbol, timeframe = '1m', since = undefined, limit = undefined, params = {}) {\n        if (!this.has['fetchTrades']) {\n            throw new NotSupported (this.id + ' fetchOHLCV() not supported yet')\n        }\n        await this.loadMarkets ()\n        const trades = await this.fetchTrades (symbol, since, limit, params)\n        const ohlcvc = buildOHLCVC (trades, timeframe, since, limit)\n        return ohlcvc.map ((c) => c.slice (0, -1))\n    }\n\n    parseTradingViewOHLCV (ohlcvs, market = undefined, timeframe = '1m', since = undefined, limit = undefined) {\n        const result = this.convertTradingViewToOHLCV (ohlcvs)\n        return this.parseOHLCVs (result, market, timeframe, since, limit)\n    }\n\n    convertTradingViewToOHLCV (ohlcvs, t = 't', o = 'o', h = 'h', l = 'l', c = 'c', v = 'v', ms = false) {\n        const result = [];\n        for (let i = 0; i < ohlcvs[t].length; i++) {\n            result.push ([\n                ms ? ohlcvs[t][i] : (ohlcvs[t][i] * 1000),\n                ohlcvs[o][i],\n                ohlcvs[h][i],\n                ohlcvs[l][i],\n                ohlcvs[c][i],\n                ohlcvs[v][i],\n            ])\n        }\n        return result\n    }\n\n    convertOHLCVToTradingView (ohlcvs, t = 't', o = 'o', h = 'h', l = 'l', c = 'c', v = 'v', ms = false) {\n        const result = {}\n        result[t] = []\n        result[o] = []\n        result[h] = []\n        result[l] = []\n        result[c] = []\n        result[v] = []\n        for (let i = 0; i < ohlcvs.length; i++) {\n            result[t].push (ms ? ohlcvs[i][0] : parseInt (ohlcvs[i][0] / 1000))\n            result[o].push (ohlcvs[i][1])\n            result[h].push (ohlcvs[i][2])\n            result[l].push (ohlcvs[i][3])\n            result[c].push (ohlcvs[i][4])\n            result[v].push (ohlcvs[i][5])\n        }\n        return result\n    }\n\n    fetchTicker (symbol, params = {}) {\n        throw new NotSupported (this.id + ' fetchTicker not supported yet')\n    }\n\n    fetchTickers (symbols = undefined, params = {}) {\n        throw new NotSupported (this.id + ' fetchTickers not supported yet')\n    }\n\n    fetchOrder (id, symbol = undefined, params = {}) {\n        throw new NotSupported (this.id + ' fetchOrder not supported yet');\n    }\n\n    fetchUnifiedOrder (order, params = {}) {\n        return this.fetchOrder (this.safeValue (order, 'id'), this.safeValue (order, 'symbol'), params);\n    }\n\n    createOrder (symbol, type, side, amount, price = undefined, params = {}) {\n        throw new NotSupported (this.id + ' createOrder not supported yet');\n    }\n\n    cancelOrder (id, symbol = undefined, params = {}) {\n        throw new NotSupported (this.id + ' cancelOrder not supported yet');\n    }\n\n    cancelUnifiedOrder (order, params = {}) {\n        return this.cancelOrder (this.safeValue (order, 'id'), this.safeValue (order, 'symbol'), params);\n    }\n\n    fetchOrders (symbol = undefined, since = undefined, limit = undefined, params = {}) {\n        throw new NotSupported (this.id + ' fetchOrders not supported yet');\n    }\n\n    fetchOpenOrders (symbol = undefined, since = undefined, limit = undefined, params = {}) {\n        throw new NotSupported (this.id + ' fetchOpenOrders not supported yet');\n    }\n\n    fetchClosedOrders (symbol = undefined, since = undefined, limit = undefined, params = {}) {\n        throw new NotSupported (this.id + ' fetchClosedOrders not supported yet');\n    }\n\n    fetchMyTrades (symbol = undefined, since = undefined, limit = undefined, params = {}) {\n        throw new NotSupported (this.id + ' fetchMyTrades not supported yet');\n    }\n\n    fetchTransactions (symbol = undefined, since = undefined, limit = undefined, params = {}) {\n        throw new NotSupported (this.id + ' fetchTransactions not supported yet');\n    }\n\n    fetchDeposits (symbol = undefined, since = undefined, limit = undefined, params = {}) {\n        throw new NotSupported (this.id + ' fetchDeposits not supported yet');\n    }\n\n    fetchWithdrawals (symbol = undefined, since = undefined, limit = undefined, params = {}) {\n        throw new NotSupported (this.id + ' fetchWithdrawals not supported yet');\n    }\n\n    fetchCurrencies (params = {}) {\n        // markets are returned as a list\n        // currencies are returned as a dict\n        // this is for historical reasons\n        // and may be changed for consistency later\n        return new Promise ((resolve, reject) => resolve (this.currencies));\n    }\n\n    fetchMarkets (params = {}) {\n        // markets are returned as a list\n        // currencies are returned as a dict\n        // this is for historical reasons\n        // and may be changed for consistency later\n        return new Promise ((resolve, reject) => resolve (Object.values (this.markets)))\n    }\n\n    async fetchOrderStatus (id, symbol = undefined, params = {}) {\n        const order = await this.fetchOrder (id, symbol, params);\n        return order['status'];\n    }\n\n    account () {\n        return {\n            'free': undefined,\n            'used': undefined,\n            'total': undefined,\n        }\n    }\n\n    commonCurrencyCode (currency) {\n        if (!this.substituteCommonCurrencyCodes) {\n            return currency\n        }\n        return this.safeString (this.commonCurrencies, currency, currency)\n    }\n\n    currencyId (commonCode) {\n\n        if (this.currencies === undefined) {\n            throw new ExchangeError (this.id + ' currencies not loaded')\n        }\n\n        if (commonCode in this.currencies) {\n            return this.currencies[commonCode]['id'];\n        }\n\n        const currencyIds = {}\n        const distinct = Object.keys (this.commonCurrencies)\n        for (let i = 0; i < distinct.length; i++) {\n            const k = distinct[i]\n            currencyIds[this.commonCurrencies[k]] = k\n        }\n\n        return this.safeString (currencyIds, commonCode, commonCode)\n    }\n\n    currency (code) {\n\n        if (this.currencies === undefined) {\n            throw new ExchangeError (this.id + ' currencies not loaded')\n        }\n\n        if ((typeof code === 'string') && (code in this.currencies)) {\n            return this.currencies[code]\n        }\n\n        throw new ExchangeError (this.id + ' does not have currency code ' + code)\n    }\n\n    market (symbol) {\n\n        if (this.markets === undefined) {\n            throw new ExchangeError (this.id + ' markets not loaded')\n        }\n\n        if ((typeof symbol === 'string') && (symbol in this.markets)) {\n            return this.markets[symbol]\n        }\n\n        throw new BadSymbol (this.id + ' does not have market symbol ' + symbol)\n    }\n\n    marketId (symbol) {\n        const market = this.market (symbol)\n        return (market !== undefined ? market['id'] : symbol)\n    }\n\n    marketIds (symbols) {\n        return symbols.map ((symbol) => this.marketId (symbol))\n    }\n\n    symbol (symbol) {\n        return this.market (symbol).symbol || symbol\n    }\n\n    url (path, params = {}) {\n        let result = this.implodeParams (path, params);\n        const query = this.omit (params, this.extractParams (path))\n        if (Object.keys (query).length) {\n            result += '?' + this.urlencode (query)\n        }\n        return result\n    }\n\n    parseBidAsk (bidask, priceKey = 0, amountKey = 1) {\n        const price = parseFloat (bidask[priceKey])\n        const amount = parseFloat (bidask[amountKey])\n        return [ price, amount ]\n    }\n\n    parseBidsAsks (bidasks, priceKey = 0, amountKey = 1) {\n        return Object.values (bidasks || []).map ((bidask) => this.parseBidAsk (bidask, priceKey, amountKey))\n    }\n\n    async fetchL2OrderBook (symbol, limit = undefined, params = {}) {\n        const orderbook = await this.fetchOrderBook (symbol, limit, params)\n        return extend (orderbook, {\n            'bids': sortBy (aggregate (orderbook.bids), 0, true),\n            'asks': sortBy (aggregate (orderbook.asks), 0),\n        })\n    }\n\n    parseOrderBook (orderbook, timestamp = undefined, bidsKey = 'bids', asksKey = 'asks', priceKey = 0, amountKey = 1) {\n        return {\n            'bids': sortBy ((bidsKey in orderbook) ? this.parseBidsAsks (orderbook[bidsKey], priceKey, amountKey) : [], 0, true),\n            'asks': sortBy ((asksKey in orderbook) ? this.parseBidsAsks (orderbook[asksKey], priceKey, amountKey) : [], 0),\n            'timestamp': timestamp,\n            'datetime': this.iso8601 (timestamp),\n            'nonce': undefined,\n        }\n    }\n\n    parseBalance (balance) {\n\n        const codes = Object.keys (this.omit (balance, [ 'info', 'free', 'used', 'total' ]));\n\n        balance['free'] = {}\n        balance['used'] = {}\n        balance['total'] = {}\n\n        for (let i = 0; i < codes.length; i++) {\n            const code = codes[i]\n            if (balance[code].total === undefined) {\n                if (balance[code].free !== undefined && balance[code].used !== undefined) {\n                    balance[code].total = this.sum (balance[code].free, balance[code].used)\n                }\n            }\n            if (balance[code].free === undefined) {\n                if (balance[code].total !== undefined && balance[code].used !== undefined) {\n                    balance[code].free = this.sum (balance[code].total, -balance[code].used)\n                }\n            }\n            if (balance[code].used === undefined) {\n                if (balance[code].total !== undefined && balance[code].free !== undefined) {\n                    balance[code].used = this.sum (balance[code].total, -balance[code].free)\n                }\n            }\n\n            balance.free[code] = balance[code].free\n            balance.used[code] = balance[code].used\n            balance.total[code] = balance[code].total\n        }\n\n        return balance\n    }\n\n    async fetchPartialBalance (part, params = {}) {\n        const balance = await this.fetchBalance (params)\n        return balance[part]\n    }\n\n    fetchFreeBalance (params = {}) {\n        return this.fetchPartialBalance ('free', params)\n    }\n\n    fetchUsedBalance (params = {}) {\n        return this.fetchPartialBalance ('used', params)\n    }\n\n    fetchTotalBalance (params = {}) {\n        return this.fetchPartialBalance ('total', params)\n    }\n\n    async fetchStatus (params = {}) {\n        if (this.has['fetchTime']) {\n            const time = await this.fetchTime (params)\n            this.status = this.extend (this.status, {\n                'updated': time,\n            })\n        }\n        return this.status\n    }\n\n    async fetchTradingFees (params = {}) {\n        throw new NotSupported (this.id + ' fetchTradingFees not supported yet')\n    }\n\n    async fetchTradingFee (symbol, params = {}) {\n        if (!this.has['fetchTradingFees']) {\n            throw new NotSupported (this.id + ' fetchTradingFee not supported yet')\n        }\n        return await this.fetchTradingFees (params)\n    }\n\n    async loadTradingLimits (symbols = undefined, reload = false, params = {}) {\n        if (this.has['fetchTradingLimits']) {\n            if (reload || !('limitsLoaded' in this.options)) {\n                const response = await this.fetchTradingLimits (symbols);\n                for (let i = 0; i < symbols.length; i++) {\n                    const symbol = symbols[i];\n                    this.markets[symbol] = this.deepExtend (this.markets[symbol], response[symbol]);\n                }\n                this.options['limitsLoaded'] = this.milliseconds ();\n            }\n        }\n        return this.markets;\n    }\n\n    filterBySinceLimit (array, since = undefined, limit = undefined, key = 'timestamp', tail = false) {\n        const sinceIsDefined = (since !== undefined && since !== null)\n        if (sinceIsDefined) {\n            array = array.filter ((entry) => entry[key] >= since)\n        }\n        if (limit !== undefined && limit !== null) {\n            array = (tail && !sinceIsDefined) ? array.slice (-limit) : array.slice (0, limit)\n        }\n        return array\n    }\n\n    filterByValueSinceLimit (array, field, value = undefined, since = undefined, limit = undefined, key = 'timestamp', tail = false) {\n\n        const valueIsDefined = value !== undefined && value !== null\n        const sinceIsDefined = since !== undefined && since !== null\n\n        // single-pass filter for both symbol and since\n        if (valueIsDefined || sinceIsDefined) {\n            array = array.filter ((entry) =>\n                ((valueIsDefined ? (entry[field] === value) : true) &&\n                 (sinceIsDefined ? (entry[key] >= since) : true)))\n        }\n\n        if (limit !== undefined && limit !== null) {\n            array = (tail && !sinceIsDefined) ? array.slice (-limit) : array.slice (0, limit)\n        }\n\n        return array\n    }\n\n    filterBySymbolSinceLimit (array, symbol = undefined, since = undefined, limit = undefined) {\n        return this.filterByValueSinceLimit (array, 'symbol', symbol, since, limit)\n    }\n\n    filterByCurrencySinceLimit (array, code = undefined, since = undefined, limit = undefined) {\n        return this.filterByValueSinceLimit (array, 'currency', code, since, limit)\n    }\n\n    filterByArray (objects, key, values = undefined, indexed = true) {\n\n        objects = Object.values (objects)\n\n        // return all of them if no values were passed\n        if (values === undefined || values === null) {\n            return indexed ? indexBy (objects, key) : objects\n        }\n\n        const result = []\n        for (let i = 0; i < objects.length; i++) {\n            if (values.includes (objects[i][key])) {\n                result.push (objects[i])\n            }\n        }\n\n        return indexed ? indexBy (result, key) : result\n    }\n\n    parseTrades (trades, market = undefined, since = undefined, limit = undefined, params = {}) {\n        // this code is commented out temporarily to catch for exchange-specific errors\n        // if (!this.isArray (trades)) {\n        //     throw new ExchangeError (this.id + ' parseTrades expected an array in the trades argument, but got ' + typeof trades);\n        // }\n        let result = Object.values (trades || []).map ((trade) => this.extend (this.parseTrade (trade, market), params))\n        result = sortBy (result, 'timestamp')\n        const symbol = (market !== undefined) ? market['symbol'] : undefined\n        return this.filterBySymbolSinceLimit (result, symbol, since, limit)\n    }\n\n    parseTransactions (transactions, currency = undefined, since = undefined, limit = undefined, params = {}) {\n        // this code is commented out temporarily to catch for exchange-specific errors\n        // if (!this.isArray (transactions)) {\n        //     throw new ExchangeError (this.id + ' parseTransactions expected an array in the transactions argument, but got ' + typeof transactions);\n        // }\n        let result = Object.values (transactions || []).map ((transaction) => this.extend (this.parseTransaction (transaction, currency), params))\n        result = this.sortBy (result, 'timestamp');\n        const code = (currency !== undefined) ? currency['code'] : undefined;\n        return this.filterByCurrencySinceLimit (result, code, since, limit);\n    }\n\n    parseLedger (data, currency = undefined, since = undefined, limit = undefined, params = {}) {\n        let result = [];\n        const array = Object.values (data || []);\n        for (let i = 0; i < array.length; i++) {\n            const itemOrItems = this.parseLedgerEntry (array[i], currency);\n            if (Array.isArray (itemOrItems)) {\n                for (let j = 0; j < itemOrItems.length; j++) {\n                    result.push (this.extend (itemOrItems[j], params));\n                }\n            } else {\n                result.push (this.extend (itemOrItems, params));\n            }\n        }\n        result = this.sortBy (result, 'timestamp');\n        const code = (currency !== undefined) ? currency['code'] : undefined;\n        return this.filterByCurrencySinceLimit (result, code, since, limit);\n    }\n\n    parseOrders (orders, market = undefined, since = undefined, limit = undefined, params = {}) {\n        //\n        // the value of orders is either a dict or a list\n        //\n        // dict\n        //\n        //     {\n        //         'id1': { ... },\n        //         'id2': { ... },\n        //         'id3': { ... },\n        //         ...\n        //     }\n        //\n        // list\n        //\n        //     [\n        //         { 'id': 'id1', ... },\n        //         { 'id': 'id2', ... },\n        //         { 'id': 'id3', ... },\n        //         ...\n        //     ]\n        //\n        let result = Array.isArray (orders) ?\n            Object.values (orders).map ((order) => this.extend (this.parseOrder (order, market), params)) :\n            Object.entries (orders).map (([ id, order ]) => this.extend (this.parseOrder (this.extend ({ 'id': id }, order), market), params))\n        result = sortBy (result, 'timestamp')\n        const symbol = (market !== undefined) ? market['symbol'] : undefined\n        return this.filterBySymbolSinceLimit (result, symbol, since, limit)\n    }\n\n    safeCurrency (currencyId, currency = undefined) {\n        if ((currencyId === undefined) && (currency !== undefined)) {\n            return currency\n        }\n        if ((this.currencies_by_id !== undefined) && (currencyId in this.currencies_by_id)) {\n            return this.currencies_by_id[currencyId]\n        }\n        return {\n            'id': currencyId,\n            'code': (currencyId === undefined) ? currencyId : this.commonCurrencyCode (currencyId.toUpperCase ()),\n        }\n    }\n\n    safeCurrencyCode (currencyId, currency = undefined) {\n        currency = this.safeCurrency (currencyId, currency)\n        return currency['code']\n    }\n\n    safeMarket (marketId, market = undefined, delimiter = undefined) {\n        if (marketId !== undefined) {\n            if (this.markets_by_id !== undefined && marketId in this.markets_by_id) {\n                market = this.markets_by_id[marketId]\n            } else if (delimiter !== undefined) {\n                const [ baseId, quoteId ] = marketId.split (delimiter)\n                const base = this.safeCurrencyCode (baseId)\n                const quote = this.safeCurrencyCode (quoteId)\n                const symbol = base + '/' + quote\n                return {\n                    'id': marketId,\n                    'symbol': symbol,\n                    'base': base,\n                    'quote': quote,\n                    'baseId': baseId,\n                    'quoteId': quoteId,\n                }\n            }\n        }\n        if (market !== undefined) {\n            return market\n        }\n        return {\n            'id': marketId,\n            'symbol': marketId,\n            'base': undefined,\n            'quote': undefined,\n            'baseId': undefined,\n            'quoteId': undefined,\n        }\n    }\n\n    safeSymbol (marketId, market = undefined, delimiter = undefined) {\n        market = this.safeMarket (marketId, market, delimiter)\n        return market['symbol'];\n    }\n\n    filterBySymbol (array, symbol = undefined) {\n        return ((symbol !== undefined) ? array.filter ((entry) => entry.symbol === symbol) : array)\n    }\n\n    parseOHLCV (ohlcv, market = undefined) {\n        return Array.isArray (ohlcv) ? ohlcv.slice (0, 6) : ohlcv\n    }\n\n    parseOHLCVs (ohlcvs, market = undefined, timeframe = '1m', since = undefined, limit = undefined) {\n        // this code is commented out temporarily to catch for exchange-specific errors\n        // if (!this.isArray (ohlcvs)) {\n        //     throw new ExchangeError (this.id + ' parseOHLCVs expected an array in the ohlcvs argument, but got ' + typeof ohlcvs);\n        // }\n        ohlcvs = Object.values (ohlcvs || [])\n        const result = []\n        for (let i = 0; i < ohlcvs.length; i++) {\n            if (limit && (result.length >= limit)) {\n                break;\n            }\n            const ohlcv = this.parseOHLCV (ohlcvs[i], market)\n            if (since && (ohlcv[0] < since)) {\n                continue\n            }\n            result.push (ohlcv)\n        }\n        return this.sortBy (result, 0)\n    }\n\n    editLimitBuyOrder (id, symbol, ...args) {\n        return this.editLimitOrder (id, symbol, 'buy', ...args)\n    }\n\n    editLimitSellOrder (id, symbol, ...args) {\n        return this.editLimitOrder (id, symbol, 'sell', ...args)\n    }\n\n    editLimitOrder (id, symbol, ...args) {\n        return this.editOrder (id, symbol, 'limit', ...args)\n    }\n\n    async editOrder (id, symbol, ...args) {\n        if (!this.enableRateLimit) {\n            throw new ExchangeError (this.id + ' editOrder() requires enableRateLimit = true')\n        }\n        await this.cancelOrder (id, symbol);\n        return this.createOrder (symbol, ...args)\n    }\n\n    createLimitOrder (symbol, ...args) {\n        return this.createOrder (symbol, 'limit', ...args)\n    }\n\n    createMarketOrder (symbol, ...args) {\n        return this.createOrder (symbol, 'market', ...args)\n    }\n\n    createLimitBuyOrder (symbol, ...args) {\n        return this.createOrder  (symbol, 'limit', 'buy', ...args)\n    }\n\n    createLimitSellOrder (symbol, ...args) {\n        return this.createOrder (symbol, 'limit', 'sell', ...args)\n    }\n\n    createMarketBuyOrder (symbol, amount, params = {}) {\n        return this.createOrder (symbol, 'market', 'buy', amount, undefined, params)\n    }\n\n    createMarketSellOrder (symbol, amount, params = {}) {\n        return this.createOrder (symbol, 'market', 'sell', amount, undefined, params)\n    }\n\n    costToPrecision (symbol, cost) {\n        return decimalToPrecision (cost, TRUNCATE, this.markets[symbol].precision.price, this.precisionMode, this.paddingMode)\n    }\n\n    priceToPrecision (symbol, price) {\n        return decimalToPrecision (price, ROUND, this.markets[symbol].precision.price, this.precisionMode, this.paddingMode)\n    }\n\n    amountToPrecision (symbol, amount) {\n        return decimalToPrecision (amount, TRUNCATE, this.markets[symbol].precision.amount, this.precisionMode, this.paddingMode)\n    }\n\n    feeToPrecision (symbol, fee) {\n        return decimalToPrecision (fee, ROUND, this.markets[symbol].precision.price, this.precisionMode, this.paddingMode)\n    }\n\n    currencyToPrecision (currency, fee) {\n        return decimalToPrecision (fee, ROUND, this.currencies[currency]['precision'], this.precisionMode, this.paddingMode);\n    }\n\n    calculateFee (symbol, type, side, amount, price, takerOrMaker = 'taker', params = {}) {\n        const market = this.markets[symbol]\n        const rate = market[takerOrMaker]\n        const cost = parseFloat (this.costToPrecision (symbol, amount * price))\n        return {\n            'type': takerOrMaker,\n            'currency': market['quote'],\n            'rate': rate,\n            'cost': parseFloat (this.feeToPrecision (symbol, rate * cost)),\n        }\n    }\n\n    checkRequiredDependencies () {\n        return\n    }\n\n    soliditySha3 (array) {\n        // we only support address, uint256, and string solidity types\n        const encoded = []\n        for (let i = 0; i < array.length; i++) {\n            const value = array[i]\n            if (Number.isInteger (value) || value.match (/^[0-9]+$/)) {\n                encoded.push (this.numberToBE (this.numberToString (value), 32))\n            } else {\n                const noPrefix = this.remove0xPrefix (value)\n                if (noPrefix.length === 40 && noPrefix.toLowerCase ().match (/^[0-9a-f]+$/)) { // check if it is an address\n                    encoded.push (this.base16ToBinary (noPrefix))\n                } else {\n                    encoded.push (this.stringToBinary (noPrefix))\n                }\n            }\n        }\n        const concated = this.binaryConcatArray (encoded)\n        return '0x' + this.hash (concated, 'keccak', 'hex')\n    }\n\n    remove0xPrefix (hexData) {\n        if (hexData.slice (0, 2) === '0x') {\n            return hexData.slice (2)\n        } else {\n            return hexData\n        }\n    }\n\n    hashMessage (message) {\n        // takes a hex encoded message\n        const binaryMessage = this.base16ToBinary (this.remove0xPrefix (message))\n        const prefix = this.stringToBinary ('\\x19Ethereum Signed Message:\\n' + binaryMessage.sigBytes)\n        return '0x' + this.hash (this.binaryConcat (prefix, binaryMessage), 'keccak', 'hex')\n    }\n\n    signHash (hash, privateKey) {\n        const signature = this.ecdsa (hash.slice (-64), privateKey.slice (-64), 'secp256k1', undefined)\n        return {\n            'r': '0x' + signature['r'],\n            's': '0x' + signature['s'],\n            'v': 27 + signature['v'],\n        }\n    }\n\n    signMessage (message, privateKey) {\n        return this.signHash (this.hashMessage (message), privateKey.slice (-64))\n    }\n\n    signMessageString (message, privateKey) {\n        // still takes the input as a hex string\n        // same as above but returns a string instead of an object\n        const signature = this.signMessage (message, privateKey)\n        return signature['r'] + this.remove0xPrefix (signature['s']) + this.binaryToBase16 (this.numberToBE (signature['v']));\n    }\n\n    oath () {\n        if (typeof this.twofa !== 'undefined') {\n            return this.totp (this.twofa)\n        } else {\n            throw new ExchangeError (this.id + ' this.twofa has not been set')\n        }\n    }\n\n    // the following functions take and return numbers represented as strings\n    // this is useful for arbitrary precision maths that floats lack\n    integerDivide (a, b) {\n        return new BN (a).div (new BN (b))\n    }\n\n    integerModulo (a, b) {\n        return new BN (a).mod (new BN (b))\n    }\n\n    integerPow (a, b) {\n        return new BN (a).pow (new BN (b))\n    }\n}\n\n"]},"metadata":{},"sourceType":"script"}