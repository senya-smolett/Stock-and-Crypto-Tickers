{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\senya\\\\Documents\\\\Coding\\\\React Projects\\\\react-stock-ticker\\\\src\\\\components\\\\TickerAPIData.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nconst TickerAPIData = ({\n  tickername,\n  isstock\n}) => {\n  _s();\n\n  const [price, setPrice] = useState(\"...\");\n  const [date, setDate] = useState(new Date());\n  const symbol = tickername;\n  const stock = isstock;\n  var tickprice = '';\n\n  var ccxt = require('ccxt'); //console.log(symbol)\n  //console.log(ticker.tickername)\n  // const removeZeroes = (rawprice) => {\n  //     rawprice = rawprice.toLocaleString('decimal', { minimumFractionDigits: 8 })\n  //     for (let index = rawprice.length; index <= 0; index--) {\n  //         const element = rawprice[index];\n  //         if (element == '0') {\n  //             rawprice.slice(0, -1)\n  //         } else {\n  //             break;\n  //         }\n  //     }\n  //     console.log(rawprice)\n  //     return rawprice\n  // }\n\n\n  useEffect(() => {\n    //console.log (ccxt.exchanges)\n    if (stock) {//console.log(symbol, \" is stock\")\n    } else {//console.log(symbol, \" is crpyto\")\n      }\n\n    const getPrice = async tickprice => {\n      let binance = new ccxt.binance({\n        apiKey: \"erShVoKXGbqzqDdz6ejYEIlB79N4DXitzeWBuiYJtKwXCgWZB0uXWwyNQHBeWHKz\",\n        secret: \"eMAOSSCJmfqOGBKfaAxSElIj28I7Nam40Rb0RVM2IbA4Vb5mfJsn9eEdEGkv8Qao\"\n      });\n\n      try {\n        tickprice = (await binance.fetchTicker(symbol)).last.toLocaleString('decimal', {\n          minimumFractionDigits: 8\n        });\n        tickprice = tickprice.replace(/^\\d*(?=\\.).*?\\K\\.?0*$/gm);\n        console.log(tickprice);\n        setPrice(tickprice); //setPrice((await binance.fetchTicker(symbol)).last)\n        //tickprice = removeZeroes((await binance.fetchTicker(symbol)).last)\n      } catch (error) {\n        console.log(error);\n        setPrice(error.message);\n      } //console.log(ticker.tickername)\n\n    };\n\n    var timerID = setInterval(() => {\n      getPrice();\n    }, 2000);\n\n    if (symbol === \"SC/BTC\") {\n      console.log(price);\n    } //console.log('a')\n\n\n    return function cleanup() {\n      //console.log('b')\n      clearInterval(timerID);\n    };\n  }, [price]); // useEffect(() => {\n  //     const getPrice = async () => {\n  //         const res = await fetch(\"https://finnhub.io/api/v1/quote?symbol=BTC&token=brodjmfrh5r8qo238g3g\");\n  //         const data = await res.json();\n  //         console.log(data);\n  //         setPrice(data.c)\n  //     };\n  //     getPrice()\n  //   }); \n  // useEffect(() => {  {/*Fetching API response here to set state*/}\n  // axios\n  //     .get(\n  //         `ttps://finnhub.io/api/v1/quote?symbol=AAPL&token=brodjmfrh5r8qo238g3g`\n  //     )\n  //     .then((res) => {\n  //         console.log(res.data);\n  //         setPrice(res.data.t);\n  //     })\n  //     .catch((err) => {\n  //         console.log(err);\n  //     });\n  // }, [price]);\n  // const options = {\n  //   method: 'GET',\n  //   url: 'https://apidojo-yahoo-finance-v1.p.rapidapi.com/auto-complete',\n  //   params: {q: 'TSLA', region: 'US'},\n  //   headers: {\n  //     'x-rapidapi-key': '0025dc6002msh8f9919dfc909b77p18f084jsn44758b02c23e',\n  //     'x-rapidapi-host': 'apidojo-yahoo-finance-v1.p.rapidapi.com'\n  //   }\n  // };\n  //     useEffect(() => {\n  //         axios.request(options).then(function (response) {\n  //             console.log(response.data);\n  //         }).catch(function (error) {\n  //             console.error(error);\n  //         });\n  //     }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TickerAPIData, \"zRgQdHtlSocG0rdY8bgRR2NXjhw=\");\n\n_c = TickerAPIData;\nReactDOM.render( /*#__PURE__*/_jsxDEV(TickerAPIData, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 124,\n  columnNumber: 5\n}, this), document.getElementById('root'));\nexport default TickerAPIData;\n\nvar _c;\n\n$RefreshReg$(_c, \"TickerAPIData\");","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/src/components/TickerAPIData.js"],"names":["React","useEffect","useState","ReactDOM","axios","TickerAPIData","tickername","isstock","price","setPrice","date","setDate","Date","symbol","stock","tickprice","ccxt","require","getPrice","binance","apiKey","secret","fetchTicker","last","toLocaleString","minimumFractionDigits","replace","console","log","error","message","timerID","setInterval","cleanup","clearInterval","render","document","getElementById"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AAAA;;AAC/C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAIU,IAAJ,EAAD,CAAhC;AACA,QAAMC,MAAM,GAAGP,UAAf;AACA,QAAMQ,KAAK,GAAGP,OAAd;AACA,MAAIQ,SAAS,GAAG,EAAhB;;AACA,MAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB,CAN+C,CAO/C;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZ;AAEA,QAAIa,KAAJ,EAAW,CACP;AACH,KAFD,MAEO,CACH;AACH;;AACD,UAAMI,QAAQ,GAAG,MAAOH,SAAP,IAAqB;AAClC,UAAII,OAAO,GAAG,IAAIH,IAAI,CAACG,OAAT,CAAiB;AAC3BC,QAAAA,MAAM,EACF,kEAFuB;AAG3BC,QAAAA,MAAM,EACF;AAJuB,OAAjB,CAAd;;AAMA,UAAI;AACAN,QAAAA,SAAS,GAAG,CAAC,MAAMI,OAAO,CAACG,WAAR,CAAoBT,MAApB,CAAP,EAAoCU,IAApC,CAAyCC,cAAzC,CAAwD,SAAxD,EAAmE;AAAEC,UAAAA,qBAAqB,EAAE;AAAzB,SAAnE,CAAZ;AACAV,QAAAA,SAAS,GAAGA,SAAS,CAACW,OAAV,CAAkB,yBAAlB,CAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AACAN,QAAAA,QAAQ,CAACM,SAAD,CAAR,CAJA,CAKA;AACA;AACH,OAPD,CAOE,OAAOc,KAAP,EAAc;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACApB,QAAAA,QAAQ,CAACoB,KAAK,CAACC,OAAP,CAAR;AACH,OAjBiC,CAkBlC;;AACH,KAnBD;;AAoBA,QAAIC,OAAO,GAAGC,WAAW,CAAC,MAAM;AAC5Bd,MAAAA,QAAQ;AACX,KAFwB,EAEtB,IAFsB,CAAzB;;AAGA,QAAIL,MAAM,KAAK,QAAf,EAAyB;AACrBc,MAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACH,KAjCW,CAkCZ;;;AACA,WAAO,SAASyB,OAAT,GAAmB;AACtB;AACAC,MAAAA,aAAa,CAACH,OAAD,CAAb;AACH,KAHD;AAIH,GAvCQ,EAuCN,CAACvB,KAAD,CAvCM,CAAT,CAxB+C,CAiE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA,sBACI;AAAA,2BACI;AAAA,gBACKA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CApHD;;GAAMH,a;;KAAAA,a;AAqHNF,QAAQ,CAACgC,MAAT,eACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EAEIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ;AAIA,eAAehC,aAAf","sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport axios from 'axios';\r\n\r\nconst TickerAPIData = ({ tickername, isstock }) => {\r\n    const [price, setPrice] = useState(\"...\")\r\n    const [date, setDate] = useState(new Date());\r\n    const symbol = tickername;\r\n    const stock = isstock;\r\n    var tickprice = '';\r\n    var ccxt = require('ccxt')\r\n    //console.log(symbol)\r\n    //console.log(ticker.tickername)\r\n\r\n    // const removeZeroes = (rawprice) => {\r\n    //     rawprice = rawprice.toLocaleString('decimal', { minimumFractionDigits: 8 })\r\n    //     for (let index = rawprice.length; index <= 0; index--) {\r\n    //         const element = rawprice[index];\r\n    //         if (element == '0') {\r\n    //             rawprice.slice(0, -1)\r\n    //         } else {\r\n    //             break;\r\n    //         }\r\n    //     }\r\n    //     console.log(rawprice)\r\n    //     return rawprice\r\n    // }\r\n\r\n    useEffect(() => {\r\n        //console.log (ccxt.exchanges)\r\n\r\n        if (stock) {\r\n            //console.log(symbol, \" is stock\")\r\n        } else {\r\n            //console.log(symbol, \" is crpyto\")\r\n        }\r\n        const getPrice = async (tickprice) => {\r\n            let binance = new ccxt.binance({\r\n                apiKey:\r\n                    \"erShVoKXGbqzqDdz6ejYEIlB79N4DXitzeWBuiYJtKwXCgWZB0uXWwyNQHBeWHKz\",\r\n                secret:\r\n                    \"eMAOSSCJmfqOGBKfaAxSElIj28I7Nam40Rb0RVM2IbA4Vb5mfJsn9eEdEGkv8Qao\",\r\n            });\r\n            try {\r\n                tickprice = (await binance.fetchTicker(symbol)).last.toLocaleString('decimal', { minimumFractionDigits: 8 })\r\n                tickprice = tickprice.replace(/^\\d*(?=\\.).*?\\K\\.?0*$/gm)\r\n                console.log(tickprice)\r\n                setPrice(tickprice)\r\n                //setPrice((await binance.fetchTicker(symbol)).last)\r\n                //tickprice = removeZeroes((await binance.fetchTicker(symbol)).last)\r\n            } catch (error) {\r\n                console.log(error)\r\n                setPrice(error.message)\r\n            }\r\n            //console.log(ticker.tickername)\r\n        }\r\n        var timerID = setInterval(() => {\r\n            getPrice()\r\n        }, 2000);\r\n        if (symbol === \"SC/BTC\") {\r\n            console.log(price)\r\n        }\r\n        //console.log('a')\r\n        return function cleanup() {\r\n            //console.log('b')\r\n            clearInterval(timerID);\r\n        };\r\n    }, [price]);\r\n\r\n    // useEffect(() => {\r\n    //     const getPrice = async () => {\r\n    //         const res = await fetch(\"https://finnhub.io/api/v1/quote?symbol=BTC&token=brodjmfrh5r8qo238g3g\");\r\n    //         const data = await res.json();\r\n    //         console.log(data);\r\n    //         setPrice(data.c)\r\n    //     };\r\n    //     getPrice()\r\n    //   }); \r\n\r\n    // useEffect(() => {  {/*Fetching API response here to set state*/}\r\n    // axios\r\n    //     .get(\r\n    //         `ttps://finnhub.io/api/v1/quote?symbol=AAPL&token=brodjmfrh5r8qo238g3g`\r\n    //     )\r\n    //     .then((res) => {\r\n    //         console.log(res.data);\r\n    //         setPrice(res.data.t);\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log(err);\r\n    //     });\r\n    // }, [price]);\r\n\r\n    // const options = {\r\n    //   method: 'GET',\r\n    //   url: 'https://apidojo-yahoo-finance-v1.p.rapidapi.com/auto-complete',\r\n    //   params: {q: 'TSLA', region: 'US'},\r\n    //   headers: {\r\n    //     'x-rapidapi-key': '0025dc6002msh8f9919dfc909b77p18f084jsn44758b02c23e',\r\n    //     'x-rapidapi-host': 'apidojo-yahoo-finance-v1.p.rapidapi.com'\r\n    //   }\r\n    // };\r\n\r\n    //     useEffect(() => {\r\n    //         axios.request(options).then(function (response) {\r\n    //             console.log(response.data);\r\n    //         }).catch(function (error) {\r\n    //             console.error(error);\r\n    //         });\r\n\r\n\r\n    //     }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h4>\r\n                {price}\r\n            </h4>\r\n        </div>\r\n    )\r\n}\r\nReactDOM.render(\r\n    <TickerAPIData />,\r\n    document.getElementById('root')\r\n);\r\nexport default TickerAPIData\r\n\r\n"]},"metadata":{},"sourceType":"module"}