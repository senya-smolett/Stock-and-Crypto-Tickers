{"ast":null,"code":"\"use strict\";\n/*  ------------------------------------------------------------------------ */\n\nconst isNumber = Number.isFinite,\n      isInteger = Number.isInteger,\n      isArray = Array.isArray,\n      hasProps = o => o !== undefined && o !== null,\n      isString = s => typeof s === 'string',\n      isObject = o => o !== null && typeof o === 'object',\n      isRegExp = o => o instanceof RegExp,\n      isDictionary = o => isObject(o) && Object.getPrototypeOf(o) === Object.prototype && !isArray(o) && !isRegExp(o),\n      isStringCoercible = x => hasProps(x) && x.toString || isNumber(x);\n/*  .............................................   */\n\n\nconst prop = (o, k) => isObject(o) ? o[k] : undefined,\n      prop2 = (o, k1, k2) => !isObject(o) ? undefined : k1 in o && o[k1] !== null ? o[k1] : o[k2];\n/*  .............................................   */\n\n\nconst asFloat = x => isNumber(x) || isString(x) ? parseFloat(x) : NaN,\n      asInteger = x => isNumber(x) || isString(x) ? parseInt(x, 10) : NaN;\n/*  .............................................   */\n\n\nmodule.exports = {\n  isNumber,\n  isInteger,\n  isArray,\n  isObject,\n  isString,\n  isStringCoercible,\n  isDictionary,\n  hasProps,\n  prop,\n  asFloat,\n  asInteger,\n  safeFloat: (o, k, $default, n = asFloat(prop(o, k))) => isNumber(n) ? n : $default,\n  safeInteger: (o, k, $default, n = asInteger(prop(o, k))) => isNumber(n) ? n : $default,\n  safeIntegerProduct: (o, k, $factor, $default, n = asInteger(prop(o, k))) => isNumber(n) ? parseInt(n * $factor) : $default,\n  safeTimestamp: (o, k, $default, n = asFloat(prop(o, k))) => isNumber(n) ? parseInt(n * 1000) : $default,\n  safeValue: (o, k, $default, x = prop(o, k)) => hasProps(x) ? x : $default,\n  safeString: (o, k, $default, x = prop(o, k)) => isStringCoercible(x) ? String(x) : $default,\n  safeStringLower: (o, k, $default, x = prop(o, k)) => isStringCoercible(x) ? String(x).toLowerCase() : $default,\n  safeStringUpper: (o, k, $default, x = prop(o, k)) => isStringCoercible(x) ? String(x).toUpperCase() : $default // not using safeFloats with an array argument as we're trying to save some cycles here\n  // we're not using safeFloat3 either because those cases are too rare to deserve their own optimization\n  ,\n  safeFloat2: (o, k1, k2, $default, n = asFloat(prop2(o, k1, k2))) => isNumber(n) ? n : $default,\n  safeInteger2: (o, k1, k2, $default, n = asInteger(prop2(o, k1, k2))) => isNumber(n) ? n : $default,\n  safeIntegerProduct2: (o, k1, k2, $factor, $default, n = asInteger(prop2(o, k1, k2))) => isNumber(n) ? parseInt(n * $factor) : $default,\n  safeTimestamp2: (o, k1, k2, $default, n = asFloat(prop2(o, k1, k2))) => isNumber(n) ? parseInt(n * 1000) : $default,\n  safeValue2: (o, k1, k2, $default, x = prop2(o, k1, k2)) => hasProps(x) ? x : $default,\n  safeString2: (o, k1, k2, $default, x = prop2(o, k1, k2)) => isStringCoercible(x) ? String(x) : $default,\n  safeStringLower2: (o, k1, k2, $default, x = prop2(o, k1, k2)) => isStringCoercible(x) ? String(x).toLowerCase() : $default,\n  safeStringUpper2: (o, k1, k2, $default, x = prop2(o, k1, k2)) => isStringCoercible(x) ? String(x).toUpperCase() : $default\n};\n/*  ------------------------------------------------------------------------ */","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/node_modules/ccxt/js/base/functions/type.js"],"names":["isNumber","Number","isFinite","isInteger","isArray","Array","hasProps","o","undefined","isString","s","isObject","isRegExp","RegExp","isDictionary","Object","getPrototypeOf","prototype","isStringCoercible","x","toString","prop","k","prop2","k1","k2","asFloat","parseFloat","NaN","asInteger","parseInt","module","exports","safeFloat","$default","n","safeInteger","safeIntegerProduct","$factor","safeTimestamp","safeValue","safeString","String","safeStringLower","toLowerCase","safeStringUpper","toUpperCase","safeFloat2","safeInteger2","safeIntegerProduct2","safeTimestamp2","safeValue2","safeString2","safeStringLower2","safeStringUpper2"],"mappings":"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","sourcesContent":["\"use strict\";\n\n/*  ------------------------------------------------------------------------ */\n\nconst isNumber          = Number.isFinite\n    , isInteger         = Number.isInteger\n    , isArray           = Array.isArray\n    , hasProps          = o => ((o !== undefined) && (o !== null))\n    , isString          = s =>                  (typeof s === 'string')\n    , isObject          = o => ((o !== null) && (typeof o === 'object'))\n    , isRegExp          = o => (o instanceof RegExp)\n    , isDictionary      = o => (isObject (o) && (Object.getPrototypeOf (o) === Object.prototype) && !isArray (o) && !isRegExp (o))\n    , isStringCoercible = x => ((hasProps (x) && x.toString) || isNumber (x))\n\n/*  .............................................   */\n\nconst prop = (o, k) => (isObject (o) ? o[k] : undefined)\n    , prop2 = (o, k1, k2) => (!isObject (o) ? undefined : (((k1 in o) && (o[k1] !== null)) ? o[k1] : o[k2]))\n\n/*  .............................................   */\n\nconst asFloat   = x => ((isNumber (x) || isString (x)) ? parseFloat (x)     : NaN)\n    , asInteger = x => ((isNumber (x) || isString (x)) ? parseInt   (x, 10) : NaN)\n\n/*  .............................................   */\n\nmodule.exports = {\n\n    isNumber\n    , isInteger\n    , isArray\n    , isObject\n    , isString\n    , isStringCoercible\n    , isDictionary\n\n    , hasProps\n    , prop\n\n    , asFloat\n    , asInteger\n\n    , safeFloat:          (o, k,          $default, n =   asFloat (prop (o, k))) => (isNumber (n)          ? n                         : $default)\n    , safeInteger:        (o, k,          $default, n = asInteger (prop (o, k))) => (isNumber (n)          ? n                         : $default)\n    , safeIntegerProduct: (o, k, $factor, $default, n = asInteger (prop (o, k))) => (isNumber (n)          ? parseInt (n * $factor)    : $default)\n    , safeTimestamp:      (o, k,          $default, n =   asFloat (prop (o, k))) => (isNumber (n)          ? parseInt (n * 1000)       : $default)\n    , safeValue:          (o, k,          $default, x =            prop (o, k))  => (hasProps (x)          ? x                         : $default)\n    , safeString:         (o, k,          $default, x =            prop (o, k))  => (isStringCoercible (x) ? String (x)                : $default)\n    , safeStringLower:    (o, k,          $default, x =            prop (o, k))  => (isStringCoercible (x) ? String (x).toLowerCase () : $default)\n    , safeStringUpper:    (o, k,          $default, x =            prop (o, k))  => (isStringCoercible (x) ? String (x).toUpperCase () : $default)\n\n    // not using safeFloats with an array argument as we're trying to save some cycles here\n    // we're not using safeFloat3 either because those cases are too rare to deserve their own optimization\n\n    , safeFloat2:          (o, k1, k2,          $default, n =   asFloat (prop2 (o, k1, k2))) => (isNumber (n)          ? n                         : $default)\n    , safeInteger2:        (o, k1, k2,          $default, n = asInteger (prop2 (o, k1, k2))) => (isNumber (n)          ? n                         : $default)\n    , safeIntegerProduct2: (o, k1, k2, $factor, $default, n = asInteger (prop2 (o, k1, k2))) => (isNumber (n)          ? parseInt (n * $factor)    : $default)\n    , safeTimestamp2:      (o, k1, k2,          $default, n =   asFloat (prop2 (o, k1, k2))) => (isNumber (n)          ? parseInt (n * 1000)       : $default)\n    , safeValue2:          (o, k1, k2,          $default, x =            prop2 (o, k1, k2))  => (hasProps (x)          ? x                         : $default)\n    , safeString2:         (o, k1, k2,          $default, x =            prop2 (o, k1, k2))  => (isStringCoercible (x) ? String (x)                : $default)\n    , safeStringLower2:    (o, k1, k2,          $default, x =            prop2 (o, k1, k2))  => (isStringCoercible (x) ? String (x).toLowerCase () : $default)\n    , safeStringUpper2:    (o, k1, k2,          $default, x =            prop2 (o, k1, k2))  => (isStringCoercible (x) ? String (x).toUpperCase () : $default)\n\n}\n\n/*  ------------------------------------------------------------------------ */\n"]},"metadata":{},"sourceType":"script"}