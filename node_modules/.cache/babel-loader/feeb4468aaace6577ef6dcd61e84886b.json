{"ast":null,"code":"(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function () {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this._strip();\n  };\n\n  function parseHex(str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r <<= 4;\n      var b; // 'a' - 'f'\n\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa; // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa; // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w; // Scan 24-bit chunks and add them to the number\n\n    var off = 0;\n\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= w << off & 0x3ffffff; // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n    }\n\n    this._strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        b = c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa; // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype._move = function _move(dest) {\n    dest.words = this.words;\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype._strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  }; // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n\n\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer(endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate(ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = this.words[i] << shift | carry;\n      res[position++] = word & 0xff;\n\n      if (position < res.length) {\n        res[position++] = word >> 8 & 0xff;\n      }\n\n      if (position < res.length) {\n        res[position++] = word >> 16 & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = word >> 24 & 0xff;\n        }\n\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = this.words[i] << shift | carry;\n      res[position--] = word & 0xff;\n\n      if (position >= 0) {\n        res[position--] = word >> 8 & 0xff;\n      }\n\n      if (position >= 0) {\n        res[position--] = word >> 16 & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = word >> 24 & 0xff;\n        }\n\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = num.words[off] >>> wbit & 0x01;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q._strip();\n    }\n\n    a._strip(); // Denormalize\n\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  }; // WARNING: DEPRECATED\n\n\n  BN.prototype.modn = function modn(num) {\n    return this.modrn(num);\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r._strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    a.umod(this.m)._forceRed(this)._move(a);\n\n    return a;\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/node_modules/ccxt/js/static_dependencies/BN/bn.js"],"names":["module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","length","red","_init","wordSize","Buffer","require","e","num","Array","isArray","max","left","right","cmp","min","init","_initNumber","_initArray","toString","replace","start","_parseHex","_parseBase","_strip","toArray","Math","ceil","i","j","w","off","parseHex","str","end","r","len","z","c","charCodeAt","b","parseBase","mul","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","_move","clone","_expand","size","strip","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","allocate","ArrayType","allocUnsafe","byteLength","reqLength","res","postfix","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","a","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","smallMulTo","self","lo","k","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","FFTM","x","y","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","ireduce","rlen","split","imulK","input","K256","call","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u"],"mappings":"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","sourcesContent":["(function (module, exports) {\n    'use strict';\n\n    // Utils\n    function assert (val, msg) {\n        if (!val) throw new Error(msg || 'Assertion failed');\n    }\n\n    // Could use `inherits` module, but don't want to move from single file\n    // architecture yet.\n    function inherits (ctor, superCtor) {\n        ctor.super_ = superCtor;\n        var TempCtor = function () {};\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n    }\n\n    // BN\n\n    function BN (number, base, endian) {\n        if (BN.isBN(number)) {\n            return number;\n        }\n\n        this.negative = 0;\n        this.words = null;\n        this.length = 0;\n\n        // Reduction context\n        this.red = null;\n\n        if (number !== null) {\n            if (base === 'le' || base === 'be') {\n                endian = base;\n                base = 10;\n            }\n\n            this._init(number || 0, base || 10, endian || 'be');\n        }\n    }\n    if (typeof module === 'object') {\n        module.exports = BN;\n    } else {\n        exports.BN = BN;\n    }\n\n    BN.BN = BN;\n    BN.wordSize = 26;\n\n    var Buffer;\n    try {\n        Buffer = require('buffer').Buffer;\n    } catch (e) {\n    }\n\n    BN.isBN = function isBN (num) {\n        if (num instanceof BN) {\n            return true;\n        }\n\n        return num !== null && typeof num === 'object' &&\n            num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n    };\n\n    BN.max = function max (left, right) {\n        if (left.cmp(right) > 0) return left;\n        return right;\n    };\n\n    BN.min = function min (left, right) {\n        if (left.cmp(right) < 0) return left;\n        return right;\n    };\n\n    BN.prototype._init = function init (number, base, endian) {\n        if (typeof number === 'number') {\n            return this._initNumber(number, base, endian);\n        }\n\n        if (typeof number === 'object') {\n            return this._initArray(number, base, endian);\n        }\n\n        if (base === 'hex') {\n            base = 16;\n        }\n        assert(base === (base | 0) && base >= 2 && base <= 36);\n\n        number = number.toString().replace(/\\s+/g, '');\n        var start = 0;\n        if (number[0] === '-') {\n            start++;\n        }\n\n        if (base === 16) {\n            this._parseHex(number, start);\n        } else {\n            this._parseBase(number, base, start);\n        }\n\n        if (number[0] === '-') {\n            this.negative = 1;\n        }\n\n        this._strip();\n\n        if (endian !== 'le') return;\n\n        this._initArray(this.toArray(), base, endian);\n    };\n\n    BN.prototype._initNumber = function _initNumber (number, base, endian) {\n        if (number < 0) {\n            this.negative = 1;\n            number = -number;\n        }\n        if (number < 0x4000000) {\n            this.words = [number & 0x3ffffff];\n            this.length = 1;\n        } else if (number < 0x10000000000000) {\n            this.words = [\n                number & 0x3ffffff,\n                (number / 0x4000000) & 0x3ffffff\n            ];\n            this.length = 2;\n        } else {\n            assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n            this.words = [\n                number & 0x3ffffff,\n                (number / 0x4000000) & 0x3ffffff,\n                1\n            ];\n            this.length = 3;\n        }\n\n        if (endian !== 'le') return;\n\n        // Reverse the bytes\n        this._initArray(this.toArray(), base, endian);\n    };\n\n    BN.prototype._initArray = function _initArray (number, base, endian) {\n        // Perhaps a Uint8Array\n        assert(typeof number.length === 'number');\n        if (number.length <= 0) {\n            this.words = [0];\n            this.length = 1;\n            return this;\n        }\n\n        this.length = Math.ceil(number.length / 3);\n        this.words = new Array(this.length);\n        for (var i = 0; i < this.length; i++) {\n            this.words[i] = 0;\n        }\n\n        var j, w;\n        var off = 0;\n        if (endian === 'be') {\n            for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n                w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n                this.words[j] |= (w << off) & 0x3ffffff;\n                this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n                off += 24;\n                if (off >= 26) {\n                    off -= 26;\n                    j++;\n                }\n            }\n        } else if (endian === 'le') {\n            for (i = 0, j = 0; i < number.length; i += 3) {\n                w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n                this.words[j] |= (w << off) & 0x3ffffff;\n                this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n                off += 24;\n                if (off >= 26) {\n                    off -= 26;\n                    j++;\n                }\n            }\n        }\n        return this._strip();\n    };\n\n    function parseHex (str, start, end) {\n        var r = 0;\n        var len = Math.min(str.length, end);\n        var z = 0;\n        for (var i = start; i < len; i++) {\n            var c = str.charCodeAt(i) - 48;\n\n            r <<= 4;\n\n            var b;\n\n            // 'a' - 'f'\n            if (c >= 49 && c <= 54) {\n                b = c - 49 + 0xa;\n\n                // 'A' - 'F'\n            } else if (c >= 17 && c <= 22) {\n                b = c - 17 + 0xa;\n\n                // '0' - '9'\n            } else {\n                b = c;\n            }\n\n            r |= b;\n            z |= b;\n        }\n\n        assert(!(z & 0xf0), 'Invalid character in ' + str);\n        return r;\n    }\n\n    BN.prototype._parseHex = function _parseHex (number, start) {\n        // Create possibly bigger array to ensure that it fits the number\n        this.length = Math.ceil((number.length - start) / 6);\n        this.words = new Array(this.length);\n        for (var i = 0; i < this.length; i++) {\n            this.words[i] = 0;\n        }\n\n        var j, w;\n        // Scan 24-bit chunks and add them to the number\n        var off = 0;\n        for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n            w = parseHex(number, i, i + 6);\n            this.words[j] |= (w << off) & 0x3ffffff;\n            // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n            this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n            off += 24;\n            if (off >= 26) {\n                off -= 26;\n                j++;\n            }\n        }\n        if (i + 6 !== start) {\n            w = parseHex(number, start, i + 6);\n            this.words[j] |= (w << off) & 0x3ffffff;\n            this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n        }\n        this._strip();\n    };\n\n    function parseBase (str, start, end, mul) {\n        var r = 0;\n        var b = 0;\n        var len = Math.min(str.length, end);\n        for (var i = start; i < len; i++) {\n            var c = str.charCodeAt(i) - 48;\n\n            r *= mul;\n\n            // 'a'\n            if (c >= 49) {\n                b = c - 49 + 0xa;\n\n                // 'A'\n            } else if (c >= 17) {\n                b = c - 17 + 0xa;\n\n                // '0' - '9'\n            } else {\n                b = c;\n            }\n            assert(c >= 0 && b < mul, 'Invalid character');\n            r += b;\n        }\n        return r;\n    }\n\n    BN.prototype._parseBase = function _parseBase (number, base, start) {\n        // Initialize as zero\n        this.words = [0];\n        this.length = 1;\n\n        // Find length of limb in base\n        for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n            limbLen++;\n        }\n        limbLen--;\n        limbPow = (limbPow / base) | 0;\n\n        var total = number.length - start;\n        var mod = total % limbLen;\n        var end = Math.min(total, total - mod) + start;\n\n        var word = 0;\n        for (var i = start; i < end; i += limbLen) {\n            word = parseBase(number, i, i + limbLen, base);\n\n            this.imuln(limbPow);\n            if (this.words[0] + word < 0x4000000) {\n                this.words[0] += word;\n            } else {\n                this._iaddn(word);\n            }\n        }\n\n        if (mod !== 0) {\n            var pow = 1;\n            word = parseBase(number, i, number.length, base);\n\n            for (i = 0; i < mod; i++) {\n                pow *= base;\n            }\n\n            this.imuln(pow);\n            if (this.words[0] + word < 0x4000000) {\n                this.words[0] += word;\n            } else {\n                this._iaddn(word);\n            }\n        }\n    };\n\n    BN.prototype.copy = function copy (dest) {\n        dest.words = new Array(this.length);\n        for (var i = 0; i < this.length; i++) {\n            dest.words[i] = this.words[i];\n        }\n        dest.length = this.length;\n        dest.negative = this.negative;\n        dest.red = this.red;\n    };\n\n    BN.prototype._move = function _move (dest) {\n        dest.words = this.words;\n        dest.length = this.length;\n        dest.negative = this.negative;\n        dest.red = this.red;\n    };\n\n    BN.prototype.clone = function clone () {\n        var r = new BN(null);\n        this.copy(r);\n        return r;\n    };\n\n    BN.prototype._expand = function _expand (size) {\n        while (this.length < size) {\n            this.words[this.length++] = 0;\n        }\n        return this;\n    };\n\n    // Remove leading `0` from `this`\n    BN.prototype._strip = function strip () {\n        while (this.length > 1 && this.words[this.length - 1] === 0) {\n            this.length--;\n        }\n        return this._normSign();\n    };\n\n    BN.prototype._normSign = function _normSign () {\n        // -0 = 0\n        if (this.length === 1 && this.words[0] === 0) {\n            this.negative = 0;\n        }\n        return this;\n    };\n\n    // Check Symbol.for because not everywhere where Symbol defined\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n    if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n        BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } else {\n        BN.prototype.inspect = inspect;\n    }\n\n    function inspect () {\n        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n    }\n\n    /*\n\n    var zeros = [];\n    var groupSizes = [];\n    var groupBases = [];\n\n    var s = '';\n    var i = -1;\n    while (++i < BN.wordSize) {\n      zeros[i] = s;\n      s += '0';\n    }\n    groupSizes[0] = 0;\n    groupSizes[1] = 0;\n    groupBases[0] = 0;\n    groupBases[1] = 0;\n    var base = 2 - 1;\n    while (++base < 36 + 1) {\n      var groupSize = 0;\n      var groupBase = 1;\n      while (groupBase < (1 << BN.wordSize) / base) {\n        groupBase *= base;\n        groupSize += 1;\n      }\n      groupSizes[base] = groupSize;\n      groupBases[base] = groupBase;\n    }\n\n    */\n\n    var zeros = [\n        '',\n        '0',\n        '00',\n        '000',\n        '0000',\n        '00000',\n        '000000',\n        '0000000',\n        '00000000',\n        '000000000',\n        '0000000000',\n        '00000000000',\n        '000000000000',\n        '0000000000000',\n        '00000000000000',\n        '000000000000000',\n        '0000000000000000',\n        '00000000000000000',\n        '000000000000000000',\n        '0000000000000000000',\n        '00000000000000000000',\n        '000000000000000000000',\n        '0000000000000000000000',\n        '00000000000000000000000',\n        '000000000000000000000000',\n        '0000000000000000000000000'\n    ];\n\n    var groupSizes = [\n        0, 0,\n        25, 16, 12, 11, 10, 9, 8,\n        8, 7, 7, 7, 7, 6, 6,\n        6, 6, 6, 6, 6, 5, 5,\n        5, 5, 5, 5, 5, 5, 5,\n        5, 5, 5, 5, 5, 5, 5\n    ];\n\n    var groupBases = [\n        0, 0,\n        33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n        43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n        16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n        6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n        24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n    ];\n\n    BN.prototype.toString = function toString (base, padding) {\n        base = base || 10;\n        padding = padding | 0 || 1;\n\n        var out;\n        if (base === 16 || base === 'hex') {\n            out = '';\n            var off = 0;\n            var carry = 0;\n            for (var i = 0; i < this.length; i++) {\n                var w = this.words[i];\n                var word = (((w << off) | carry) & 0xffffff).toString(16);\n                carry = (w >>> (24 - off)) & 0xffffff;\n                if (carry !== 0 || i !== this.length - 1) {\n                    out = zeros[6 - word.length] + word + out;\n                } else {\n                    out = word + out;\n                }\n                off += 2;\n                if (off >= 26) {\n                    off -= 26;\n                    i--;\n                }\n            }\n            if (carry !== 0) {\n                out = carry.toString(16) + out;\n            }\n            while (out.length % padding !== 0) {\n                out = '0' + out;\n            }\n            if (this.negative !== 0) {\n                out = '-' + out;\n            }\n            return out;\n        }\n\n        if (base === (base | 0) && base >= 2 && base <= 36) {\n            // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n            var groupSize = groupSizes[base];\n            // var groupBase = Math.pow(base, groupSize);\n            var groupBase = groupBases[base];\n            out = '';\n            var c = this.clone();\n            c.negative = 0;\n            while (!c.isZero()) {\n                var r = c.modrn(groupBase).toString(base);\n                c = c.idivn(groupBase);\n\n                if (!c.isZero()) {\n                    out = zeros[groupSize - r.length] + r + out;\n                } else {\n                    out = r + out;\n                }\n            }\n            if (this.isZero()) {\n                out = '0' + out;\n            }\n            while (out.length % padding !== 0) {\n                out = '0' + out;\n            }\n            if (this.negative !== 0) {\n                out = '-' + out;\n            }\n            return out;\n        }\n\n        assert(false, 'Base should be between 2 and 36');\n    };\n\n    BN.prototype.toNumber = function toNumber () {\n        var ret = this.words[0];\n        if (this.length === 2) {\n            ret += this.words[1] * 0x4000000;\n        } else if (this.length === 3 && this.words[2] === 0x01) {\n            // NOTE: at this stage it is known that the top bit is set\n            ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n        } else if (this.length > 2) {\n            assert(false, 'Number can only safely store up to 53 bits');\n        }\n        return (this.negative !== 0) ? -ret : ret;\n    };\n\n    BN.prototype.toJSON = function toJSON () {\n        return this.toString(16, 2);\n    };\n\n    if (Buffer) {\n        BN.prototype.toBuffer = function toBuffer (endian, length) {\n            return this.toArrayLike(Buffer, endian, length);\n        };\n    }\n\n    BN.prototype.toArray = function toArray (endian, length) {\n        return this.toArrayLike(Array, endian, length);\n    };\n\n    var allocate = function allocate (ArrayType, size) {\n        if (ArrayType.allocUnsafe) {\n            return ArrayType.allocUnsafe(size);\n        }\n        return new ArrayType(size);\n    };\n\n    BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n        this._strip();\n\n        var byteLength = this.byteLength();\n        var reqLength = length || Math.max(1, byteLength);\n        assert(byteLength <= reqLength, 'byte array longer than desired length');\n        assert(reqLength > 0, 'Requested array length <= 0');\n\n        var res = allocate(ArrayType, reqLength);\n        var postfix = endian === 'le' ? 'LE' : 'BE';\n        this['_toArrayLike' + postfix](res, byteLength);\n        return res;\n    };\n\n    BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n        var position = 0;\n        var carry = 0;\n\n        for (var i = 0, shift = 0; i < this.length; i++) {\n            var word = (this.words[i] << shift) | carry;\n\n            res[position++] = word & 0xff;\n            if (position < res.length) {\n                res[position++] = (word >> 8) & 0xff;\n            }\n            if (position < res.length) {\n                res[position++] = (word >> 16) & 0xff;\n            }\n\n            if (shift === 6) {\n                if (position < res.length) {\n                    res[position++] = (word >> 24) & 0xff;\n                }\n                carry = 0;\n                shift = 0;\n            } else {\n                carry = word >>> 24;\n                shift += 2;\n            }\n        }\n\n        if (position < res.length) {\n            res[position++] = carry;\n\n            while (position < res.length) {\n                res[position++] = 0;\n            }\n        }\n    };\n\n    BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n        var position = res.length - 1;\n        var carry = 0;\n\n        for (var i = 0, shift = 0; i < this.length; i++) {\n            var word = (this.words[i] << shift) | carry;\n\n            res[position--] = word & 0xff;\n            if (position >= 0) {\n                res[position--] = (word >> 8) & 0xff;\n            }\n            if (position >= 0) {\n                res[position--] = (word >> 16) & 0xff;\n            }\n\n            if (shift === 6) {\n                if (position >= 0) {\n                    res[position--] = (word >> 24) & 0xff;\n                }\n                carry = 0;\n                shift = 0;\n            } else {\n                carry = word >>> 24;\n                shift += 2;\n            }\n        }\n\n        if (position >= 0) {\n            res[position--] = carry;\n\n            while (position >= 0) {\n                res[position--] = 0;\n            }\n        }\n    };\n\n    if (Math.clz32) {\n        BN.prototype._countBits = function _countBits (w) {\n            return 32 - Math.clz32(w);\n        };\n    } else {\n        BN.prototype._countBits = function _countBits (w) {\n            var t = w;\n            var r = 0;\n            if (t >= 0x1000) {\n                r += 13;\n                t >>>= 13;\n            }\n            if (t >= 0x40) {\n                r += 7;\n                t >>>= 7;\n            }\n            if (t >= 0x8) {\n                r += 4;\n                t >>>= 4;\n            }\n            if (t >= 0x02) {\n                r += 2;\n                t >>>= 2;\n            }\n            return r + t;\n        };\n    }\n\n    BN.prototype._zeroBits = function _zeroBits (w) {\n        // Short-cut\n        if (w === 0) return 26;\n\n        var t = w;\n        var r = 0;\n        if ((t & 0x1fff) === 0) {\n            r += 13;\n            t >>>= 13;\n        }\n        if ((t & 0x7f) === 0) {\n            r += 7;\n            t >>>= 7;\n        }\n        if ((t & 0xf) === 0) {\n            r += 4;\n            t >>>= 4;\n        }\n        if ((t & 0x3) === 0) {\n            r += 2;\n            t >>>= 2;\n        }\n        if ((t & 0x1) === 0) {\n            r++;\n        }\n        return r;\n    };\n\n    // Return number of used bits in a BN\n    BN.prototype.bitLength = function bitLength () {\n        var w = this.words[this.length - 1];\n        var hi = this._countBits(w);\n        return (this.length - 1) * 26 + hi;\n    };\n\n    function toBitArray (num) {\n        var w = new Array(num.bitLength());\n\n        for (var bit = 0; bit < w.length; bit++) {\n            var off = (bit / 26) | 0;\n            var wbit = bit % 26;\n\n            w[bit] = (num.words[off] >>> wbit) & 0x01;\n        }\n\n        return w;\n    }\n\n    // Number of trailing zero bits\n    BN.prototype.zeroBits = function zeroBits () {\n        if (this.isZero()) return 0;\n\n        var r = 0;\n        for (var i = 0; i < this.length; i++) {\n            var b = this._zeroBits(this.words[i]);\n            r += b;\n            if (b !== 26) break;\n        }\n        return r;\n    };\n\n    BN.prototype.byteLength = function byteLength () {\n        return Math.ceil(this.bitLength() / 8);\n    };\n\n    BN.prototype.toTwos = function toTwos (width) {\n        if (this.negative !== 0) {\n            return this.abs().inotn(width).iaddn(1);\n        }\n        return this.clone();\n    };\n\n    BN.prototype.fromTwos = function fromTwos (width) {\n        if (this.testn(width - 1)) {\n            return this.notn(width).iaddn(1).ineg();\n        }\n        return this.clone();\n    };\n\n    BN.prototype.isNeg = function isNeg () {\n        return this.negative !== 0;\n    };\n\n    // Return negative clone of `this`\n    BN.prototype.neg = function neg () {\n        return this.clone().ineg();\n    };\n\n    BN.prototype.ineg = function ineg () {\n        if (!this.isZero()) {\n            this.negative ^= 1;\n        }\n\n        return this;\n    };\n\n    // Or `num` with `this` in-place\n    BN.prototype.iuor = function iuor (num) {\n        while (this.length < num.length) {\n            this.words[this.length++] = 0;\n        }\n\n        for (var i = 0; i < num.length; i++) {\n            this.words[i] = this.words[i] | num.words[i];\n        }\n\n        return this._strip();\n    };\n\n    BN.prototype.ior = function ior (num) {\n        assert((this.negative | num.negative) === 0);\n        return this.iuor(num);\n    };\n\n    // Or `num` with `this`\n    BN.prototype.or = function or (num) {\n        if (this.length > num.length) return this.clone().ior(num);\n        return num.clone().ior(this);\n    };\n\n    BN.prototype.uor = function uor (num) {\n        if (this.length > num.length) return this.clone().iuor(num);\n        return num.clone().iuor(this);\n    };\n\n    // And `num` with `this` in-place\n    BN.prototype.iuand = function iuand (num) {\n        // b = min-length(num, this)\n        var b;\n        if (this.length > num.length) {\n            b = num;\n        } else {\n            b = this;\n        }\n\n        for (var i = 0; i < b.length; i++) {\n            this.words[i] = this.words[i] & num.words[i];\n        }\n\n        this.length = b.length;\n\n        return this._strip();\n    };\n\n    BN.prototype.iand = function iand (num) {\n        assert((this.negative | num.negative) === 0);\n        return this.iuand(num);\n    };\n\n    // And `num` with `this`\n    BN.prototype.and = function and (num) {\n        if (this.length > num.length) return this.clone().iand(num);\n        return num.clone().iand(this);\n    };\n\n    BN.prototype.uand = function uand (num) {\n        if (this.length > num.length) return this.clone().iuand(num);\n        return num.clone().iuand(this);\n    };\n\n    // Xor `num` with `this` in-place\n    BN.prototype.iuxor = function iuxor (num) {\n        // a.length > b.length\n        var a;\n        var b;\n        if (this.length > num.length) {\n            a = this;\n            b = num;\n        } else {\n            a = num;\n            b = this;\n        }\n\n        for (var i = 0; i < b.length; i++) {\n            this.words[i] = a.words[i] ^ b.words[i];\n        }\n\n        if (this !== a) {\n            for (; i < a.length; i++) {\n                this.words[i] = a.words[i];\n            }\n        }\n\n        this.length = a.length;\n\n        return this._strip();\n    };\n\n    BN.prototype.ixor = function ixor (num) {\n        assert((this.negative | num.negative) === 0);\n        return this.iuxor(num);\n    };\n\n    // Xor `num` with `this`\n    BN.prototype.xor = function xor (num) {\n        if (this.length > num.length) return this.clone().ixor(num);\n        return num.clone().ixor(this);\n    };\n\n    BN.prototype.uxor = function uxor (num) {\n        if (this.length > num.length) return this.clone().iuxor(num);\n        return num.clone().iuxor(this);\n    };\n\n    // Not ``this`` with ``width`` bitwidth\n    BN.prototype.inotn = function inotn (width) {\n        assert(typeof width === 'number' && width >= 0);\n\n        var bytesNeeded = Math.ceil(width / 26) | 0;\n        var bitsLeft = width % 26;\n\n        // Extend the buffer with leading zeroes\n        this._expand(bytesNeeded);\n\n        if (bitsLeft > 0) {\n            bytesNeeded--;\n        }\n\n        // Handle complete words\n        for (var i = 0; i < bytesNeeded; i++) {\n            this.words[i] = ~this.words[i] & 0x3ffffff;\n        }\n\n        // Handle the residue\n        if (bitsLeft > 0) {\n            this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n        }\n\n        // And remove leading zeroes\n        return this._strip();\n    };\n\n    BN.prototype.notn = function notn (width) {\n        return this.clone().inotn(width);\n    };\n\n    // Set `bit` of `this`\n    BN.prototype.setn = function setn (bit, val) {\n        assert(typeof bit === 'number' && bit >= 0);\n\n        var off = (bit / 26) | 0;\n        var wbit = bit % 26;\n\n        this._expand(off + 1);\n\n        if (val) {\n            this.words[off] = this.words[off] | (1 << wbit);\n        } else {\n            this.words[off] = this.words[off] & ~(1 << wbit);\n        }\n\n        return this._strip();\n    };\n\n    // Add `num` to `this` in-place\n    BN.prototype.iadd = function iadd (num) {\n        var r;\n\n        // negative + positive\n        if (this.negative !== 0 && num.negative === 0) {\n            this.negative = 0;\n            r = this.isub(num);\n            this.negative ^= 1;\n            return this._normSign();\n\n            // positive + negative\n        } else if (this.negative === 0 && num.negative !== 0) {\n            num.negative = 0;\n            r = this.isub(num);\n            num.negative = 1;\n            return r._normSign();\n        }\n\n        // a.length > b.length\n        var a, b;\n        if (this.length > num.length) {\n            a = this;\n            b = num;\n        } else {\n            a = num;\n            b = this;\n        }\n\n        var carry = 0;\n        for (var i = 0; i < b.length; i++) {\n            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n            this.words[i] = r & 0x3ffffff;\n            carry = r >>> 26;\n        }\n        for (; carry !== 0 && i < a.length; i++) {\n            r = (a.words[i] | 0) + carry;\n            this.words[i] = r & 0x3ffffff;\n            carry = r >>> 26;\n        }\n\n        this.length = a.length;\n        if (carry !== 0) {\n            this.words[this.length] = carry;\n            this.length++;\n            // Copy the rest of the words\n        } else if (a !== this) {\n            for (; i < a.length; i++) {\n                this.words[i] = a.words[i];\n            }\n        }\n\n        return this;\n    };\n\n    // Add `num` to `this`\n    BN.prototype.add = function add (num) {\n        var res;\n        if (num.negative !== 0 && this.negative === 0) {\n            num.negative = 0;\n            res = this.sub(num);\n            num.negative ^= 1;\n            return res;\n        } else if (num.negative === 0 && this.negative !== 0) {\n            this.negative = 0;\n            res = num.sub(this);\n            this.negative = 1;\n            return res;\n        }\n\n        if (this.length > num.length) return this.clone().iadd(num);\n\n        return num.clone().iadd(this);\n    };\n\n    // Subtract `num` from `this` in-place\n    BN.prototype.isub = function isub (num) {\n        // this - (-num) = this + num\n        if (num.negative !== 0) {\n            num.negative = 0;\n            var r = this.iadd(num);\n            num.negative = 1;\n            return r._normSign();\n\n            // -this - num = -(this + num)\n        } else if (this.negative !== 0) {\n            this.negative = 0;\n            this.iadd(num);\n            this.negative = 1;\n            return this._normSign();\n        }\n\n        // At this point both numbers are positive\n        var cmp = this.cmp(num);\n\n        // Optimization - zeroify\n        if (cmp === 0) {\n            this.negative = 0;\n            this.length = 1;\n            this.words[0] = 0;\n            return this;\n        }\n\n        // a > b\n        var a, b;\n        if (cmp > 0) {\n            a = this;\n            b = num;\n        } else {\n            a = num;\n            b = this;\n        }\n\n        var carry = 0;\n        for (var i = 0; i < b.length; i++) {\n            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n            carry = r >> 26;\n            this.words[i] = r & 0x3ffffff;\n        }\n        for (; carry !== 0 && i < a.length; i++) {\n            r = (a.words[i] | 0) + carry;\n            carry = r >> 26;\n            this.words[i] = r & 0x3ffffff;\n        }\n\n        // Copy rest of the words\n        if (carry === 0 && i < a.length && a !== this) {\n            for (; i < a.length; i++) {\n                this.words[i] = a.words[i];\n            }\n        }\n\n        this.length = Math.max(this.length, i);\n\n        if (a !== this) {\n            this.negative = 1;\n        }\n\n        return this._strip();\n    };\n\n    // Subtract `num` from `this`\n    BN.prototype.sub = function sub (num) {\n        return this.clone().isub(num);\n    };\n\n    function smallMulTo (self, num, out) {\n        out.negative = num.negative ^ self.negative;\n        var len = (self.length + num.length) | 0;\n        out.length = len;\n        len = (len - 1) | 0;\n\n        // Peel one iteration (compiler can't do it, because of code complexity)\n        var a = self.words[0] | 0;\n        var b = num.words[0] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        var carry = (r / 0x4000000) | 0;\n        out.words[0] = lo;\n\n        for (var k = 1; k < len; k++) {\n            // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n            // note that ncarry could be >= 0x3ffffff\n            var ncarry = carry >>> 26;\n            var rword = carry & 0x3ffffff;\n            var maxJ = Math.min(k, num.length - 1);\n            for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n                var i = (k - j) | 0;\n                a = self.words[i] | 0;\n                b = num.words[j] | 0;\n                r = a * b + rword;\n                ncarry += (r / 0x4000000) | 0;\n                rword = r & 0x3ffffff;\n            }\n            out.words[k] = rword | 0;\n            carry = ncarry | 0;\n        }\n        if (carry !== 0) {\n            out.words[k] = carry | 0;\n        } else {\n            out.length--;\n        }\n\n        return out._strip();\n    }\n\n    // TODO(indutny): it may be reasonable to omit it for users who don't need\n    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n    // multiplication (like elliptic secp256k1).\n    var comb10MulTo = function comb10MulTo (self, num, out) {\n        var a = self.words;\n        var b = num.words;\n        var o = out.words;\n        var c = 0;\n        var lo;\n        var mid;\n        var hi;\n        var a0 = a[0] | 0;\n        var al0 = a0 & 0x1fff;\n        var ah0 = a0 >>> 13;\n        var a1 = a[1] | 0;\n        var al1 = a1 & 0x1fff;\n        var ah1 = a1 >>> 13;\n        var a2 = a[2] | 0;\n        var al2 = a2 & 0x1fff;\n        var ah2 = a2 >>> 13;\n        var a3 = a[3] | 0;\n        var al3 = a3 & 0x1fff;\n        var ah3 = a3 >>> 13;\n        var a4 = a[4] | 0;\n        var al4 = a4 & 0x1fff;\n        var ah4 = a4 >>> 13;\n        var a5 = a[5] | 0;\n        var al5 = a5 & 0x1fff;\n        var ah5 = a5 >>> 13;\n        var a6 = a[6] | 0;\n        var al6 = a6 & 0x1fff;\n        var ah6 = a6 >>> 13;\n        var a7 = a[7] | 0;\n        var al7 = a7 & 0x1fff;\n        var ah7 = a7 >>> 13;\n        var a8 = a[8] | 0;\n        var al8 = a8 & 0x1fff;\n        var ah8 = a8 >>> 13;\n        var a9 = a[9] | 0;\n        var al9 = a9 & 0x1fff;\n        var ah9 = a9 >>> 13;\n        var b0 = b[0] | 0;\n        var bl0 = b0 & 0x1fff;\n        var bh0 = b0 >>> 13;\n        var b1 = b[1] | 0;\n        var bl1 = b1 & 0x1fff;\n        var bh1 = b1 >>> 13;\n        var b2 = b[2] | 0;\n        var bl2 = b2 & 0x1fff;\n        var bh2 = b2 >>> 13;\n        var b3 = b[3] | 0;\n        var bl3 = b3 & 0x1fff;\n        var bh3 = b3 >>> 13;\n        var b4 = b[4] | 0;\n        var bl4 = b4 & 0x1fff;\n        var bh4 = b4 >>> 13;\n        var b5 = b[5] | 0;\n        var bl5 = b5 & 0x1fff;\n        var bh5 = b5 >>> 13;\n        var b6 = b[6] | 0;\n        var bl6 = b6 & 0x1fff;\n        var bh6 = b6 >>> 13;\n        var b7 = b[7] | 0;\n        var bl7 = b7 & 0x1fff;\n        var bh7 = b7 >>> 13;\n        var b8 = b[8] | 0;\n        var bl8 = b8 & 0x1fff;\n        var bh8 = b8 >>> 13;\n        var b9 = b[9] | 0;\n        var bl9 = b9 & 0x1fff;\n        var bh9 = b9 >>> 13;\n\n        out.negative = self.negative ^ num.negative;\n        out.length = 19;\n        /* k = 0 */\n        lo = Math.imul(al0, bl0);\n        mid = Math.imul(al0, bh0);\n        mid = (mid + Math.imul(ah0, bl0)) | 0;\n        hi = Math.imul(ah0, bh0);\n        var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n        w0 &= 0x3ffffff;\n        /* k = 1 */\n        lo = Math.imul(al1, bl0);\n        mid = Math.imul(al1, bh0);\n        mid = (mid + Math.imul(ah1, bl0)) | 0;\n        hi = Math.imul(ah1, bh0);\n        lo = (lo + Math.imul(al0, bl1)) | 0;\n        mid = (mid + Math.imul(al0, bh1)) | 0;\n        mid = (mid + Math.imul(ah0, bl1)) | 0;\n        hi = (hi + Math.imul(ah0, bh1)) | 0;\n        var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n        w1 &= 0x3ffffff;\n        /* k = 2 */\n        lo = Math.imul(al2, bl0);\n        mid = Math.imul(al2, bh0);\n        mid = (mid + Math.imul(ah2, bl0)) | 0;\n        hi = Math.imul(ah2, bh0);\n        lo = (lo + Math.imul(al1, bl1)) | 0;\n        mid = (mid + Math.imul(al1, bh1)) | 0;\n        mid = (mid + Math.imul(ah1, bl1)) | 0;\n        hi = (hi + Math.imul(ah1, bh1)) | 0;\n        lo = (lo + Math.imul(al0, bl2)) | 0;\n        mid = (mid + Math.imul(al0, bh2)) | 0;\n        mid = (mid + Math.imul(ah0, bl2)) | 0;\n        hi = (hi + Math.imul(ah0, bh2)) | 0;\n        var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n        w2 &= 0x3ffffff;\n        /* k = 3 */\n        lo = Math.imul(al3, bl0);\n        mid = Math.imul(al3, bh0);\n        mid = (mid + Math.imul(ah3, bl0)) | 0;\n        hi = Math.imul(ah3, bh0);\n        lo = (lo + Math.imul(al2, bl1)) | 0;\n        mid = (mid + Math.imul(al2, bh1)) | 0;\n        mid = (mid + Math.imul(ah2, bl1)) | 0;\n        hi = (hi + Math.imul(ah2, bh1)) | 0;\n        lo = (lo + Math.imul(al1, bl2)) | 0;\n        mid = (mid + Math.imul(al1, bh2)) | 0;\n        mid = (mid + Math.imul(ah1, bl2)) | 0;\n        hi = (hi + Math.imul(ah1, bh2)) | 0;\n        lo = (lo + Math.imul(al0, bl3)) | 0;\n        mid = (mid + Math.imul(al0, bh3)) | 0;\n        mid = (mid + Math.imul(ah0, bl3)) | 0;\n        hi = (hi + Math.imul(ah0, bh3)) | 0;\n        var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n        w3 &= 0x3ffffff;\n        /* k = 4 */\n        lo = Math.imul(al4, bl0);\n        mid = Math.imul(al4, bh0);\n        mid = (mid + Math.imul(ah4, bl0)) | 0;\n        hi = Math.imul(ah4, bh0);\n        lo = (lo + Math.imul(al3, bl1)) | 0;\n        mid = (mid + Math.imul(al3, bh1)) | 0;\n        mid = (mid + Math.imul(ah3, bl1)) | 0;\n        hi = (hi + Math.imul(ah3, bh1)) | 0;\n        lo = (lo + Math.imul(al2, bl2)) | 0;\n        mid = (mid + Math.imul(al2, bh2)) | 0;\n        mid = (mid + Math.imul(ah2, bl2)) | 0;\n        hi = (hi + Math.imul(ah2, bh2)) | 0;\n        lo = (lo + Math.imul(al1, bl3)) | 0;\n        mid = (mid + Math.imul(al1, bh3)) | 0;\n        mid = (mid + Math.imul(ah1, bl3)) | 0;\n        hi = (hi + Math.imul(ah1, bh3)) | 0;\n        lo = (lo + Math.imul(al0, bl4)) | 0;\n        mid = (mid + Math.imul(al0, bh4)) | 0;\n        mid = (mid + Math.imul(ah0, bl4)) | 0;\n        hi = (hi + Math.imul(ah0, bh4)) | 0;\n        var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n        w4 &= 0x3ffffff;\n        /* k = 5 */\n        lo = Math.imul(al5, bl0);\n        mid = Math.imul(al5, bh0);\n        mid = (mid + Math.imul(ah5, bl0)) | 0;\n        hi = Math.imul(ah5, bh0);\n        lo = (lo + Math.imul(al4, bl1)) | 0;\n        mid = (mid + Math.imul(al4, bh1)) | 0;\n        mid = (mid + Math.imul(ah4, bl1)) | 0;\n        hi = (hi + Math.imul(ah4, bh1)) | 0;\n        lo = (lo + Math.imul(al3, bl2)) | 0;\n        mid = (mid + Math.imul(al3, bh2)) | 0;\n        mid = (mid + Math.imul(ah3, bl2)) | 0;\n        hi = (hi + Math.imul(ah3, bh2)) | 0;\n        lo = (lo + Math.imul(al2, bl3)) | 0;\n        mid = (mid + Math.imul(al2, bh3)) | 0;\n        mid = (mid + Math.imul(ah2, bl3)) | 0;\n        hi = (hi + Math.imul(ah2, bh3)) | 0;\n        lo = (lo + Math.imul(al1, bl4)) | 0;\n        mid = (mid + Math.imul(al1, bh4)) | 0;\n        mid = (mid + Math.imul(ah1, bl4)) | 0;\n        hi = (hi + Math.imul(ah1, bh4)) | 0;\n        lo = (lo + Math.imul(al0, bl5)) | 0;\n        mid = (mid + Math.imul(al0, bh5)) | 0;\n        mid = (mid + Math.imul(ah0, bl5)) | 0;\n        hi = (hi + Math.imul(ah0, bh5)) | 0;\n        var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n        w5 &= 0x3ffffff;\n        /* k = 6 */\n        lo = Math.imul(al6, bl0);\n        mid = Math.imul(al6, bh0);\n        mid = (mid + Math.imul(ah6, bl0)) | 0;\n        hi = Math.imul(ah6, bh0);\n        lo = (lo + Math.imul(al5, bl1)) | 0;\n        mid = (mid + Math.imul(al5, bh1)) | 0;\n        mid = (mid + Math.imul(ah5, bl1)) | 0;\n        hi = (hi + Math.imul(ah5, bh1)) | 0;\n        lo = (lo + Math.imul(al4, bl2)) | 0;\n        mid = (mid + Math.imul(al4, bh2)) | 0;\n        mid = (mid + Math.imul(ah4, bl2)) | 0;\n        hi = (hi + Math.imul(ah4, bh2)) | 0;\n        lo = (lo + Math.imul(al3, bl3)) | 0;\n        mid = (mid + Math.imul(al3, bh3)) | 0;\n        mid = (mid + Math.imul(ah3, bl3)) | 0;\n        hi = (hi + Math.imul(ah3, bh3)) | 0;\n        lo = (lo + Math.imul(al2, bl4)) | 0;\n        mid = (mid + Math.imul(al2, bh4)) | 0;\n        mid = (mid + Math.imul(ah2, bl4)) | 0;\n        hi = (hi + Math.imul(ah2, bh4)) | 0;\n        lo = (lo + Math.imul(al1, bl5)) | 0;\n        mid = (mid + Math.imul(al1, bh5)) | 0;\n        mid = (mid + Math.imul(ah1, bl5)) | 0;\n        hi = (hi + Math.imul(ah1, bh5)) | 0;\n        lo = (lo + Math.imul(al0, bl6)) | 0;\n        mid = (mid + Math.imul(al0, bh6)) | 0;\n        mid = (mid + Math.imul(ah0, bl6)) | 0;\n        hi = (hi + Math.imul(ah0, bh6)) | 0;\n        var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n        w6 &= 0x3ffffff;\n        /* k = 7 */\n        lo = Math.imul(al7, bl0);\n        mid = Math.imul(al7, bh0);\n        mid = (mid + Math.imul(ah7, bl0)) | 0;\n        hi = Math.imul(ah7, bh0);\n        lo = (lo + Math.imul(al6, bl1)) | 0;\n        mid = (mid + Math.imul(al6, bh1)) | 0;\n        mid = (mid + Math.imul(ah6, bl1)) | 0;\n        hi = (hi + Math.imul(ah6, bh1)) | 0;\n        lo = (lo + Math.imul(al5, bl2)) | 0;\n        mid = (mid + Math.imul(al5, bh2)) | 0;\n        mid = (mid + Math.imul(ah5, bl2)) | 0;\n        hi = (hi + Math.imul(ah5, bh2)) | 0;\n        lo = (lo + Math.imul(al4, bl3)) | 0;\n        mid = (mid + Math.imul(al4, bh3)) | 0;\n        mid = (mid + Math.imul(ah4, bl3)) | 0;\n        hi = (hi + Math.imul(ah4, bh3)) | 0;\n        lo = (lo + Math.imul(al3, bl4)) | 0;\n        mid = (mid + Math.imul(al3, bh4)) | 0;\n        mid = (mid + Math.imul(ah3, bl4)) | 0;\n        hi = (hi + Math.imul(ah3, bh4)) | 0;\n        lo = (lo + Math.imul(al2, bl5)) | 0;\n        mid = (mid + Math.imul(al2, bh5)) | 0;\n        mid = (mid + Math.imul(ah2, bl5)) | 0;\n        hi = (hi + Math.imul(ah2, bh5)) | 0;\n        lo = (lo + Math.imul(al1, bl6)) | 0;\n        mid = (mid + Math.imul(al1, bh6)) | 0;\n        mid = (mid + Math.imul(ah1, bl6)) | 0;\n        hi = (hi + Math.imul(ah1, bh6)) | 0;\n        lo = (lo + Math.imul(al0, bl7)) | 0;\n        mid = (mid + Math.imul(al0, bh7)) | 0;\n        mid = (mid + Math.imul(ah0, bl7)) | 0;\n        hi = (hi + Math.imul(ah0, bh7)) | 0;\n        var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n        w7 &= 0x3ffffff;\n        /* k = 8 */\n        lo = Math.imul(al8, bl0);\n        mid = Math.imul(al8, bh0);\n        mid = (mid + Math.imul(ah8, bl0)) | 0;\n        hi = Math.imul(ah8, bh0);\n        lo = (lo + Math.imul(al7, bl1)) | 0;\n        mid = (mid + Math.imul(al7, bh1)) | 0;\n        mid = (mid + Math.imul(ah7, bl1)) | 0;\n        hi = (hi + Math.imul(ah7, bh1)) | 0;\n        lo = (lo + Math.imul(al6, bl2)) | 0;\n        mid = (mid + Math.imul(al6, bh2)) | 0;\n        mid = (mid + Math.imul(ah6, bl2)) | 0;\n        hi = (hi + Math.imul(ah6, bh2)) | 0;\n        lo = (lo + Math.imul(al5, bl3)) | 0;\n        mid = (mid + Math.imul(al5, bh3)) | 0;\n        mid = (mid + Math.imul(ah5, bl3)) | 0;\n        hi = (hi + Math.imul(ah5, bh3)) | 0;\n        lo = (lo + Math.imul(al4, bl4)) | 0;\n        mid = (mid + Math.imul(al4, bh4)) | 0;\n        mid = (mid + Math.imul(ah4, bl4)) | 0;\n        hi = (hi + Math.imul(ah4, bh4)) | 0;\n        lo = (lo + Math.imul(al3, bl5)) | 0;\n        mid = (mid + Math.imul(al3, bh5)) | 0;\n        mid = (mid + Math.imul(ah3, bl5)) | 0;\n        hi = (hi + Math.imul(ah3, bh5)) | 0;\n        lo = (lo + Math.imul(al2, bl6)) | 0;\n        mid = (mid + Math.imul(al2, bh6)) | 0;\n        mid = (mid + Math.imul(ah2, bl6)) | 0;\n        hi = (hi + Math.imul(ah2, bh6)) | 0;\n        lo = (lo + Math.imul(al1, bl7)) | 0;\n        mid = (mid + Math.imul(al1, bh7)) | 0;\n        mid = (mid + Math.imul(ah1, bl7)) | 0;\n        hi = (hi + Math.imul(ah1, bh7)) | 0;\n        lo = (lo + Math.imul(al0, bl8)) | 0;\n        mid = (mid + Math.imul(al0, bh8)) | 0;\n        mid = (mid + Math.imul(ah0, bl8)) | 0;\n        hi = (hi + Math.imul(ah0, bh8)) | 0;\n        var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n        w8 &= 0x3ffffff;\n        /* k = 9 */\n        lo = Math.imul(al9, bl0);\n        mid = Math.imul(al9, bh0);\n        mid = (mid + Math.imul(ah9, bl0)) | 0;\n        hi = Math.imul(ah9, bh0);\n        lo = (lo + Math.imul(al8, bl1)) | 0;\n        mid = (mid + Math.imul(al8, bh1)) | 0;\n        mid = (mid + Math.imul(ah8, bl1)) | 0;\n        hi = (hi + Math.imul(ah8, bh1)) | 0;\n        lo = (lo + Math.imul(al7, bl2)) | 0;\n        mid = (mid + Math.imul(al7, bh2)) | 0;\n        mid = (mid + Math.imul(ah7, bl2)) | 0;\n        hi = (hi + Math.imul(ah7, bh2)) | 0;\n        lo = (lo + Math.imul(al6, bl3)) | 0;\n        mid = (mid + Math.imul(al6, bh3)) | 0;\n        mid = (mid + Math.imul(ah6, bl3)) | 0;\n        hi = (hi + Math.imul(ah6, bh3)) | 0;\n        lo = (lo + Math.imul(al5, bl4)) | 0;\n        mid = (mid + Math.imul(al5, bh4)) | 0;\n        mid = (mid + Math.imul(ah5, bl4)) | 0;\n        hi = (hi + Math.imul(ah5, bh4)) | 0;\n        lo = (lo + Math.imul(al4, bl5)) | 0;\n        mid = (mid + Math.imul(al4, bh5)) | 0;\n        mid = (mid + Math.imul(ah4, bl5)) | 0;\n        hi = (hi + Math.imul(ah4, bh5)) | 0;\n        lo = (lo + Math.imul(al3, bl6)) | 0;\n        mid = (mid + Math.imul(al3, bh6)) | 0;\n        mid = (mid + Math.imul(ah3, bl6)) | 0;\n        hi = (hi + Math.imul(ah3, bh6)) | 0;\n        lo = (lo + Math.imul(al2, bl7)) | 0;\n        mid = (mid + Math.imul(al2, bh7)) | 0;\n        mid = (mid + Math.imul(ah2, bl7)) | 0;\n        hi = (hi + Math.imul(ah2, bh7)) | 0;\n        lo = (lo + Math.imul(al1, bl8)) | 0;\n        mid = (mid + Math.imul(al1, bh8)) | 0;\n        mid = (mid + Math.imul(ah1, bl8)) | 0;\n        hi = (hi + Math.imul(ah1, bh8)) | 0;\n        lo = (lo + Math.imul(al0, bl9)) | 0;\n        mid = (mid + Math.imul(al0, bh9)) | 0;\n        mid = (mid + Math.imul(ah0, bl9)) | 0;\n        hi = (hi + Math.imul(ah0, bh9)) | 0;\n        var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n        w9 &= 0x3ffffff;\n        /* k = 10 */\n        lo = Math.imul(al9, bl1);\n        mid = Math.imul(al9, bh1);\n        mid = (mid + Math.imul(ah9, bl1)) | 0;\n        hi = Math.imul(ah9, bh1);\n        lo = (lo + Math.imul(al8, bl2)) | 0;\n        mid = (mid + Math.imul(al8, bh2)) | 0;\n        mid = (mid + Math.imul(ah8, bl2)) | 0;\n        hi = (hi + Math.imul(ah8, bh2)) | 0;\n        lo = (lo + Math.imul(al7, bl3)) | 0;\n        mid = (mid + Math.imul(al7, bh3)) | 0;\n        mid = (mid + Math.imul(ah7, bl3)) | 0;\n        hi = (hi + Math.imul(ah7, bh3)) | 0;\n        lo = (lo + Math.imul(al6, bl4)) | 0;\n        mid = (mid + Math.imul(al6, bh4)) | 0;\n        mid = (mid + Math.imul(ah6, bl4)) | 0;\n        hi = (hi + Math.imul(ah6, bh4)) | 0;\n        lo = (lo + Math.imul(al5, bl5)) | 0;\n        mid = (mid + Math.imul(al5, bh5)) | 0;\n        mid = (mid + Math.imul(ah5, bl5)) | 0;\n        hi = (hi + Math.imul(ah5, bh5)) | 0;\n        lo = (lo + Math.imul(al4, bl6)) | 0;\n        mid = (mid + Math.imul(al4, bh6)) | 0;\n        mid = (mid + Math.imul(ah4, bl6)) | 0;\n        hi = (hi + Math.imul(ah4, bh6)) | 0;\n        lo = (lo + Math.imul(al3, bl7)) | 0;\n        mid = (mid + Math.imul(al3, bh7)) | 0;\n        mid = (mid + Math.imul(ah3, bl7)) | 0;\n        hi = (hi + Math.imul(ah3, bh7)) | 0;\n        lo = (lo + Math.imul(al2, bl8)) | 0;\n        mid = (mid + Math.imul(al2, bh8)) | 0;\n        mid = (mid + Math.imul(ah2, bl8)) | 0;\n        hi = (hi + Math.imul(ah2, bh8)) | 0;\n        lo = (lo + Math.imul(al1, bl9)) | 0;\n        mid = (mid + Math.imul(al1, bh9)) | 0;\n        mid = (mid + Math.imul(ah1, bl9)) | 0;\n        hi = (hi + Math.imul(ah1, bh9)) | 0;\n        var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n        w10 &= 0x3ffffff;\n        /* k = 11 */\n        lo = Math.imul(al9, bl2);\n        mid = Math.imul(al9, bh2);\n        mid = (mid + Math.imul(ah9, bl2)) | 0;\n        hi = Math.imul(ah9, bh2);\n        lo = (lo + Math.imul(al8, bl3)) | 0;\n        mid = (mid + Math.imul(al8, bh3)) | 0;\n        mid = (mid + Math.imul(ah8, bl3)) | 0;\n        hi = (hi + Math.imul(ah8, bh3)) | 0;\n        lo = (lo + Math.imul(al7, bl4)) | 0;\n        mid = (mid + Math.imul(al7, bh4)) | 0;\n        mid = (mid + Math.imul(ah7, bl4)) | 0;\n        hi = (hi + Math.imul(ah7, bh4)) | 0;\n        lo = (lo + Math.imul(al6, bl5)) | 0;\n        mid = (mid + Math.imul(al6, bh5)) | 0;\n        mid = (mid + Math.imul(ah6, bl5)) | 0;\n        hi = (hi + Math.imul(ah6, bh5)) | 0;\n        lo = (lo + Math.imul(al5, bl6)) | 0;\n        mid = (mid + Math.imul(al5, bh6)) | 0;\n        mid = (mid + Math.imul(ah5, bl6)) | 0;\n        hi = (hi + Math.imul(ah5, bh6)) | 0;\n        lo = (lo + Math.imul(al4, bl7)) | 0;\n        mid = (mid + Math.imul(al4, bh7)) | 0;\n        mid = (mid + Math.imul(ah4, bl7)) | 0;\n        hi = (hi + Math.imul(ah4, bh7)) | 0;\n        lo = (lo + Math.imul(al3, bl8)) | 0;\n        mid = (mid + Math.imul(al3, bh8)) | 0;\n        mid = (mid + Math.imul(ah3, bl8)) | 0;\n        hi = (hi + Math.imul(ah3, bh8)) | 0;\n        lo = (lo + Math.imul(al2, bl9)) | 0;\n        mid = (mid + Math.imul(al2, bh9)) | 0;\n        mid = (mid + Math.imul(ah2, bl9)) | 0;\n        hi = (hi + Math.imul(ah2, bh9)) | 0;\n        var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n        w11 &= 0x3ffffff;\n        /* k = 12 */\n        lo = Math.imul(al9, bl3);\n        mid = Math.imul(al9, bh3);\n        mid = (mid + Math.imul(ah9, bl3)) | 0;\n        hi = Math.imul(ah9, bh3);\n        lo = (lo + Math.imul(al8, bl4)) | 0;\n        mid = (mid + Math.imul(al8, bh4)) | 0;\n        mid = (mid + Math.imul(ah8, bl4)) | 0;\n        hi = (hi + Math.imul(ah8, bh4)) | 0;\n        lo = (lo + Math.imul(al7, bl5)) | 0;\n        mid = (mid + Math.imul(al7, bh5)) | 0;\n        mid = (mid + Math.imul(ah7, bl5)) | 0;\n        hi = (hi + Math.imul(ah7, bh5)) | 0;\n        lo = (lo + Math.imul(al6, bl6)) | 0;\n        mid = (mid + Math.imul(al6, bh6)) | 0;\n        mid = (mid + Math.imul(ah6, bl6)) | 0;\n        hi = (hi + Math.imul(ah6, bh6)) | 0;\n        lo = (lo + Math.imul(al5, bl7)) | 0;\n        mid = (mid + Math.imul(al5, bh7)) | 0;\n        mid = (mid + Math.imul(ah5, bl7)) | 0;\n        hi = (hi + Math.imul(ah5, bh7)) | 0;\n        lo = (lo + Math.imul(al4, bl8)) | 0;\n        mid = (mid + Math.imul(al4, bh8)) | 0;\n        mid = (mid + Math.imul(ah4, bl8)) | 0;\n        hi = (hi + Math.imul(ah4, bh8)) | 0;\n        lo = (lo + Math.imul(al3, bl9)) | 0;\n        mid = (mid + Math.imul(al3, bh9)) | 0;\n        mid = (mid + Math.imul(ah3, bl9)) | 0;\n        hi = (hi + Math.imul(ah3, bh9)) | 0;\n        var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n        w12 &= 0x3ffffff;\n        /* k = 13 */\n        lo = Math.imul(al9, bl4);\n        mid = Math.imul(al9, bh4);\n        mid = (mid + Math.imul(ah9, bl4)) | 0;\n        hi = Math.imul(ah9, bh4);\n        lo = (lo + Math.imul(al8, bl5)) | 0;\n        mid = (mid + Math.imul(al8, bh5)) | 0;\n        mid = (mid + Math.imul(ah8, bl5)) | 0;\n        hi = (hi + Math.imul(ah8, bh5)) | 0;\n        lo = (lo + Math.imul(al7, bl6)) | 0;\n        mid = (mid + Math.imul(al7, bh6)) | 0;\n        mid = (mid + Math.imul(ah7, bl6)) | 0;\n        hi = (hi + Math.imul(ah7, bh6)) | 0;\n        lo = (lo + Math.imul(al6, bl7)) | 0;\n        mid = (mid + Math.imul(al6, bh7)) | 0;\n        mid = (mid + Math.imul(ah6, bl7)) | 0;\n        hi = (hi + Math.imul(ah6, bh7)) | 0;\n        lo = (lo + Math.imul(al5, bl8)) | 0;\n        mid = (mid + Math.imul(al5, bh8)) | 0;\n        mid = (mid + Math.imul(ah5, bl8)) | 0;\n        hi = (hi + Math.imul(ah5, bh8)) | 0;\n        lo = (lo + Math.imul(al4, bl9)) | 0;\n        mid = (mid + Math.imul(al4, bh9)) | 0;\n        mid = (mid + Math.imul(ah4, bl9)) | 0;\n        hi = (hi + Math.imul(ah4, bh9)) | 0;\n        var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n        w13 &= 0x3ffffff;\n        /* k = 14 */\n        lo = Math.imul(al9, bl5);\n        mid = Math.imul(al9, bh5);\n        mid = (mid + Math.imul(ah9, bl5)) | 0;\n        hi = Math.imul(ah9, bh5);\n        lo = (lo + Math.imul(al8, bl6)) | 0;\n        mid = (mid + Math.imul(al8, bh6)) | 0;\n        mid = (mid + Math.imul(ah8, bl6)) | 0;\n        hi = (hi + Math.imul(ah8, bh6)) | 0;\n        lo = (lo + Math.imul(al7, bl7)) | 0;\n        mid = (mid + Math.imul(al7, bh7)) | 0;\n        mid = (mid + Math.imul(ah7, bl7)) | 0;\n        hi = (hi + Math.imul(ah7, bh7)) | 0;\n        lo = (lo + Math.imul(al6, bl8)) | 0;\n        mid = (mid + Math.imul(al6, bh8)) | 0;\n        mid = (mid + Math.imul(ah6, bl8)) | 0;\n        hi = (hi + Math.imul(ah6, bh8)) | 0;\n        lo = (lo + Math.imul(al5, bl9)) | 0;\n        mid = (mid + Math.imul(al5, bh9)) | 0;\n        mid = (mid + Math.imul(ah5, bl9)) | 0;\n        hi = (hi + Math.imul(ah5, bh9)) | 0;\n        var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n        w14 &= 0x3ffffff;\n        /* k = 15 */\n        lo = Math.imul(al9, bl6);\n        mid = Math.imul(al9, bh6);\n        mid = (mid + Math.imul(ah9, bl6)) | 0;\n        hi = Math.imul(ah9, bh6);\n        lo = (lo + Math.imul(al8, bl7)) | 0;\n        mid = (mid + Math.imul(al8, bh7)) | 0;\n        mid = (mid + Math.imul(ah8, bl7)) | 0;\n        hi = (hi + Math.imul(ah8, bh7)) | 0;\n        lo = (lo + Math.imul(al7, bl8)) | 0;\n        mid = (mid + Math.imul(al7, bh8)) | 0;\n        mid = (mid + Math.imul(ah7, bl8)) | 0;\n        hi = (hi + Math.imul(ah7, bh8)) | 0;\n        lo = (lo + Math.imul(al6, bl9)) | 0;\n        mid = (mid + Math.imul(al6, bh9)) | 0;\n        mid = (mid + Math.imul(ah6, bl9)) | 0;\n        hi = (hi + Math.imul(ah6, bh9)) | 0;\n        var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n        w15 &= 0x3ffffff;\n        /* k = 16 */\n        lo = Math.imul(al9, bl7);\n        mid = Math.imul(al9, bh7);\n        mid = (mid + Math.imul(ah9, bl7)) | 0;\n        hi = Math.imul(ah9, bh7);\n        lo = (lo + Math.imul(al8, bl8)) | 0;\n        mid = (mid + Math.imul(al8, bh8)) | 0;\n        mid = (mid + Math.imul(ah8, bl8)) | 0;\n        hi = (hi + Math.imul(ah8, bh8)) | 0;\n        lo = (lo + Math.imul(al7, bl9)) | 0;\n        mid = (mid + Math.imul(al7, bh9)) | 0;\n        mid = (mid + Math.imul(ah7, bl9)) | 0;\n        hi = (hi + Math.imul(ah7, bh9)) | 0;\n        var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n        w16 &= 0x3ffffff;\n        /* k = 17 */\n        lo = Math.imul(al9, bl8);\n        mid = Math.imul(al9, bh8);\n        mid = (mid + Math.imul(ah9, bl8)) | 0;\n        hi = Math.imul(ah9, bh8);\n        lo = (lo + Math.imul(al8, bl9)) | 0;\n        mid = (mid + Math.imul(al8, bh9)) | 0;\n        mid = (mid + Math.imul(ah8, bl9)) | 0;\n        hi = (hi + Math.imul(ah8, bh9)) | 0;\n        var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n        w17 &= 0x3ffffff;\n        /* k = 18 */\n        lo = Math.imul(al9, bl9);\n        mid = Math.imul(al9, bh9);\n        mid = (mid + Math.imul(ah9, bl9)) | 0;\n        hi = Math.imul(ah9, bh9);\n        var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n        c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n        w18 &= 0x3ffffff;\n        o[0] = w0;\n        o[1] = w1;\n        o[2] = w2;\n        o[3] = w3;\n        o[4] = w4;\n        o[5] = w5;\n        o[6] = w6;\n        o[7] = w7;\n        o[8] = w8;\n        o[9] = w9;\n        o[10] = w10;\n        o[11] = w11;\n        o[12] = w12;\n        o[13] = w13;\n        o[14] = w14;\n        o[15] = w15;\n        o[16] = w16;\n        o[17] = w17;\n        o[18] = w18;\n        if (c !== 0) {\n            o[19] = c;\n            out.length++;\n        }\n        return out;\n    };\n\n    // Polyfill comb\n    if (!Math.imul) {\n        comb10MulTo = smallMulTo;\n    }\n\n    function bigMulTo (self, num, out) {\n        out.negative = num.negative ^ self.negative;\n        out.length = self.length + num.length;\n\n        var carry = 0;\n        var hncarry = 0;\n        for (var k = 0; k < out.length - 1; k++) {\n            // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n            // note that ncarry could be >= 0x3ffffff\n            var ncarry = hncarry;\n            hncarry = 0;\n            var rword = carry & 0x3ffffff;\n            var maxJ = Math.min(k, num.length - 1);\n            for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n                var i = k - j;\n                var a = self.words[i] | 0;\n                var b = num.words[j] | 0;\n                var r = a * b;\n\n                var lo = r & 0x3ffffff;\n                ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n                lo = (lo + rword) | 0;\n                rword = lo & 0x3ffffff;\n                ncarry = (ncarry + (lo >>> 26)) | 0;\n\n                hncarry += ncarry >>> 26;\n                ncarry &= 0x3ffffff;\n            }\n            out.words[k] = rword;\n            carry = ncarry;\n            ncarry = hncarry;\n        }\n        if (carry !== 0) {\n            out.words[k] = carry;\n        } else {\n            out.length--;\n        }\n\n        return out._strip();\n    }\n\n    function jumboMulTo (self, num, out) {\n        // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n        // var fftm = new FFTM();\n        // return fftm.mulp(self, num, out);\n        return bigMulTo(self, num, out);\n    }\n\n    BN.prototype.mulTo = function mulTo (num, out) {\n        var res;\n        var len = this.length + num.length;\n        if (this.length === 10 && num.length === 10) {\n            res = comb10MulTo(this, num, out);\n        } else if (len < 63) {\n            res = smallMulTo(this, num, out);\n        } else if (len < 1024) {\n            res = bigMulTo(this, num, out);\n        } else {\n            res = jumboMulTo(this, num, out);\n        }\n\n        return res;\n    };\n\n    // Cooley-Tukey algorithm for FFT\n    // slightly revisited to rely on looping instead of recursion\n\n    function FFTM (x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    FFTM.prototype.makeRBT = function makeRBT (N) {\n        var t = new Array(N);\n        var l = BN.prototype._countBits(N) - 1;\n        for (var i = 0; i < N; i++) {\n            t[i] = this.revBin(i, l, N);\n        }\n\n        return t;\n    };\n\n    // Returns binary-reversed representation of `x`\n    FFTM.prototype.revBin = function revBin (x, l, N) {\n        if (x === 0 || x === N - 1) return x;\n\n        var rb = 0;\n        for (var i = 0; i < l; i++) {\n            rb |= (x & 1) << (l - i - 1);\n            x >>= 1;\n        }\n\n        return rb;\n    };\n\n    // Performs \"tweedling\" phase, therefore 'emulating'\n    // behaviour of the recursive algorithm\n    FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n        for (var i = 0; i < N; i++) {\n            rtws[i] = rws[rbt[i]];\n            itws[i] = iws[rbt[i]];\n        }\n    };\n\n    FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n        this.permute(rbt, rws, iws, rtws, itws, N);\n\n        for (var s = 1; s < N; s <<= 1) {\n            var l = s << 1;\n\n            var rtwdf = Math.cos(2 * Math.PI / l);\n            var itwdf = Math.sin(2 * Math.PI / l);\n\n            for (var p = 0; p < N; p += l) {\n                var rtwdf_ = rtwdf;\n                var itwdf_ = itwdf;\n\n                for (var j = 0; j < s; j++) {\n                    var re = rtws[p + j];\n                    var ie = itws[p + j];\n\n                    var ro = rtws[p + j + s];\n                    var io = itws[p + j + s];\n\n                    var rx = rtwdf_ * ro - itwdf_ * io;\n\n                    io = rtwdf_ * io + itwdf_ * ro;\n                    ro = rx;\n\n                    rtws[p + j] = re + ro;\n                    itws[p + j] = ie + io;\n\n                    rtws[p + j + s] = re - ro;\n                    itws[p + j + s] = ie - io;\n\n                    /* jshint maxdepth : false */\n                    if (j !== l) {\n                        rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n                        itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n                        rtwdf_ = rx;\n                    }\n                }\n            }\n        }\n    };\n\n    FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n        var N = Math.max(m, n) | 1;\n        var odd = N & 1;\n        var i = 0;\n        for (N = N / 2 | 0; N; N = N >>> 1) {\n            i++;\n        }\n\n        return 1 << i + 1 + odd;\n    };\n\n    FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n        if (N <= 1) return;\n\n        for (var i = 0; i < N / 2; i++) {\n            var t = rws[i];\n\n            rws[i] = rws[N - i - 1];\n            rws[N - i - 1] = t;\n\n            t = iws[i];\n\n            iws[i] = -iws[N - i - 1];\n            iws[N - i - 1] = -t;\n        }\n    };\n\n    FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n        var carry = 0;\n        for (var i = 0; i < N / 2; i++) {\n            var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n                Math.round(ws[2 * i] / N) +\n                carry;\n\n            ws[i] = w & 0x3ffffff;\n\n            if (w < 0x4000000) {\n                carry = 0;\n            } else {\n                carry = w / 0x4000000 | 0;\n            }\n        }\n\n        return ws;\n    };\n\n    FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n        var carry = 0;\n        for (var i = 0; i < len; i++) {\n            carry = carry + (ws[i] | 0);\n\n            rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n            rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n        }\n\n        // Pad with zeroes\n        for (i = 2 * len; i < N; ++i) {\n            rws[i] = 0;\n        }\n\n        assert(carry === 0);\n        assert((carry & ~0x1fff) === 0);\n    };\n\n    FFTM.prototype.stub = function stub (N) {\n        var ph = new Array(N);\n        for (var i = 0; i < N; i++) {\n            ph[i] = 0;\n        }\n\n        return ph;\n    };\n\n    FFTM.prototype.mulp = function mulp (x, y, out) {\n        var N = 2 * this.guessLen13b(x.length, y.length);\n\n        var rbt = this.makeRBT(N);\n\n        var _ = this.stub(N);\n\n        var rws = new Array(N);\n        var rwst = new Array(N);\n        var iwst = new Array(N);\n\n        var nrws = new Array(N);\n        var nrwst = new Array(N);\n        var niwst = new Array(N);\n\n        var rmws = out.words;\n        rmws.length = N;\n\n        this.convert13b(x.words, x.length, rws, N);\n        this.convert13b(y.words, y.length, nrws, N);\n\n        this.transform(rws, _, rwst, iwst, N, rbt);\n        this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n        for (var i = 0; i < N; i++) {\n            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n            rwst[i] = rx;\n        }\n\n        this.conjugate(rwst, iwst, N);\n        this.transform(rwst, iwst, rmws, _, N, rbt);\n        this.conjugate(rmws, _, N);\n        this.normalize13b(rmws, N);\n\n        out.negative = x.negative ^ y.negative;\n        out.length = x.length + y.length;\n        return out._strip();\n    };\n\n    // Multiply `this` by `num`\n    BN.prototype.mul = function mul (num) {\n        var out = new BN(null);\n        out.words = new Array(this.length + num.length);\n        return this.mulTo(num, out);\n    };\n\n    // Multiply employing FFT\n    BN.prototype.mulf = function mulf (num) {\n        var out = new BN(null);\n        out.words = new Array(this.length + num.length);\n        return jumboMulTo(this, num, out);\n    };\n\n    // In-place Multiplication\n    BN.prototype.imul = function imul (num) {\n        return this.clone().mulTo(num, this);\n    };\n\n    BN.prototype.imuln = function imuln (num) {\n        var isNegNum = num < 0;\n        if (isNegNum) num = -num;\n\n        assert(typeof num === 'number');\n        assert(num < 0x4000000);\n\n        // Carry\n        var carry = 0;\n        for (var i = 0; i < this.length; i++) {\n            var w = (this.words[i] | 0) * num;\n            var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n            carry >>= 26;\n            carry += (w / 0x4000000) | 0;\n            // NOTE: lo is 27bit maximum\n            carry += lo >>> 26;\n            this.words[i] = lo & 0x3ffffff;\n        }\n\n        if (carry !== 0) {\n            this.words[i] = carry;\n            this.length++;\n        }\n\n        return isNegNum ? this.ineg() : this;\n    };\n\n    BN.prototype.muln = function muln (num) {\n        return this.clone().imuln(num);\n    };\n\n    // `this` * `this`\n    BN.prototype.sqr = function sqr () {\n        return this.mul(this);\n    };\n\n    // `this` * `this` in-place\n    BN.prototype.isqr = function isqr () {\n        return this.imul(this.clone());\n    };\n\n    // Math.pow(`this`, `num`)\n    BN.prototype.pow = function pow (num) {\n        var w = toBitArray(num);\n        if (w.length === 0) return new BN(1);\n\n        // Skip leading zeroes\n        var res = this;\n        for (var i = 0; i < w.length; i++, res = res.sqr()) {\n            if (w[i] !== 0) break;\n        }\n\n        if (++i < w.length) {\n            for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n                if (w[i] === 0) continue;\n\n                res = res.mul(q);\n            }\n        }\n\n        return res;\n    };\n\n    // Shift-left in-place\n    BN.prototype.iushln = function iushln (bits) {\n        assert(typeof bits === 'number' && bits >= 0);\n        var r = bits % 26;\n        var s = (bits - r) / 26;\n        var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n        var i;\n\n        if (r !== 0) {\n            var carry = 0;\n\n            for (i = 0; i < this.length; i++) {\n                var newCarry = this.words[i] & carryMask;\n                var c = ((this.words[i] | 0) - newCarry) << r;\n                this.words[i] = c | carry;\n                carry = newCarry >>> (26 - r);\n            }\n\n            if (carry) {\n                this.words[i] = carry;\n                this.length++;\n            }\n        }\n\n        if (s !== 0) {\n            for (i = this.length - 1; i >= 0; i--) {\n                this.words[i + s] = this.words[i];\n            }\n\n            for (i = 0; i < s; i++) {\n                this.words[i] = 0;\n            }\n\n            this.length += s;\n        }\n\n        return this._strip();\n    };\n\n    BN.prototype.ishln = function ishln (bits) {\n        // TODO(indutny): implement me\n        assert(this.negative === 0);\n        return this.iushln(bits);\n    };\n\n    // Shift-right in-place\n    // NOTE: `hint` is a lowest bit before trailing zeroes\n    // NOTE: if `extended` is present - it will be filled with destroyed bits\n    BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n        assert(typeof bits === 'number' && bits >= 0);\n        var h;\n        if (hint) {\n            h = (hint - (hint % 26)) / 26;\n        } else {\n            h = 0;\n        }\n\n        var r = bits % 26;\n        var s = Math.min((bits - r) / 26, this.length);\n        var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n        var maskedWords = extended;\n\n        h -= s;\n        h = Math.max(0, h);\n\n        // Extended mode, copy masked part\n        if (maskedWords) {\n            for (var i = 0; i < s; i++) {\n                maskedWords.words[i] = this.words[i];\n            }\n            maskedWords.length = s;\n        }\n\n        if (s === 0) {\n            // No-op, we should not move anything at all\n        } else if (this.length > s) {\n            this.length -= s;\n            for (i = 0; i < this.length; i++) {\n                this.words[i] = this.words[i + s];\n            }\n        } else {\n            this.words[0] = 0;\n            this.length = 1;\n        }\n\n        var carry = 0;\n        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n            var word = this.words[i] | 0;\n            this.words[i] = (carry << (26 - r)) | (word >>> r);\n            carry = word & mask;\n        }\n\n        // Push carried bits as a mask\n        if (maskedWords && carry !== 0) {\n            maskedWords.words[maskedWords.length++] = carry;\n        }\n\n        if (this.length === 0) {\n            this.words[0] = 0;\n            this.length = 1;\n        }\n\n        return this._strip();\n    };\n\n    BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n        // TODO(indutny): implement me\n        assert(this.negative === 0);\n        return this.iushrn(bits, hint, extended);\n    };\n\n    // Shift-left\n    BN.prototype.shln = function shln (bits) {\n        return this.clone().ishln(bits);\n    };\n\n    BN.prototype.ushln = function ushln (bits) {\n        return this.clone().iushln(bits);\n    };\n\n    // Shift-right\n    BN.prototype.shrn = function shrn (bits) {\n        return this.clone().ishrn(bits);\n    };\n\n    BN.prototype.ushrn = function ushrn (bits) {\n        return this.clone().iushrn(bits);\n    };\n\n    // Test if n bit is set\n    BN.prototype.testn = function testn (bit) {\n        assert(typeof bit === 'number' && bit >= 0);\n        var r = bit % 26;\n        var s = (bit - r) / 26;\n        var q = 1 << r;\n\n        // Fast case: bit is much higher than all existing words\n        if (this.length <= s) return false;\n\n        // Check bit and return\n        var w = this.words[s];\n\n        return !!(w & q);\n    };\n\n    // Return only lowers bits of number (in-place)\n    BN.prototype.imaskn = function imaskn (bits) {\n        assert(typeof bits === 'number' && bits >= 0);\n        var r = bits % 26;\n        var s = (bits - r) / 26;\n\n        assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n        if (this.length <= s) {\n            return this;\n        }\n\n        if (r !== 0) {\n            s++;\n        }\n        this.length = Math.min(s, this.length);\n\n        if (r !== 0) {\n            var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n            this.words[this.length - 1] &= mask;\n        }\n\n        return this._strip();\n    };\n\n    // Return only lowers bits of number\n    BN.prototype.maskn = function maskn (bits) {\n        return this.clone().imaskn(bits);\n    };\n\n    // Add plain number `num` to `this`\n    BN.prototype.iaddn = function iaddn (num) {\n        assert(typeof num === 'number');\n        assert(num < 0x4000000);\n        if (num < 0) return this.isubn(-num);\n\n        // Possible sign change\n        if (this.negative !== 0) {\n            if (this.length === 1 && (this.words[0] | 0) <= num) {\n                this.words[0] = num - (this.words[0] | 0);\n                this.negative = 0;\n                return this;\n            }\n\n            this.negative = 0;\n            this.isubn(num);\n            this.negative = 1;\n            return this;\n        }\n\n        // Add without checks\n        return this._iaddn(num);\n    };\n\n    BN.prototype._iaddn = function _iaddn (num) {\n        this.words[0] += num;\n\n        // Carry\n        for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n            this.words[i] -= 0x4000000;\n            if (i === this.length - 1) {\n                this.words[i + 1] = 1;\n            } else {\n                this.words[i + 1]++;\n            }\n        }\n        this.length = Math.max(this.length, i + 1);\n\n        return this;\n    };\n\n    // Subtract plain number `num` from `this`\n    BN.prototype.isubn = function isubn (num) {\n        assert(typeof num === 'number');\n        assert(num < 0x4000000);\n        if (num < 0) return this.iaddn(-num);\n\n        if (this.negative !== 0) {\n            this.negative = 0;\n            this.iaddn(num);\n            this.negative = 1;\n            return this;\n        }\n\n        this.words[0] -= num;\n\n        if (this.length === 1 && this.words[0] < 0) {\n            this.words[0] = -this.words[0];\n            this.negative = 1;\n        } else {\n            // Carry\n            for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n                this.words[i] += 0x4000000;\n                this.words[i + 1] -= 1;\n            }\n        }\n\n        return this._strip();\n    };\n\n    BN.prototype.addn = function addn (num) {\n        return this.clone().iaddn(num);\n    };\n\n    BN.prototype.subn = function subn (num) {\n        return this.clone().isubn(num);\n    };\n\n    BN.prototype.iabs = function iabs () {\n        this.negative = 0;\n\n        return this;\n    };\n\n    BN.prototype.abs = function abs () {\n        return this.clone().iabs();\n    };\n\n    BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n        var len = num.length + shift;\n        var i;\n\n        this._expand(len);\n\n        var w;\n        var carry = 0;\n        for (i = 0; i < num.length; i++) {\n            w = (this.words[i + shift] | 0) + carry;\n            var right = (num.words[i] | 0) * mul;\n            w -= right & 0x3ffffff;\n            carry = (w >> 26) - ((right / 0x4000000) | 0);\n            this.words[i + shift] = w & 0x3ffffff;\n        }\n        for (; i < this.length - shift; i++) {\n            w = (this.words[i + shift] | 0) + carry;\n            carry = w >> 26;\n            this.words[i + shift] = w & 0x3ffffff;\n        }\n\n        if (carry === 0) return this._strip();\n\n        // Subtraction overflow\n        assert(carry === -1);\n        carry = 0;\n        for (i = 0; i < this.length; i++) {\n            w = -(this.words[i] | 0) + carry;\n            carry = w >> 26;\n            this.words[i] = w & 0x3ffffff;\n        }\n        this.negative = 1;\n\n        return this._strip();\n    };\n\n    BN.prototype._wordDiv = function _wordDiv (num, mode) {\n        var shift = this.length - num.length;\n\n        var a = this.clone();\n        var b = num;\n\n        // Normalize\n        var bhi = b.words[b.length - 1] | 0;\n        var bhiBits = this._countBits(bhi);\n        shift = 26 - bhiBits;\n        if (shift !== 0) {\n            b = b.ushln(shift);\n            a.iushln(shift);\n            bhi = b.words[b.length - 1] | 0;\n        }\n\n        // Initialize quotient\n        var m = a.length - b.length;\n        var q;\n\n        if (mode !== 'mod') {\n            q = new BN(null);\n            q.length = m + 1;\n            q.words = new Array(q.length);\n            for (var i = 0; i < q.length; i++) {\n                q.words[i] = 0;\n            }\n        }\n\n        var diff = a.clone()._ishlnsubmul(b, 1, m);\n        if (diff.negative === 0) {\n            a = diff;\n            if (q) {\n                q.words[m] = 1;\n            }\n        }\n\n        for (var j = m - 1; j >= 0; j--) {\n            var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n                (a.words[b.length + j - 1] | 0);\n\n            // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n            // (0x7ffffff)\n            qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n            a._ishlnsubmul(b, qj, j);\n            while (a.negative !== 0) {\n                qj--;\n                a.negative = 0;\n                a._ishlnsubmul(b, 1, j);\n                if (!a.isZero()) {\n                    a.negative ^= 1;\n                }\n            }\n            if (q) {\n                q.words[j] = qj;\n            }\n        }\n        if (q) {\n            q._strip();\n        }\n        a._strip();\n\n        // Denormalize\n        if (mode !== 'div' && shift !== 0) {\n            a.iushrn(shift);\n        }\n\n        return {\n            div: q || null,\n            mod: a\n        };\n    };\n\n    // NOTE: 1) `mode` can be set to `mod` to request mod only,\n    //       to `div` to request div only, or be absent to\n    //       request both div & mod\n    //       2) `positive` is true if unsigned mod is requested\n    BN.prototype.divmod = function divmod (num, mode, positive) {\n        assert(!num.isZero());\n\n        if (this.isZero()) {\n            return {\n                div: new BN(0),\n                mod: new BN(0)\n            };\n        }\n\n        var div, mod, res;\n        if (this.negative !== 0 && num.negative === 0) {\n            res = this.neg().divmod(num, mode);\n\n            if (mode !== 'mod') {\n                div = res.div.neg();\n            }\n\n            if (mode !== 'div') {\n                mod = res.mod.neg();\n                if (positive && mod.negative !== 0) {\n                    mod.iadd(num);\n                }\n            }\n\n            return {\n                div: div,\n                mod: mod\n            };\n        }\n\n        if (this.negative === 0 && num.negative !== 0) {\n            res = this.divmod(num.neg(), mode);\n\n            if (mode !== 'mod') {\n                div = res.div.neg();\n            }\n\n            return {\n                div: div,\n                mod: res.mod\n            };\n        }\n\n        if ((this.negative & num.negative) !== 0) {\n            res = this.neg().divmod(num.neg(), mode);\n\n            if (mode !== 'div') {\n                mod = res.mod.neg();\n                if (positive && mod.negative !== 0) {\n                    mod.isub(num);\n                }\n            }\n\n            return {\n                div: res.div,\n                mod: mod\n            };\n        }\n\n        // Both numbers are positive at this point\n\n        // Strip both numbers to approximate shift value\n        if (num.length > this.length || this.cmp(num) < 0) {\n            return {\n                div: new BN(0),\n                mod: this\n            };\n        }\n\n        // Very short reduction\n        if (num.length === 1) {\n            if (mode === 'div') {\n                return {\n                    div: this.divn(num.words[0]),\n                    mod: null\n                };\n            }\n\n            if (mode === 'mod') {\n                return {\n                    div: null,\n                    mod: new BN(this.modrn(num.words[0]))\n                };\n            }\n\n            return {\n                div: this.divn(num.words[0]),\n                mod: new BN(this.modrn(num.words[0]))\n            };\n        }\n\n        return this._wordDiv(num, mode);\n    };\n\n    // Find `this` / `num`\n    BN.prototype.div = function div (num) {\n        return this.divmod(num, 'div', false).div;\n    };\n\n    // Find `this` % `num`\n    BN.prototype.mod = function mod (num) {\n        return this.divmod(num, 'mod', false).mod;\n    };\n\n    BN.prototype.umod = function umod (num) {\n        return this.divmod(num, 'mod', true).mod;\n    };\n\n    // Find Round(`this` / `num`)\n    BN.prototype.divRound = function divRound (num) {\n        var dm = this.divmod(num);\n\n        // Fast case - exact division\n        if (dm.mod.isZero()) return dm.div;\n\n        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n        var half = num.ushrn(1);\n        var r2 = num.andln(1);\n        var cmp = mod.cmp(half);\n\n        // Round down\n        if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n        // Round up\n        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n    };\n\n    BN.prototype.modrn = function modrn (num) {\n        var isNegNum = num < 0;\n        if (isNegNum) num = -num;\n\n        assert(num <= 0x3ffffff);\n        var p = (1 << 26) % num;\n\n        var acc = 0;\n        for (var i = this.length - 1; i >= 0; i--) {\n            acc = (p * acc + (this.words[i] | 0)) % num;\n        }\n\n        return isNegNum ? -acc : acc;\n    };\n\n    // WARNING: DEPRECATED\n    BN.prototype.modn = function modn (num) {\n        return this.modrn(num);\n    };\n\n    // In-place division by number\n    BN.prototype.idivn = function idivn (num) {\n        var isNegNum = num < 0;\n        if (isNegNum) num = -num;\n\n        assert(num <= 0x3ffffff);\n\n        var carry = 0;\n        for (var i = this.length - 1; i >= 0; i--) {\n            var w = (this.words[i] | 0) + carry * 0x4000000;\n            this.words[i] = (w / num) | 0;\n            carry = w % num;\n        }\n\n        this._strip();\n        return isNegNum ? this.ineg() : this;\n    };\n\n    BN.prototype.divn = function divn (num) {\n        return this.clone().idivn(num);\n    };\n\n    BN.prototype.egcd = function egcd (p) {\n        assert(p.negative === 0);\n        assert(!p.isZero());\n\n        var x = this;\n        var y = p.clone();\n\n        if (x.negative !== 0) {\n            x = x.umod(p);\n        } else {\n            x = x.clone();\n        }\n\n        // A * x + B * y = x\n        var A = new BN(1);\n        var B = new BN(0);\n\n        // C * x + D * y = y\n        var C = new BN(0);\n        var D = new BN(1);\n\n        var g = 0;\n\n        while (x.isEven() && y.isEven()) {\n            x.iushrn(1);\n            y.iushrn(1);\n            ++g;\n        }\n\n        var yp = y.clone();\n        var xp = x.clone();\n\n        while (!x.isZero()) {\n            for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n            if (i > 0) {\n                x.iushrn(i);\n                while (i-- > 0) {\n                    if (A.isOdd() || B.isOdd()) {\n                        A.iadd(yp);\n                        B.isub(xp);\n                    }\n\n                    A.iushrn(1);\n                    B.iushrn(1);\n                }\n            }\n\n            for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n            if (j > 0) {\n                y.iushrn(j);\n                while (j-- > 0) {\n                    if (C.isOdd() || D.isOdd()) {\n                        C.iadd(yp);\n                        D.isub(xp);\n                    }\n\n                    C.iushrn(1);\n                    D.iushrn(1);\n                }\n            }\n\n            if (x.cmp(y) >= 0) {\n                x.isub(y);\n                A.isub(C);\n                B.isub(D);\n            } else {\n                y.isub(x);\n                C.isub(A);\n                D.isub(B);\n            }\n        }\n\n        return {\n            a: C,\n            b: D,\n            gcd: y.iushln(g)\n        };\n    };\n\n    // This is reduced incarnation of the binary EEA\n    // above, designated to invert members of the\n    // _prime_ fields F(p) at a maximal speed\n    BN.prototype._invmp = function _invmp (p) {\n        assert(p.negative === 0);\n        assert(!p.isZero());\n\n        var a = this;\n        var b = p.clone();\n\n        if (a.negative !== 0) {\n            a = a.umod(p);\n        } else {\n            a = a.clone();\n        }\n\n        var x1 = new BN(1);\n        var x2 = new BN(0);\n\n        var delta = b.clone();\n\n        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n            for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n            if (i > 0) {\n                a.iushrn(i);\n                while (i-- > 0) {\n                    if (x1.isOdd()) {\n                        x1.iadd(delta);\n                    }\n\n                    x1.iushrn(1);\n                }\n            }\n\n            for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n            if (j > 0) {\n                b.iushrn(j);\n                while (j-- > 0) {\n                    if (x2.isOdd()) {\n                        x2.iadd(delta);\n                    }\n\n                    x2.iushrn(1);\n                }\n            }\n\n            if (a.cmp(b) >= 0) {\n                a.isub(b);\n                x1.isub(x2);\n            } else {\n                b.isub(a);\n                x2.isub(x1);\n            }\n        }\n\n        var res;\n        if (a.cmpn(1) === 0) {\n            res = x1;\n        } else {\n            res = x2;\n        }\n\n        if (res.cmpn(0) < 0) {\n            res.iadd(p);\n        }\n\n        return res;\n    };\n\n    BN.prototype.gcd = function gcd (num) {\n        if (this.isZero()) return num.abs();\n        if (num.isZero()) return this.abs();\n\n        var a = this.clone();\n        var b = num.clone();\n        a.negative = 0;\n        b.negative = 0;\n\n        // Remove common factor of two\n        for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n            a.iushrn(1);\n            b.iushrn(1);\n        }\n\n        do {\n            while (a.isEven()) {\n                a.iushrn(1);\n            }\n            while (b.isEven()) {\n                b.iushrn(1);\n            }\n\n            var r = a.cmp(b);\n            if (r < 0) {\n                // Swap `a` and `b` to make `a` always bigger than `b`\n                var t = a;\n                a = b;\n                b = t;\n            } else if (r === 0 || b.cmpn(1) === 0) {\n                break;\n            }\n\n            a.isub(b);\n        } while (true);\n\n        return b.iushln(shift);\n    };\n\n    // Invert number in the field F(num)\n    BN.prototype.invm = function invm (num) {\n        return this.egcd(num).a.umod(num);\n    };\n\n    BN.prototype.isEven = function isEven () {\n        return (this.words[0] & 1) === 0;\n    };\n\n    BN.prototype.isOdd = function isOdd () {\n        return (this.words[0] & 1) === 1;\n    };\n\n    // And first word and num\n    BN.prototype.andln = function andln (num) {\n        return this.words[0] & num;\n    };\n\n    // Increment at the bit position in-line\n    BN.prototype.bincn = function bincn (bit) {\n        assert(typeof bit === 'number');\n        var r = bit % 26;\n        var s = (bit - r) / 26;\n        var q = 1 << r;\n\n        // Fast case: bit is much higher than all existing words\n        if (this.length <= s) {\n            this._expand(s + 1);\n            this.words[s] |= q;\n            return this;\n        }\n\n        // Add bit and propagate, if needed\n        var carry = q;\n        for (var i = s; carry !== 0 && i < this.length; i++) {\n            var w = this.words[i] | 0;\n            w += carry;\n            carry = w >>> 26;\n            w &= 0x3ffffff;\n            this.words[i] = w;\n        }\n        if (carry !== 0) {\n            this.words[i] = carry;\n            this.length++;\n        }\n        return this;\n    };\n\n    BN.prototype.isZero = function isZero () {\n        return this.length === 1 && this.words[0] === 0;\n    };\n\n    BN.prototype.cmpn = function cmpn (num) {\n        var negative = num < 0;\n\n        if (this.negative !== 0 && !negative) return -1;\n        if (this.negative === 0 && negative) return 1;\n\n        this._strip();\n\n        var res;\n        if (this.length > 1) {\n            res = 1;\n        } else {\n            if (negative) {\n                num = -num;\n            }\n\n            assert(num <= 0x3ffffff, 'Number is too big');\n\n            var w = this.words[0] | 0;\n            res = w === num ? 0 : w < num ? -1 : 1;\n        }\n        if (this.negative !== 0) return -res | 0;\n        return res;\n    };\n\n    // Compare two numbers and return:\n    // 1 - if `this` > `num`\n    // 0 - if `this` == `num`\n    // -1 - if `this` < `num`\n    BN.prototype.cmp = function cmp (num) {\n        if (this.negative !== 0 && num.negative === 0) return -1;\n        if (this.negative === 0 && num.negative !== 0) return 1;\n\n        var res = this.ucmp(num);\n        if (this.negative !== 0) return -res | 0;\n        return res;\n    };\n\n    // Unsigned comparison\n    BN.prototype.ucmp = function ucmp (num) {\n        // At this point both numbers have the same sign\n        if (this.length > num.length) return 1;\n        if (this.length < num.length) return -1;\n\n        var res = 0;\n        for (var i = this.length - 1; i >= 0; i--) {\n            var a = this.words[i] | 0;\n            var b = num.words[i] | 0;\n\n            if (a === b) continue;\n            if (a < b) {\n                res = -1;\n            } else if (a > b) {\n                res = 1;\n            }\n            break;\n        }\n        return res;\n    };\n\n    BN.prototype.gtn = function gtn (num) {\n        return this.cmpn(num) === 1;\n    };\n\n    BN.prototype.gt = function gt (num) {\n        return this.cmp(num) === 1;\n    };\n\n    BN.prototype.gten = function gten (num) {\n        return this.cmpn(num) >= 0;\n    };\n\n    BN.prototype.gte = function gte (num) {\n        return this.cmp(num) >= 0;\n    };\n\n    BN.prototype.ltn = function ltn (num) {\n        return this.cmpn(num) === -1;\n    };\n\n    BN.prototype.lt = function lt (num) {\n        return this.cmp(num) === -1;\n    };\n\n    BN.prototype.lten = function lten (num) {\n        return this.cmpn(num) <= 0;\n    };\n\n    BN.prototype.lte = function lte (num) {\n        return this.cmp(num) <= 0;\n    };\n\n    BN.prototype.eqn = function eqn (num) {\n        return this.cmpn(num) === 0;\n    };\n\n    BN.prototype.eq = function eq (num) {\n        return this.cmp(num) === 0;\n    };\n\n    //\n    // A reduce context, could be using montgomery or something better, depending\n    // on the `m` itself.\n    //\n    BN.red = function red (num) {\n        return new Red(num);\n    };\n\n    BN.prototype.toRed = function toRed (ctx) {\n        assert(!this.red, 'Already a number in reduction context');\n        assert(this.negative === 0, 'red works only with positives');\n        return ctx.convertTo(this)._forceRed(ctx);\n    };\n\n    BN.prototype.fromRed = function fromRed () {\n        assert(this.red, 'fromRed works only with numbers in reduction context');\n        return this.red.convertFrom(this);\n    };\n\n    BN.prototype._forceRed = function _forceRed (ctx) {\n        this.red = ctx;\n        return this;\n    };\n\n    BN.prototype.forceRed = function forceRed (ctx) {\n        assert(!this.red, 'Already a number in reduction context');\n        return this._forceRed(ctx);\n    };\n\n    BN.prototype.redAdd = function redAdd (num) {\n        assert(this.red, 'redAdd works only with red numbers');\n        return this.red.add(this, num);\n    };\n\n    BN.prototype.redIAdd = function redIAdd (num) {\n        assert(this.red, 'redIAdd works only with red numbers');\n        return this.red.iadd(this, num);\n    };\n\n    BN.prototype.redSub = function redSub (num) {\n        assert(this.red, 'redSub works only with red numbers');\n        return this.red.sub(this, num);\n    };\n\n    BN.prototype.redISub = function redISub (num) {\n        assert(this.red, 'redISub works only with red numbers');\n        return this.red.isub(this, num);\n    };\n\n    BN.prototype.redShl = function redShl (num) {\n        assert(this.red, 'redShl works only with red numbers');\n        return this.red.shl(this, num);\n    };\n\n    BN.prototype.redMul = function redMul (num) {\n        assert(this.red, 'redMul works only with red numbers');\n        this.red._verify2(this, num);\n        return this.red.mul(this, num);\n    };\n\n    BN.prototype.redIMul = function redIMul (num) {\n        assert(this.red, 'redMul works only with red numbers');\n        this.red._verify2(this, num);\n        return this.red.imul(this, num);\n    };\n\n    BN.prototype.redSqr = function redSqr () {\n        assert(this.red, 'redSqr works only with red numbers');\n        this.red._verify1(this);\n        return this.red.sqr(this);\n    };\n\n    BN.prototype.redISqr = function redISqr () {\n        assert(this.red, 'redISqr works only with red numbers');\n        this.red._verify1(this);\n        return this.red.isqr(this);\n    };\n\n    // Square root over p\n    BN.prototype.redSqrt = function redSqrt () {\n        assert(this.red, 'redSqrt works only with red numbers');\n        this.red._verify1(this);\n        return this.red.sqrt(this);\n    };\n\n    BN.prototype.redInvm = function redInvm () {\n        assert(this.red, 'redInvm works only with red numbers');\n        this.red._verify1(this);\n        return this.red.invm(this);\n    };\n\n    // Return negative clone of `this` % `red modulo`\n    BN.prototype.redNeg = function redNeg () {\n        assert(this.red, 'redNeg works only with red numbers');\n        this.red._verify1(this);\n        return this.red.neg(this);\n    };\n\n    BN.prototype.redPow = function redPow (num) {\n        assert(this.red && !num.red, 'redPow(normalNum)');\n        this.red._verify1(this);\n        return this.red.pow(this, num);\n    };\n\n    // Prime numbers with efficient reduction\n    var primes = {\n        k256: null,\n        p224: null,\n        p192: null,\n        p25519: null\n    };\n\n    // Pseudo-Mersenne prime\n    function MPrime (name, p) {\n        // P = 2 ^ N - K\n        this.name = name;\n        this.p = new BN(p, 16);\n        this.n = this.p.bitLength();\n        this.k = new BN(1).iushln(this.n).isub(this.p);\n\n        this.tmp = this._tmp();\n    }\n\n    MPrime.prototype._tmp = function _tmp () {\n        var tmp = new BN(null);\n        tmp.words = new Array(Math.ceil(this.n / 13));\n        return tmp;\n    };\n\n    MPrime.prototype.ireduce = function ireduce (num) {\n        // Assumes that `num` is less than `P^2`\n        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n        var r = num;\n        var rlen;\n\n        do {\n            this.split(r, this.tmp);\n            r = this.imulK(r);\n            r = r.iadd(this.tmp);\n            rlen = r.bitLength();\n        } while (rlen > this.n);\n\n        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n        if (cmp === 0) {\n            r.words[0] = 0;\n            r.length = 1;\n        } else if (cmp > 0) {\n            r.isub(this.p);\n        } else {\n            r._strip();\n        }\n\n        return r;\n    };\n\n    MPrime.prototype.split = function split (input, out) {\n        input.iushrn(this.n, 0, out);\n    };\n\n    MPrime.prototype.imulK = function imulK (num) {\n        return num.imul(this.k);\n    };\n\n    function K256 () {\n        MPrime.call(\n            this,\n            'k256',\n            'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n    }\n    inherits(K256, MPrime);\n\n    K256.prototype.split = function split (input, output) {\n        // 256 = 9 * 26 + 22\n        var mask = 0x3fffff;\n\n        var outLen = Math.min(input.length, 9);\n        for (var i = 0; i < outLen; i++) {\n            output.words[i] = input.words[i];\n        }\n        output.length = outLen;\n\n        if (input.length <= 9) {\n            input.words[0] = 0;\n            input.length = 1;\n            return;\n        }\n\n        // Shift by 9 limbs\n        var prev = input.words[9];\n        output.words[output.length++] = prev & mask;\n\n        for (i = 10; i < input.length; i++) {\n            var next = input.words[i] | 0;\n            input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n            prev = next;\n        }\n        prev >>>= 22;\n        input.words[i - 10] = prev;\n        if (prev === 0 && input.length > 10) {\n            input.length -= 10;\n        } else {\n            input.length -= 9;\n        }\n    };\n\n    K256.prototype.imulK = function imulK (num) {\n        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n        num.words[num.length] = 0;\n        num.words[num.length + 1] = 0;\n        num.length += 2;\n\n        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n        var lo = 0;\n        for (var i = 0; i < num.length; i++) {\n            var w = num.words[i] | 0;\n            lo += w * 0x3d1;\n            num.words[i] = lo & 0x3ffffff;\n            lo = w * 0x40 + ((lo / 0x4000000) | 0);\n        }\n\n        // Fast length reduction\n        if (num.words[num.length - 1] === 0) {\n            num.length--;\n            if (num.words[num.length - 1] === 0) {\n                num.length--;\n            }\n        }\n        return num;\n    };\n\n    function P224 () {\n        MPrime.call(\n            this,\n            'p224',\n            'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n    }\n    inherits(P224, MPrime);\n\n    function P192 () {\n        MPrime.call(\n            this,\n            'p192',\n            'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n    }\n    inherits(P192, MPrime);\n\n    function P25519 () {\n        // 2 ^ 255 - 19\n        MPrime.call(\n            this,\n            '25519',\n            '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n    }\n    inherits(P25519, MPrime);\n\n    P25519.prototype.imulK = function imulK (num) {\n        // K = 0x13\n        var carry = 0;\n        for (var i = 0; i < num.length; i++) {\n            var hi = (num.words[i] | 0) * 0x13 + carry;\n            var lo = hi & 0x3ffffff;\n            hi >>>= 26;\n\n            num.words[i] = lo;\n            carry = hi;\n        }\n        if (carry !== 0) {\n            num.words[num.length++] = carry;\n        }\n        return num;\n    };\n\n    // Exported mostly for testing purposes, use plain name instead\n    BN._prime = function prime (name) {\n        // Cached version of prime\n        if (primes[name]) return primes[name];\n\n        var prime;\n        if (name === 'k256') {\n            prime = new K256();\n        } else if (name === 'p224') {\n            prime = new P224();\n        } else if (name === 'p192') {\n            prime = new P192();\n        } else if (name === 'p25519') {\n            prime = new P25519();\n        } else {\n            throw new Error('Unknown prime ' + name);\n        }\n        primes[name] = prime;\n\n        return prime;\n    };\n\n    //\n    // Base reduction engine\n    //\n    function Red (m) {\n        if (typeof m === 'string') {\n            var prime = BN._prime(m);\n            this.m = prime.p;\n            this.prime = prime;\n        } else {\n            assert(m.gtn(1), 'modulus must be greater than 1');\n            this.m = m;\n            this.prime = null;\n        }\n    }\n\n    Red.prototype._verify1 = function _verify1 (a) {\n        assert(a.negative === 0, 'red works only with positives');\n        assert(a.red, 'red works only with red numbers');\n    };\n\n    Red.prototype._verify2 = function _verify2 (a, b) {\n        assert((a.negative | b.negative) === 0, 'red works only with positives');\n        assert(a.red && a.red === b.red,\n            'red works only with red numbers');\n    };\n\n    Red.prototype.imod = function imod (a) {\n        if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n        a.umod(this.m)._forceRed(this)._move(a);\n        return a;\n    };\n\n    Red.prototype.neg = function neg (a) {\n        if (a.isZero()) {\n            return a.clone();\n        }\n\n        return this.m.sub(a)._forceRed(this);\n    };\n\n    Red.prototype.add = function add (a, b) {\n        this._verify2(a, b);\n\n        var res = a.add(b);\n        if (res.cmp(this.m) >= 0) {\n            res.isub(this.m);\n        }\n        return res._forceRed(this);\n    };\n\n    Red.prototype.iadd = function iadd (a, b) {\n        this._verify2(a, b);\n\n        var res = a.iadd(b);\n        if (res.cmp(this.m) >= 0) {\n            res.isub(this.m);\n        }\n        return res;\n    };\n\n    Red.prototype.sub = function sub (a, b) {\n        this._verify2(a, b);\n\n        var res = a.sub(b);\n        if (res.cmpn(0) < 0) {\n            res.iadd(this.m);\n        }\n        return res._forceRed(this);\n    };\n\n    Red.prototype.isub = function isub (a, b) {\n        this._verify2(a, b);\n\n        var res = a.isub(b);\n        if (res.cmpn(0) < 0) {\n            res.iadd(this.m);\n        }\n        return res;\n    };\n\n    Red.prototype.shl = function shl (a, num) {\n        this._verify1(a);\n        return this.imod(a.ushln(num));\n    };\n\n    Red.prototype.imul = function imul (a, b) {\n        this._verify2(a, b);\n        return this.imod(a.imul(b));\n    };\n\n    Red.prototype.mul = function mul (a, b) {\n        this._verify2(a, b);\n        return this.imod(a.mul(b));\n    };\n\n    Red.prototype.isqr = function isqr (a) {\n        return this.imul(a, a.clone());\n    };\n\n    Red.prototype.sqr = function sqr (a) {\n        return this.mul(a, a);\n    };\n\n    Red.prototype.sqrt = function sqrt (a) {\n        if (a.isZero()) return a.clone();\n\n        var mod3 = this.m.andln(3);\n        assert(mod3 % 2 === 1);\n\n        // Fast case\n        if (mod3 === 3) {\n            var pow = this.m.add(new BN(1)).iushrn(2);\n            return this.pow(a, pow);\n        }\n\n        // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n        //\n        // Find Q and S, that Q * 2 ^ S = (P - 1)\n        var q = this.m.subn(1);\n        var s = 0;\n        while (!q.isZero() && q.andln(1) === 0) {\n            s++;\n            q.iushrn(1);\n        }\n        assert(!q.isZero());\n\n        var one = new BN(1).toRed(this);\n        var nOne = one.redNeg();\n\n        // Find quadratic non-residue\n        // NOTE: Max is such because of generalized Riemann hypothesis.\n        var lpow = this.m.subn(1).iushrn(1);\n        var z = this.m.bitLength();\n        z = new BN(2 * z * z).toRed(this);\n\n        while (this.pow(z, lpow).cmp(nOne) !== 0) {\n            z.redIAdd(nOne);\n        }\n\n        var c = this.pow(z, q);\n        var r = this.pow(a, q.addn(1).iushrn(1));\n        var t = this.pow(a, q);\n        var m = s;\n        while (t.cmp(one) !== 0) {\n            var tmp = t;\n            for (var i = 0; tmp.cmp(one) !== 0; i++) {\n                tmp = tmp.redSqr();\n            }\n            assert(i < m);\n            var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n            r = r.redMul(b);\n            c = b.redSqr();\n            t = t.redMul(c);\n            m = i;\n        }\n\n        return r;\n    };\n\n    Red.prototype.invm = function invm (a) {\n        var inv = a._invmp(this.m);\n        if (inv.negative !== 0) {\n            inv.negative = 0;\n            return this.imod(inv).redNeg();\n        } else {\n            return this.imod(inv);\n        }\n    };\n\n    Red.prototype.pow = function pow (a, num) {\n        if (num.isZero()) return new BN(1).toRed(this);\n        if (num.cmpn(1) === 0) return a.clone();\n\n        var windowSize = 4;\n        var wnd = new Array(1 << windowSize);\n        wnd[0] = new BN(1).toRed(this);\n        wnd[1] = a;\n        for (var i = 2; i < wnd.length; i++) {\n            wnd[i] = this.mul(wnd[i - 1], a);\n        }\n\n        var res = wnd[0];\n        var current = 0;\n        var currentLen = 0;\n        var start = num.bitLength() % 26;\n        if (start === 0) {\n            start = 26;\n        }\n\n        for (i = num.length - 1; i >= 0; i--) {\n            var word = num.words[i];\n            for (var j = start - 1; j >= 0; j--) {\n                var bit = (word >> j) & 1;\n                if (res !== wnd[0]) {\n                    res = this.sqr(res);\n                }\n\n                if (bit === 0 && current === 0) {\n                    currentLen = 0;\n                    continue;\n                }\n\n                current <<= 1;\n                current |= bit;\n                currentLen++;\n                if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n                res = this.mul(res, wnd[current]);\n                currentLen = 0;\n                current = 0;\n            }\n            start = 26;\n        }\n\n        return res;\n    };\n\n    Red.prototype.convertTo = function convertTo (num) {\n        var r = num.umod(this.m);\n\n        return r === num ? r.clone() : r;\n    };\n\n    Red.prototype.convertFrom = function convertFrom (num) {\n        var res = num.clone();\n        res.red = null;\n        return res;\n    };\n\n    //\n    // Montgomery method engine\n    //\n\n    BN.mont = function mont (num) {\n        return new Mont(num);\n    };\n\n    function Mont (m) {\n        Red.call(this, m);\n\n        this.shift = this.m.bitLength();\n        if (this.shift % 26 !== 0) {\n            this.shift += 26 - (this.shift % 26);\n        }\n\n        this.r = new BN(1).iushln(this.shift);\n        this.r2 = this.imod(this.r.sqr());\n        this.rinv = this.r._invmp(this.m);\n\n        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n        this.minv = this.minv.umod(this.r);\n        this.minv = this.r.sub(this.minv);\n    }\n    inherits(Mont, Red);\n\n    Mont.prototype.convertTo = function convertTo (num) {\n        return this.imod(num.ushln(this.shift));\n    };\n\n    Mont.prototype.convertFrom = function convertFrom (num) {\n        var r = this.imod(num.mul(this.rinv));\n        r.red = null;\n        return r;\n    };\n\n    Mont.prototype.imul = function imul (a, b) {\n        if (a.isZero() || b.isZero()) {\n            a.words[0] = 0;\n            a.length = 1;\n            return a;\n        }\n\n        var t = a.imul(b);\n        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n        var u = t.isub(c).iushrn(this.shift);\n        var res = u;\n\n        if (u.cmp(this.m) >= 0) {\n            res = u.isub(this.m);\n        } else if (u.cmpn(0) < 0) {\n            res = u.iadd(this.m);\n        }\n\n        return res._forceRed(this);\n    };\n\n    Mont.prototype.mul = function mul (a, b) {\n        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n        var t = a.mul(b);\n        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n        var u = t.isub(c).iushrn(this.shift);\n        var res = u;\n        if (u.cmp(this.m) >= 0) {\n            res = u.isub(this.m);\n        } else if (u.cmpn(0) < 0) {\n            res = u.iadd(this.m);\n        }\n\n        return res._forceRed(this);\n    };\n\n    Mont.prototype.invm = function invm (a) {\n        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n        var res = this.imod(a._invmp(this.m).mul(this.r2));\n        return res._forceRed(this);\n    };\n})(typeof module === 'undefined' || module, this);\n"]},"metadata":{},"sourceType":"script"}