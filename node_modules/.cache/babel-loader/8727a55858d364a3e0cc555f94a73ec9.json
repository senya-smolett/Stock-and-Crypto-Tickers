{"ast":null,"code":"function splitRight(self, sep, maxSplit, limit) {\n  if (typeof maxSplit === 'undefined') {\n    var maxSplit = -1;\n  }\n\n  if (typeof limit === 'undefined') {\n    var limit = 0;\n  }\n\n  var splitResult = [self];\n\n  for (var i = self.length - 1; i >= 0; i--) {\n    if (splitResult[0].slice(i).indexOf(sep) === 0 && (splitResult.length <= maxSplit || maxSplit === -1)) {\n      splitResult.splice(1, 0, splitResult[0].slice(i + sep.length)); // insert\n\n      splitResult[0] = splitResult[0].slice(0, i);\n    }\n  }\n\n  if (limit >= 0) {\n    return splitResult.slice(-limit);\n  } else {\n    return splitResult.slice(0, -limit);\n  }\n}\n\nmodule.exports = splitRight;","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/node_modules/string/lib/_splitRight.js"],"names":["splitRight","self","sep","maxSplit","limit","splitResult","i","length","slice","indexOf","splice","module","exports"],"mappings":"AAAA,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,QAA/B,EAAyCC,KAAzC,EAAgD;AAE9C,MAAI,OAAOD,QAAP,KAAoB,WAAxB,EAAqC;AACnC,QAAIA,QAAQ,GAAG,CAAC,CAAhB;AACD;;AACD,MAAI,OAAOC,KAAP,KAAiB,WAArB,EAAkC;AAChC,QAAIA,KAAK,GAAG,CAAZ;AACD;;AAED,MAAIC,WAAW,GAAG,CAACJ,IAAD,CAAlB;;AAEA,OAAK,IAAIK,CAAC,GAAGL,IAAI,CAACM,MAAL,GAAY,CAAzB,EAA4BD,CAAC,IAAI,CAAjC,EAAoCA,CAAC,EAArC,EAAyC;AAEvC,QACED,WAAW,CAAC,CAAD,CAAX,CAAeG,KAAf,CAAqBF,CAArB,EAAwBG,OAAxB,CAAgCP,GAAhC,MAAyC,CAAzC,KACCG,WAAW,CAACE,MAAZ,IAAsBJ,QAAtB,IAAkCA,QAAQ,KAAK,CAAC,CADjD,CADF,EAGE;AACAE,MAAAA,WAAW,CAACK,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBL,WAAW,CAAC,CAAD,CAAX,CAAeG,KAAf,CAAqBF,CAAC,GAACJ,GAAG,CAACK,MAA3B,CAAzB,EADA,CAC8D;;AAC9DF,MAAAA,WAAW,CAAC,CAAD,CAAX,GAAiBA,WAAW,CAAC,CAAD,CAAX,CAAeG,KAAf,CAAqB,CAArB,EAAwBF,CAAxB,CAAjB;AACD;AACF;;AAED,MAAIF,KAAK,IAAI,CAAb,EAAgB;AACd,WAAOC,WAAW,CAACG,KAAZ,CAAkB,CAACJ,KAAnB,CAAP;AACD,GAFD,MAEO;AACL,WAAOC,WAAW,CAACG,KAAZ,CAAkB,CAAlB,EAAqB,CAACJ,KAAtB,CAAP;AACD;AAEF;;AAEDO,MAAM,CAACC,OAAP,GAAiBZ,UAAjB","sourcesContent":["function splitRight(self, sep, maxSplit, limit) {\n\n  if (typeof maxSplit === 'undefined') {\n    var maxSplit = -1;\n  }\n  if (typeof limit === 'undefined') {\n    var limit = 0;\n  }\n\n  var splitResult = [self];\n\n  for (var i = self.length-1; i >= 0; i--) {\n\n    if (\n      splitResult[0].slice(i).indexOf(sep) === 0 &&\n      (splitResult.length <= maxSplit || maxSplit === -1)\n    ) {\n      splitResult.splice(1, 0, splitResult[0].slice(i+sep.length)); // insert\n      splitResult[0] = splitResult[0].slice(0, i)\n    }\n  }\n\n  if (limit >= 0) {\n    return splitResult.slice(-limit);\n  } else {\n    return splitResult.slice(0, -limit);\n  }\n\n}\n\nmodule.exports = splitRight;\n"]},"metadata":{},"sourceType":"script"}