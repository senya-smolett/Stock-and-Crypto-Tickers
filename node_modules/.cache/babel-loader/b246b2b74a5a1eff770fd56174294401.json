{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n}); // Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n// (MIT licensed)\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n  constructor() {\n    this[TYPE] = '';\n    const blobParts = arguments[0];\n    const options = arguments[1];\n    const buffers = [];\n\n    if (blobParts) {\n      const a = blobParts;\n      const length = Number(a.length);\n\n      for (let i = 0; i < length; i++) {\n        const element = a[i];\n        let buffer;\n\n        if (element instanceof Buffer) {\n          buffer = element;\n        } else if (ArrayBuffer.isView(element)) {\n          buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n        } else if (element instanceof ArrayBuffer) {\n          buffer = Buffer.from(element);\n        } else if (element instanceof Blob) {\n          buffer = element[BUFFER];\n        } else {\n          buffer = Buffer.from(typeof element === 'string' ? element : String(element));\n        }\n\n        buffers.push(buffer);\n      }\n    }\n\n    this[BUFFER] = Buffer.concat(buffers);\n    let type = options && options.type !== undefined && String(options.type).toLowerCase();\n\n    if (type && !/[^\\u0020-\\u007E]/.test(type)) {\n      this[TYPE] = type;\n    }\n  }\n\n  get size() {\n    return this[BUFFER].length;\n  }\n\n  get type() {\n    return this[TYPE];\n  }\n\n  slice() {\n    const size = this.size;\n    const start = arguments[0];\n    const end = arguments[1];\n    let relativeStart, relativeEnd;\n\n    if (start === undefined) {\n      relativeStart = 0;\n    } else if (start < 0) {\n      relativeStart = Math.max(size + start, 0);\n    } else {\n      relativeStart = Math.min(start, size);\n    }\n\n    if (end === undefined) {\n      relativeEnd = size;\n    } else if (end < 0) {\n      relativeEnd = Math.max(size + end, 0);\n    } else {\n      relativeEnd = Math.min(end, size);\n    }\n\n    const span = Math.max(relativeEnd - relativeStart, 0);\n    const buffer = this[BUFFER];\n    const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n    const blob = new Blob([], {\n      type: arguments[2]\n    });\n    blob[BUFFER] = slicedBuffer;\n    return blob;\n  }\n\n}\n\nObject.defineProperties(Blob.prototype, {\n  size: {\n    enumerable: true\n  },\n  type: {\n    enumerable: true\n  },\n  slice: {\n    enumerable: true\n  }\n});\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n  value: 'Blob',\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\n\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n  this.message = message;\n  this.type = type; // when err.type is `system`, err.code contains system error code\n\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  } // hide custom error implementation details from end-users\n\n\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n/**\n * body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nconst Stream = require('stream');\n\nvar _require = require('stream');\n\nconst PassThrough = _require.PassThrough;\n/*\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n*/\n\nconst INTERNALS = Symbol('Body internals');\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\n\nfunction Body(body) {\n  var _this = this;\n\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$size = _ref.size;\n\n  let size = _ref$size === undefined ? 0 : _ref$size;\n  var _ref$timeout = _ref.timeout;\n  let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n  if (body == null) {\n    // body is undefined or null\n    body = null;\n  } else if (typeof body === 'string') {// body is string\n  } else if (isURLSearchParams(body)) {// body is a URLSearchParams\n  } else if (body instanceof Blob) {// body is blob\n  } else if (Buffer.isBuffer(body)) {// body is buffer\n  } else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {// body is array buffer\n  } else if (body instanceof Stream) {// body is stream\n  } else {\n    // none of the above\n    // coerce to string\n    body = String(body);\n  }\n\n  this[INTERNALS] = {\n    body,\n    disturbed: false,\n    error: null\n  };\n  this.size = size;\n  this.timeout = timeout;\n\n  if (body instanceof Stream) {\n    body.on('error', function (err) {\n      _this[INTERNALS].error = new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n    });\n  }\n}\n\nBody.prototype = {\n  get body() {\n    return this[INTERNALS].body;\n  },\n\n  get bodyUsed() {\n    return this[INTERNALS].disturbed;\n  },\n\n  /**\n   * Decode response as ArrayBuffer\n   *\n   * @return  Promise\n   */\n  arrayBuffer() {\n    return consumeBody.call(this).then(function (buf) {\n      return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n    });\n  },\n\n  /**\n   * Return raw response as Blob\n   *\n   * @return Promise\n   */\n  blob() {\n    let ct = this.headers && this.headers.get('content-type') || '';\n    return consumeBody.call(this).then(function (buf) {\n      return Object.assign( // Prevent copying\n      new Blob([], {\n        type: ct.toLowerCase()\n      }), {\n        [BUFFER]: buf\n      });\n    });\n  },\n\n  /**\n   * Decode response as json\n   *\n   * @return  Promise\n   */\n  json() {\n    var _this2 = this;\n\n    return consumeBody.call(this).then(function (buffer) {\n      try {\n        return JSON.parse(buffer.toString());\n      } catch (err) {\n        return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n      }\n    });\n  },\n\n  /**\n   * Decode response as text\n   *\n   * @return  Promise\n   */\n  text() {\n    return consumeBody.call(this).then(function (buffer) {\n      return buffer.toString();\n    });\n  },\n\n  /**\n   * Decode response as buffer (non-spec api)\n   *\n   * @return  Promise\n   */\n  buffer() {\n    return consumeBody.call(this);\n  },\n\n  /**\n   * Decode response as text, while automatically detecting the encoding and\n   * trying to decode to UTF-8 (non-spec api)\n   *\n   * @return  Promise\n   */\n  textConverted() {\n    var _this3 = this;\n\n    return consumeBody.call(this).then(function (buffer) {\n      return convertBody(buffer, _this3.headers);\n    });\n  }\n\n}; // In browsers, all properties are enumerable.\n\nObject.defineProperties(Body.prototype, {\n  body: {\n    enumerable: true\n  },\n  bodyUsed: {\n    enumerable: true\n  },\n  arrayBuffer: {\n    enumerable: true\n  },\n  blob: {\n    enumerable: true\n  },\n  json: {\n    enumerable: true\n  },\n  text: {\n    enumerable: true\n  }\n});\n\nBody.mixIn = function (proto) {\n  for (const name of Object.getOwnPropertyNames(Body.prototype)) {\n    // istanbul ignore else: future proof\n    if (!(name in proto)) {\n      const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n      Object.defineProperty(proto, name, desc);\n    }\n  }\n};\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\n\n\nfunction consumeBody() {\n  var _this4 = this;\n\n  if (this[INTERNALS].disturbed) {\n    return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n  }\n\n  this[INTERNALS].disturbed = true;\n\n  if (this[INTERNALS].error) {\n    return Body.Promise.reject(this[INTERNALS].error);\n  } // body is null\n\n\n  if (this.body === null) {\n    return Body.Promise.resolve(Buffer.alloc(0));\n  } // body is string\n\n\n  if (typeof this.body === 'string') {\n    return Body.Promise.resolve(Buffer.from(this.body));\n  } // body is blob\n\n\n  if (this.body instanceof Blob) {\n    return Body.Promise.resolve(this.body[BUFFER]);\n  } // body is buffer\n\n\n  if (Buffer.isBuffer(this.body)) {\n    return Body.Promise.resolve(this.body);\n  } // body is buffer\n\n\n  if (Object.prototype.toString.call(this.body) === '[object ArrayBuffer]') {\n    return Body.Promise.resolve(Buffer.from(this.body));\n  } // istanbul ignore if: should never happen\n\n\n  if (!(this.body instanceof Stream)) {\n    return Body.Promise.resolve(Buffer.alloc(0));\n  } // body is stream\n  // get ready to actually consume the body\n\n\n  let accum = [];\n  let accumBytes = 0;\n  let abort = false;\n  return new Body.Promise(function (resolve, reject) {\n    let resTimeout; // allow timeout on slow response body\n\n    if (_this4.timeout) {\n      resTimeout = setTimeout(function () {\n        abort = true;\n        reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n      }, _this4.timeout);\n    } // handle stream error, such as incorrect content-encoding\n\n\n    _this4.body.on('error', function (err) {\n      reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n    });\n\n    _this4.body.on('data', function (chunk) {\n      if (abort || chunk === null) {\n        return;\n      }\n\n      if (_this4.size && accumBytes + chunk.length > _this4.size) {\n        abort = true;\n        reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n        return;\n      }\n\n      accumBytes += chunk.length;\n      accum.push(chunk);\n    });\n\n    _this4.body.on('end', function () {\n      if (abort) {\n        return;\n      }\n\n      clearTimeout(resTimeout);\n\n      try {\n        resolve(Buffer.concat(accum));\n      } catch (err) {\n        // handle streams that have accumulated too much data (issue #414)\n        reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n      }\n    });\n  });\n}\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\n\n\nfunction convertBody(buffer, headers) {\n  if (typeof convert !== 'function') {\n    throw new Error('The package `encoding` must be installed to use the textConverted() function');\n  }\n\n  const ct = headers.get('content-type');\n  let charset = 'utf-8';\n  let res, str; // header\n\n  if (ct) {\n    res = /charset=([^;]*)/i.exec(ct);\n  } // no charset in content type, peek at response body for at most 1024 bytes\n\n\n  str = buffer.slice(0, 1024).toString(); // html5\n\n  if (!res && str) {\n    res = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n  } // html4\n\n\n  if (!res && str) {\n    res = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\n    if (res) {\n      res = /charset=(.*)/i.exec(res.pop());\n    }\n  } // xml\n\n\n  if (!res && str) {\n    res = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n  } // found charset\n\n\n  if (res) {\n    charset = res.pop(); // prevent decode issues when sites use incorrect encoding\n    // ref: https://hsivonen.fi/encoding-menu/\n\n    if (charset === 'gb2312' || charset === 'gbk') {\n      charset = 'gb18030';\n    }\n  } // turn raw buffers into a single utf-8 buffer\n\n\n  return convert(buffer, 'UTF-8', charset).toString();\n}\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\n\n\nfunction isURLSearchParams(obj) {\n  // Duck-typing as a necessary condition.\n  if (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n    return false;\n  } // Brand-checking and more duck-typing as optional condition.\n\n\n  return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\n\n\nfunction clone(instance) {\n  let p1, p2;\n  let body = instance.body; // don't allow cloning a used body\n\n  if (instance.bodyUsed) {\n    throw new Error('cannot clone body after it is used');\n  } // check that body is a stream and not form-data object\n  // note: we can't clone the form-data object without having it as a dependency\n\n\n  if (body instanceof Stream && typeof body.getBoundary !== 'function') {\n    // tee instance body\n    p1 = new PassThrough();\n    p2 = new PassThrough();\n    body.pipe(p1);\n    body.pipe(p2); // set instance body to teed body and return the other teed body\n\n    instance[INTERNALS].body = p1;\n    body = p2;\n  }\n\n  return body;\n}\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Response or Request instance\n */\n\n\nfunction extractContentType(instance) {\n  const body = instance.body; // istanbul ignore if: Currently, because of a guard in Request, body\n  // can never be null. Included here for completeness.\n\n  if (body === null) {\n    // body is null\n    return null;\n  } else if (typeof body === 'string') {\n    // body is string\n    return 'text/plain;charset=UTF-8';\n  } else if (isURLSearchParams(body)) {\n    // body is a URLSearchParams\n    return 'application/x-www-form-urlencoded;charset=UTF-8';\n  } else if (body instanceof Blob) {\n    // body is blob\n    return body.type || null;\n  } else if (Buffer.isBuffer(body)) {\n    // body is buffer\n    return null;\n  } else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n    // body is array buffer\n    return null;\n  } else if (typeof body.getBoundary === 'function') {\n    // detect form data input from form-data module\n    return `multipart/form-data;boundary=${body.getBoundary()}`;\n  } else {\n    // body is stream\n    // can't really do much about this\n    return null;\n  }\n}\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\n\n\nfunction getTotalBytes(instance) {\n  const body = instance.body; // istanbul ignore if: included for completion\n\n  if (body === null) {\n    // body is null\n    return 0;\n  } else if (typeof body === 'string') {\n    // body is string\n    return Buffer.byteLength(body);\n  } else if (isURLSearchParams(body)) {\n    // body is URLSearchParams\n    return Buffer.byteLength(String(body));\n  } else if (body instanceof Blob) {\n    // body is blob\n    return body.size;\n  } else if (Buffer.isBuffer(body)) {\n    // body is buffer\n    return body.length;\n  } else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n    // body is array buffer\n    return body.byteLength;\n  } else if (body && typeof body.getLengthSync === 'function') {\n    // detect form data input from form-data module\n    if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n    body.hasKnownLength && body.hasKnownLength()) {\n      // 2.x\n      return body.getLengthSync();\n    }\n\n    return null;\n  } else {\n    // body is stream\n    // can't really do much about this\n    return null;\n  }\n}\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\n\n\nfunction writeToStream(dest, instance) {\n  const body = instance.body;\n\n  if (body === null) {\n    // body is null\n    dest.end();\n  } else if (typeof body === 'string') {\n    // body is string\n    dest.write(body);\n    dest.end();\n  } else if (isURLSearchParams(body)) {\n    // body is URLSearchParams\n    dest.write(Buffer.from(String(body)));\n    dest.end();\n  } else if (body instanceof Blob) {\n    // body is blob\n    dest.write(body[BUFFER]);\n    dest.end();\n  } else if (Buffer.isBuffer(body)) {\n    // body is buffer\n    dest.write(body);\n    dest.end();\n  } else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n    // body is array buffer\n    dest.write(Buffer.from(body));\n    dest.end();\n  } else {\n    // body is stream\n    body.pipe(dest);\n  }\n} // expose Promise\n\n\nBody.Promise = global.Promise;\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n  name = `${name}`;\n\n  if (invalidTokenRegex.test(name)) {\n    throw new TypeError(`${name} is not a legal HTTP header name`);\n  }\n}\n\nfunction validateValue(value) {\n  value = `${value}`;\n\n  if (invalidHeaderCharRegex.test(value)) {\n    throw new TypeError(`${value} is not a legal HTTP header value`);\n  }\n}\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\n\n\nfunction find(map, name) {\n  name = name.toLowerCase();\n\n  for (const key in map) {\n    if (key.toLowerCase() === name) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nconst MAP = Symbol('map');\n\nclass Headers {\n  /**\n   * Headers class\n   *\n   * @param   Object  headers  Response headers\n   * @return  Void\n   */\n  constructor() {\n    let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    this[MAP] = Object.create(null);\n\n    if (init instanceof Headers) {\n      const rawHeaders = init.raw();\n      const headerNames = Object.keys(rawHeaders);\n\n      for (const headerName of headerNames) {\n        for (const value of rawHeaders[headerName]) {\n          this.append(headerName, value);\n        }\n      }\n\n      return;\n    } // We don't worry about converting prop to ByteString here as append()\n    // will handle it.\n\n\n    if (init == null) {// no op\n    } else if (typeof init === 'object') {\n      const method = init[Symbol.iterator];\n\n      if (method != null) {\n        if (typeof method !== 'function') {\n          throw new TypeError('Header pairs must be iterable');\n        } // sequence<sequence<ByteString>>\n        // Note: per spec we have to first exhaust the lists then process them\n\n\n        const pairs = [];\n\n        for (const pair of init) {\n          if (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n            throw new TypeError('Each header pair must be iterable');\n          }\n\n          pairs.push(Array.from(pair));\n        }\n\n        for (const pair of pairs) {\n          if (pair.length !== 2) {\n            throw new TypeError('Each header pair must be a name/value tuple');\n          }\n\n          this.append(pair[0], pair[1]);\n        }\n      } else {\n        // record<ByteString, ByteString>\n        for (const key of Object.keys(init)) {\n          const value = init[key];\n          this.append(key, value);\n        }\n      }\n    } else {\n      throw new TypeError('Provided initializer must be an object');\n    }\n  }\n  /**\n   * Return combined header value given name\n   *\n   * @param   String  name  Header name\n   * @return  Mixed\n   */\n\n\n  get(name) {\n    name = `${name}`;\n    validateName(name);\n    const key = find(this[MAP], name);\n\n    if (key === undefined) {\n      return null;\n    }\n\n    return this[MAP][key].join(', ');\n  }\n  /**\n   * Iterate over all headers\n   *\n   * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n   * @param   Boolean   thisArg   `this` context for callback function\n   * @return  Void\n   */\n\n\n  forEach(callback) {\n    let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    let pairs = getHeaders(this);\n    let i = 0;\n\n    while (i < pairs.length) {\n      var _pairs$i = pairs[i];\n      const name = _pairs$i[0],\n            value = _pairs$i[1];\n      callback.call(thisArg, value, name, this);\n      pairs = getHeaders(this);\n      i++;\n    }\n  }\n  /**\n   * Overwrite header values given name\n   *\n   * @param   String  name   Header name\n   * @param   String  value  Header value\n   * @return  Void\n   */\n\n\n  set(name, value) {\n    name = `${name}`;\n    value = `${value}`;\n    validateName(name);\n    validateValue(value);\n    const key = find(this[MAP], name);\n    this[MAP][key !== undefined ? key : name] = [value];\n  }\n  /**\n   * Append a value onto existing header\n   *\n   * @param   String  name   Header name\n   * @param   String  value  Header value\n   * @return  Void\n   */\n\n\n  append(name, value) {\n    name = `${name}`;\n    value = `${value}`;\n    validateName(name);\n    validateValue(value);\n    const key = find(this[MAP], name);\n\n    if (key !== undefined) {\n      this[MAP][key].push(value);\n    } else {\n      this[MAP][name] = [value];\n    }\n  }\n  /**\n   * Check for header name existence\n   *\n   * @param   String   name  Header name\n   * @return  Boolean\n   */\n\n\n  has(name) {\n    name = `${name}`;\n    validateName(name);\n    return find(this[MAP], name) !== undefined;\n  }\n  /**\n   * Delete all header values given name\n   *\n   * @param   String  name  Header name\n   * @return  Void\n   */\n\n\n  delete(name) {\n    name = `${name}`;\n    validateName(name);\n    const key = find(this[MAP], name);\n\n    if (key !== undefined) {\n      delete this[MAP][key];\n    }\n  }\n  /**\n   * Return raw headers (non-spec api)\n   *\n   * @return  Object\n   */\n\n\n  raw() {\n    return this[MAP];\n  }\n  /**\n   * Get an iterator on keys.\n   *\n   * @return  Iterator\n   */\n\n\n  keys() {\n    return createHeadersIterator(this, 'key');\n  }\n  /**\n   * Get an iterator on values.\n   *\n   * @return  Iterator\n   */\n\n\n  values() {\n    return createHeadersIterator(this, 'value');\n  }\n  /**\n   * Get an iterator on entries.\n   *\n   * This is the default iterator of the Headers object.\n   *\n   * @return  Iterator\n   */\n\n\n  [Symbol.iterator]() {\n    return createHeadersIterator(this, 'key+value');\n  }\n\n}\n\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n  value: 'Headers',\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nObject.defineProperties(Headers.prototype, {\n  get: {\n    enumerable: true\n  },\n  forEach: {\n    enumerable: true\n  },\n  set: {\n    enumerable: true\n  },\n  append: {\n    enumerable: true\n  },\n  has: {\n    enumerable: true\n  },\n  delete: {\n    enumerable: true\n  },\n  keys: {\n    enumerable: true\n  },\n  values: {\n    enumerable: true\n  },\n  entries: {\n    enumerable: true\n  }\n});\n\nfunction getHeaders(headers) {\n  let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n  const keys = Object.keys(headers[MAP]).sort();\n  return keys.map(kind === 'key' ? function (k) {\n    return k.toLowerCase();\n  } : kind === 'value' ? function (k) {\n    return headers[MAP][k].join(', ');\n  } : function (k) {\n    return [k.toLowerCase(), headers[MAP][k].join(', ')];\n  });\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n  const iterator = Object.create(HeadersIteratorPrototype);\n  iterator[INTERNAL] = {\n    target,\n    kind,\n    index: 0\n  };\n  return iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n  next() {\n    // istanbul ignore if\n    if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n      throw new TypeError('Value of `this` is not a HeadersIterator');\n    }\n\n    var _INTERNAL = this[INTERNAL];\n    const target = _INTERNAL.target,\n          kind = _INTERNAL.kind,\n          index = _INTERNAL.index;\n    const values = getHeaders(target, kind);\n    const len = values.length;\n\n    if (index >= len) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    this[INTERNAL].index = index + 1;\n    return {\n      value: values[index],\n      done: false\n    };\n  }\n\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n  value: 'HeadersIterator',\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\n\nfunction exportNodeCompatibleHeaders(headers) {\n  const obj = Object.assign({\n    __proto__: null\n  }, headers[MAP]); // http.request() only supports string as Host header. This hack makes\n  // specifying custom Host header possible.\n\n  const hostHeaderKey = find(headers[MAP], 'Host');\n\n  if (hostHeaderKey !== undefined) {\n    obj[hostHeaderKey] = obj[hostHeaderKey][0];\n  }\n\n  return obj;\n}\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\n\n\nfunction createHeadersLenient(obj) {\n  const headers = new Headers();\n\n  for (const name of Object.keys(obj)) {\n    if (invalidTokenRegex.test(name)) {\n      continue;\n    }\n\n    if (Array.isArray(obj[name])) {\n      for (const val of obj[name]) {\n        if (invalidHeaderCharRegex.test(val)) {\n          continue;\n        }\n\n        if (headers[MAP][name] === undefined) {\n          headers[MAP][name] = [val];\n        } else {\n          headers[MAP][name].push(val);\n        }\n      }\n    } else if (!invalidHeaderCharRegex.test(obj[name])) {\n      headers[MAP][name] = [obj[name]];\n    }\n  }\n\n  return headers;\n}\n/**\n * response.js\n *\n * Response class provides content decoding\n */\n\n\nvar _require$1 = require('http');\n\nconst STATUS_CODES = _require$1.STATUS_CODES;\nconst INTERNALS$1 = Symbol('Response internals');\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\n\nclass Response {\n  constructor() {\n    let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    Body.call(this, body, opts);\n    const status = opts.status || 200;\n    this[INTERNALS$1] = {\n      url: opts.url,\n      status,\n      statusText: opts.statusText || STATUS_CODES[status],\n      headers: new Headers(opts.headers)\n    };\n  }\n\n  get url() {\n    return this[INTERNALS$1].url;\n  }\n\n  get status() {\n    return this[INTERNALS$1].status;\n  }\n  /**\n   * Convenience property representing if the request ended normally\n   */\n\n\n  get ok() {\n    return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n  }\n\n  get statusText() {\n    return this[INTERNALS$1].statusText;\n  }\n\n  get headers() {\n    return this[INTERNALS$1].headers;\n  }\n  /**\n   * Clone this response\n   *\n   * @return  Response\n   */\n\n\n  clone() {\n    return new Response(clone(this), {\n      url: this.url,\n      status: this.status,\n      statusText: this.statusText,\n      headers: this.headers,\n      ok: this.ok\n    });\n  }\n\n}\n\nBody.mixIn(Response.prototype);\nObject.defineProperties(Response.prototype, {\n  url: {\n    enumerable: true\n  },\n  status: {\n    enumerable: true\n  },\n  ok: {\n    enumerable: true\n  },\n  statusText: {\n    enumerable: true\n  },\n  headers: {\n    enumerable: true\n  },\n  clone: {\n    enumerable: true\n  }\n});\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n  value: 'Response',\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n/**\n * request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nvar _require$2 = require('url');\n\nconst format_url = _require$2.format;\nconst parse_url = _require$2.parse;\nconst INTERNALS$2 = Symbol('Request internals');\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\n\nfunction isRequest(input) {\n  return typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\n\n\nclass Request {\n  constructor(input) {\n    let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let parsedURL; // normalize input\n\n    if (!isRequest(input)) {\n      if (input && input.href) {\n        // in order to support Node.js' Url objects; though WHATWG's URL objects\n        // will fall into this branch also (since their `toString()` will return\n        // `href` property anyway)\n        parsedURL = parse_url(input.href);\n      } else {\n        // coerce input to a string before attempting to parse\n        parsedURL = parse_url(`${input}`);\n      }\n\n      input = {};\n    } else {\n      parsedURL = parse_url(input.url);\n    }\n\n    let method = init.method || input.method || 'GET';\n    method = method.toUpperCase();\n\n    if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n      throw new TypeError('Request with GET/HEAD method cannot have body');\n    }\n\n    let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n    Body.call(this, inputBody, {\n      timeout: init.timeout || input.timeout || 0,\n      size: init.size || input.size || 0\n    });\n    const headers = new Headers(init.headers || input.headers || {});\n\n    if (init.body != null) {\n      const contentType = extractContentType(this);\n\n      if (contentType !== null && !headers.has('Content-Type')) {\n        headers.append('Content-Type', contentType);\n      }\n    }\n\n    this[INTERNALS$2] = {\n      method,\n      redirect: init.redirect || input.redirect || 'follow',\n      headers,\n      parsedURL\n    }; // node-fetch-only options\n\n    this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n    this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n    this.counter = init.counter || input.counter || 0;\n    this.agent = init.agent || input.agent;\n  }\n\n  get method() {\n    return this[INTERNALS$2].method;\n  }\n\n  get url() {\n    return format_url(this[INTERNALS$2].parsedURL);\n  }\n\n  get headers() {\n    return this[INTERNALS$2].headers;\n  }\n\n  get redirect() {\n    return this[INTERNALS$2].redirect;\n  }\n  /**\n   * Clone this request\n   *\n   * @return  Request\n   */\n\n\n  clone() {\n    return new Request(this);\n  }\n\n}\n\nBody.mixIn(Request.prototype);\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n  value: 'Request',\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nObject.defineProperties(Request.prototype, {\n  method: {\n    enumerable: true\n  },\n  url: {\n    enumerable: true\n  },\n  headers: {\n    enumerable: true\n  },\n  redirect: {\n    enumerable: true\n  },\n  clone: {\n    enumerable: true\n  }\n});\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\n\nfunction getNodeRequestOptions(request) {\n  const parsedURL = request[INTERNALS$2].parsedURL;\n  const headers = new Headers(request[INTERNALS$2].headers); // fetch step 1.3\n\n  if (!headers.has('Accept')) {\n    headers.set('Accept', '*/*');\n  } // Basic fetch\n\n\n  if (!parsedURL.protocol || !parsedURL.hostname) {\n    throw new TypeError('Only absolute URLs are supported');\n  }\n\n  if (!/^https?:$/.test(parsedURL.protocol)) {\n    throw new TypeError('Only HTTP(S) protocols are supported');\n  } // HTTP-network-or-cache fetch steps 2.4-2.7\n\n\n  let contentLengthValue = null;\n\n  if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n    contentLengthValue = '0';\n  }\n\n  if (request.body != null) {\n    const totalBytes = getTotalBytes(request);\n\n    if (typeof totalBytes === 'number') {\n      contentLengthValue = String(totalBytes);\n    }\n  }\n\n  if (contentLengthValue) {\n    headers.set('Content-Length', contentLengthValue);\n  } // HTTP-network-or-cache fetch step 2.11\n\n\n  if (!headers.has('User-Agent')) {\n    headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n  } // HTTP-network-or-cache fetch step 2.15\n\n\n  if (request.compress) {\n    headers.set('Accept-Encoding', 'gzip,deflate');\n  }\n\n  if (!headers.has('Connection') && !request.agent) {\n    headers.set('Connection', 'close');\n  } // HTTP-network fetch step 4.2\n  // chunked encoding is handled by Node.js\n\n\n  return Object.assign({}, parsedURL, {\n    method: request.method,\n    headers: exportNodeCompatibleHeaders(headers),\n    agent: request.agent\n  });\n}\n/**\n * index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\n\nconst http = require('http');\n\nconst https = require('https');\n\nvar _require$3 = require('stream');\n\nconst PassThrough$1 = _require$3.PassThrough;\n\nvar _require2 = require('url');\n\nconst resolve_url = _require2.resolve;\n\nconst zlib = require('zlib');\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\n\n\nfunction fetch(url, opts) {\n  // allow custom promise\n  if (!fetch.Promise) {\n    throw new Error('native promise missing, set fetch.Promise to your favorite alternative');\n  }\n\n  Body.Promise = fetch.Promise; // wrap http.request into fetch\n\n  return new fetch.Promise(function (resolve, reject) {\n    // build request object\n    const request = new Request(url, opts);\n    const options = getNodeRequestOptions(request);\n    const send = (options.protocol === 'https:' ? https : http).request; // send request\n\n    const req = send(options);\n    let reqTimeout;\n\n    function finalize() {\n      req.abort();\n      clearTimeout(reqTimeout);\n    }\n\n    if (request.timeout) {\n      req.once('socket', function (socket) {\n        reqTimeout = setTimeout(function () {\n          reject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n          finalize();\n        }, request.timeout);\n      });\n    }\n\n    req.on('error', function (err) {\n      reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n      finalize();\n    });\n    req.on('response', function (res) {\n      clearTimeout(reqTimeout);\n      const headers = createHeadersLenient(res.headers); // HTTP fetch step 5\n\n      if (fetch.isRedirect(res.statusCode)) {\n        // HTTP fetch step 5.2\n        const location = headers.get('Location'); // HTTP fetch step 5.3\n\n        const locationURL = location === null ? null : resolve_url(request.url, location); // HTTP fetch step 5.5\n\n        switch (request.redirect) {\n          case 'error':\n            reject(new FetchError(`redirect mode is set to error: ${request.url}`, 'no-redirect'));\n            finalize();\n            return;\n\n          case 'manual':\n            // node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n            if (locationURL !== null) {\n              headers.set('Location', locationURL);\n            }\n\n            break;\n\n          case 'follow':\n            // HTTP-redirect fetch step 2\n            if (locationURL === null) {\n              break;\n            } // HTTP-redirect fetch step 5\n\n\n            if (request.counter >= request.follow) {\n              reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n              finalize();\n              return;\n            } // HTTP-redirect fetch step 6 (counter increment)\n            // Create a new Request object.\n\n\n            const requestOpts = {\n              headers: new Headers(request.headers),\n              follow: request.follow,\n              counter: request.counter + 1,\n              agent: request.agent,\n              compress: request.compress,\n              method: request.method,\n              body: request.body\n            }; // HTTP-redirect fetch step 9\n\n            if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n              reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n              finalize();\n              return;\n            } // HTTP-redirect fetch step 11\n\n\n            if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n              requestOpts.method = 'GET';\n              requestOpts.body = undefined;\n              requestOpts.headers.delete('content-length');\n            } // HTTP-redirect fetch step 15\n\n\n            resolve(fetch(new Request(locationURL, requestOpts)));\n            finalize();\n            return;\n        }\n      } // prepare response\n\n\n      let body = res.pipe(new PassThrough$1());\n      const response_options = {\n        url: request.url,\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: headers,\n        size: request.size,\n        timeout: request.timeout\n      }; // HTTP-network fetch step 12.1.1.3\n\n      const codings = headers.get('Content-Encoding'); // HTTP-network fetch step 12.1.1.4: handle content codings\n      // in following scenarios we ignore compression support\n      // 1. compression support is disabled\n      // 2. HEAD request\n      // 3. no Content-Encoding header\n      // 4. no content response (204)\n      // 5. content not modified response (304)\n\n      if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n        resolve(new Response(body, response_options));\n        return;\n      } // For Node v6+\n      // Be less strict when decoding compressed responses, since sometimes\n      // servers send slightly invalid responses that are still accepted\n      // by common browsers.\n      // Always using Z_SYNC_FLUSH is what cURL does.\n\n\n      const zlibOptions = {\n        flush: zlib.Z_SYNC_FLUSH,\n        finishFlush: zlib.Z_SYNC_FLUSH\n      }; // for gzip\n\n      if (codings == 'gzip' || codings == 'x-gzip') {\n        body = body.pipe(zlib.createGunzip(zlibOptions));\n        resolve(new Response(body, response_options));\n        return;\n      } // for deflate\n\n\n      if (codings == 'deflate' || codings == 'x-deflate') {\n        // handle the infamous raw deflate response from old servers\n        // a hack for old IIS and Apache servers\n        const raw = res.pipe(new PassThrough$1());\n        raw.once('data', function (chunk) {\n          // see http://stackoverflow.com/questions/37519828\n          if ((chunk[0] & 0x0F) === 0x08) {\n            body = body.pipe(zlib.createInflate());\n          } else {\n            body = body.pipe(zlib.createInflateRaw());\n          }\n\n          resolve(new Response(body, response_options));\n        });\n        return;\n      } // otherwise, use response as-is\n\n\n      resolve(new Response(body, response_options));\n    });\n    writeToStream(req, request);\n  });\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\n\n\nfetch.isRedirect = function (code) {\n  return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n}; // Needed for TypeScript.\n\n\nfetch.default = fetch; // expose Promise\n\nfetch.Promise = global.Promise; // Igor Kroitor 2019 Dec 30\n// expose http and https\n// https://github.com/ccxt/ccxt/issues/6327\n\nfetch.http = http;\nfetch.https = https;\nmodule.exports = exports = fetch;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;","map":{"version":3,"sources":["C:/Users/senya/Documents/Coding/React Projects/react-stock-ticker/node_modules/ccxt/js/static_dependencies/node-fetch/index.js"],"names":["Object","defineProperty","exports","value","BUFFER","Symbol","TYPE","Blob","constructor","blobParts","arguments","options","buffers","a","length","Number","i","element","buffer","Buffer","ArrayBuffer","isView","from","byteOffset","byteLength","String","push","concat","type","undefined","toLowerCase","test","size","slice","start","end","relativeStart","relativeEnd","Math","max","min","span","slicedBuffer","blob","defineProperties","prototype","enumerable","toStringTag","writable","configurable","FetchError","message","systemError","Error","call","code","errno","captureStackTrace","create","name","Stream","require","_require","PassThrough","INTERNALS","Body","body","_this","_ref","_ref$size","_ref$timeout","timeout","isURLSearchParams","isBuffer","toString","disturbed","error","on","err","url","bodyUsed","arrayBuffer","consumeBody","then","buf","ct","headers","get","assign","json","_this2","JSON","parse","Promise","reject","text","textConverted","_this3","convertBody","mixIn","proto","getOwnPropertyNames","desc","getOwnPropertyDescriptor","_this4","TypeError","resolve","alloc","accum","accumBytes","abort","resTimeout","setTimeout","chunk","clearTimeout","convert","charset","res","str","exec","pop","obj","append","delete","getAll","has","set","sort","clone","instance","p1","p2","getBoundary","pipe","extractContentType","getTotalBytes","getLengthSync","_lengthRetrievers","hasKnownLength","writeToStream","dest","write","global","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","find","map","key","MAP","Headers","init","rawHeaders","raw","headerNames","keys","headerName","method","iterator","pairs","pair","Array","join","forEach","callback","thisArg","getHeaders","_pairs$i","createHeadersIterator","values","entries","kind","k","INTERNAL","target","HeadersIteratorPrototype","index","setPrototypeOf","next","getPrototypeOf","_INTERNAL","len","done","exportNodeCompatibleHeaders","__proto__","hostHeaderKey","createHeadersLenient","isArray","val","_require$1","STATUS_CODES","INTERNALS$1","Response","opts","status","statusText","ok","_require$2","format_url","format","parse_url","INTERNALS$2","isRequest","input","Request","parsedURL","href","toUpperCase","inputBody","contentType","redirect","follow","compress","counter","agent","getNodeRequestOptions","request","protocol","hostname","contentLengthValue","totalBytes","http","https","_require$3","PassThrough$1","_require2","resolve_url","zlib","fetch","send","req","reqTimeout","finalize","once","socket","isRedirect","statusCode","location","locationURL","requestOpts","response_options","statusMessage","codings","zlibOptions","flush","Z_SYNC_FLUSH","finishFlush","createGunzip","createInflate","createInflateRaw","default","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n// (MIT licensed)\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\n/**\n * body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nconst Stream = require('stream');\n\nvar _require = require('stream');\n\nconst PassThrough = _require.PassThrough;\n\n/*\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n*/\n\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is array buffer\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t} else {\n\t\t// none of the above\n\t\t// coerce to string\n\t\tbody = String(body);\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\t_this[INTERNALS].error = new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\t// body is null\n\tif (this.body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is string\n\tif (typeof this.body === 'string') {\n\t\treturn Body.Promise.resolve(Buffer.from(this.body));\n\t}\n\n\t// body is blob\n\tif (this.body instanceof Blob) {\n\t\treturn Body.Promise.resolve(this.body[BUFFER]);\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(this.body)) {\n\t\treturn Body.Promise.resolve(this.body);\n\t}\n\n\t// body is buffer\n\tif (Object.prototype.toString.call(this.body) === '[object ArrayBuffer]') {\n\t\treturn Body.Promise.resolve(Buffer.from(this.body));\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(this.body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream error, such as incorrect content-encoding\n\t\t_this4.body.on('error', function (err) {\n\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t});\n\n\t\t_this4.body.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\t_this4.body.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Response or Request instance\n */\nfunction extractContentType(instance) {\n\tconst body = instance.body;\n\n\t// istanbul ignore if: Currently, because of a guard in Request, body\n\t// can never be null. Included here for completeness.\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is array buffer\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\t// istanbul ignore if: included for completion\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn Buffer.byteLength(body);\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is URLSearchParams\n\t\treturn Buffer.byteLength(String(body));\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is array buffer\n\t\treturn body.byteLength;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is URLSearchParams\n\t\tdest.write(Buffer.from(String(body)));\n\t\tdest.end();\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t\tdest.write(body[BUFFER]);\n\t\tdest.end();\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is array buffer\n\t\tdest.write(Buffer.from(body));\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name)) {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) {\n\t\t\t// no op\n\t\t} else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\n/**\n * response.js\n *\n * Response class provides content decoding\n */\n\nvar _require$1 = require('http');\n\nconst STATUS_CODES = _require$1.STATUS_CODES;\n\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders: new Headers(opts.headers)\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url;\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nvar _require$2 = require('url');\n\nconst format_url = _require$2.format;\nconst parse_url = _require$2.parse;\n\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (init.body != null) {\n\t\t\tconst contentType = extractContentType(this);\n\t\t\tif (contentType !== null && !headers.has('Content-Type')) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\tif (!headers.has('Connection') && !request.agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent: request.agent\n\t});\n}\n\n/**\n * index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nconst http = require('http');\nconst https = require('https');\n\nvar _require$3 = require('stream');\n\nconst PassThrough$1 = _require$3.PassThrough;\n\nvar _require2 = require('url');\n\nconst resolve_url = _require2.resolve;\n\nconst zlib = require('zlib');\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresolve(new Response(body, response_options));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresolve(new Response(body, response_options));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresolve(new Response(body, response_options));\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresolve(new Response(body, response_options));\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// Needed for TypeScript.\nfetch.default = fetch;\n\n// expose Promise\nfetch.Promise = global.Promise;\n\n// Igor Kroitor 2019 Dec 30\n// expose http and https\n// https://github.com/ccxt/ccxt/issues/6327\nfetch.http = http\nfetch.https = https\n\nmodule.exports = exports = fetch;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n"]},"metadata":{},"sourceType":"script"}